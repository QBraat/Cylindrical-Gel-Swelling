(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    198552,       3902]
NotebookOptionsPosition[    195213,       3842]
NotebookOutlinePosition[    195747,       3861]
CellTagsIndexPosition[    195704,       3858]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.83178817628203*^9, 3.8317881813402424`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7056c22b-47f5-4c49-b6c0-1bf1293baf96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.831789484490717*^9, 3.831789497004266*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"c80f0998-5235-47f0-a5a8-d851975a7ad2"],

Cell[CellGroupData[{

Cell["Import experimental data", "Subsection",
 CellChangeTimes->{{3.83466067077011*^9, 
  3.83466068154207*^9}},ExpressionUUID->"daf25c25-6822-497e-9dc5-\
a62683e3f300"],

Cell[BoxData[
 RowBox[{
  RowBox[{"data3kD", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "\"\<Data_16hr_cycle.mat\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8092550455135612`*^9, 3.8092551394955263`*^9}, 
   3.809255207425746*^9, {3.809255723950961*^9, 3.809255724634655*^9}, {
   3.8338799541627555`*^9, 3.833879954962988*^9}, 3.834660548794697*^9},
 CellLabel->"In[3]:=",ExpressionUUID->"6df2667a-755a-418c-9287-8d2bb4486b39"],

Cell[BoxData[
 RowBox[{
  RowBox[{"time", "=", 
   RowBox[{"Take", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data3kD", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", "1000"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8344982590794473`*^9, 3.8344982645057898`*^9}},
 CellLabel->
  "In[585]:=",ExpressionUUID->"b25cb6a7-ea16-4cb2-b1a0-b1de3a14f42d"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Import data from previous run -- make sure that export is uncommented\
\>", "Subsection",
 CellChangeTimes->{{3.834660686527943*^9, 
  3.834660701519394*^9}},ExpressionUUID->"9bfcbe2a-1a10-4103-84de-\
cdd305769f64"],

Cell["\<\
We import the experimental data, as well as the data before and after the \
transition and combine it with time. The arrays are manipulated so that each \
array has the structure {{time1,\[Epsilon]1},{time2,\[Epsilon]2}, ... {timeN, \
\[Epsilon]N}};\
\>", "Text",
 CellChangeTimes->{{3.8346607145491962`*^9, 
  3.8346607919723935`*^9}},ExpressionUUID->"2de877b8-cb6f-455c-b17a-\
6431858b02f0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]binitial", " ", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", 
      RowBox[{"time", ",", " ", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Epsilon]binitial.mat\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]tinitial", " ", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Epsilon]ttinitial.mat\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]linitial", " ", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", " ", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Epsilon]llinitial.mat\>\"", "]"}], 
          "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]initial", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Alpha]initial.mat\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8317881597028046`*^9, 3.831788219979292*^9}, {
  3.831789140955584*^9, 3.831789260575588*^9}, {3.831789372367717*^9, 
  3.831789397392425*^9}, {3.831789469051518*^9, 3.8317894805252237`*^9}, {
  3.8344982809113646`*^9, 3.834498317458805*^9}},
 CellLabel->
  "In[586]:=",ExpressionUUID->"0f0209b1-9ef0-41e9-8c58-3fc5ee4ca6ba"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]bfinal", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Epsilon]bfinal.mat\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]tfinal", " ", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", " ", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Epsilon]tfinal.mat\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]lfinal", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Epsilon]lfinal.mat\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]final", " ", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", " ", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<\[Alpha]final.mat\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.831789350742592*^9, 3.8317893688571224`*^9}, {
  3.8344983050759535`*^9, 3.834498322241272*^9}},
 CellLabel->
  "In[590]:=",ExpressionUUID->"76dab2ff-4af0-453d-864c-330ecf8d1657"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Epsilon]texp", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"Import", "[", "\"\<\[Epsilon]tt-exp.mat\>\"", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "1000"}], "]"}]}], "}"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Epsilon]lexp", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", 
       RowBox[{"Take", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Transpose", "[", 
           RowBox[{
            RowBox[{"Import", "[", "\"\<\[Epsilon]ll-exp.mat\>\"", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "1000"}], "]"}]}], "}"}], 
     "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]exp", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", " ", 
      RowBox[{"time", ",", 
       RowBox[{
        RowBox[{"Transpose", "[", 
         RowBox[{
          RowBox[{"Import", "[", "\"\<Vratio-exp.mat\>\"", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "]"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.83178823757474*^9, 3.831788256131097*^9}, {
  3.8317892365262494`*^9, 3.831789255221938*^9}, {3.831789301122487*^9, 
  3.831789340095217*^9}, {3.834498309866749*^9, 3.8344983871944313`*^9}},
 CellLabel->
  "In[594]:=",ExpressionUUID->"bd49b49e-d1e4-4bf4-9bbf-57617ae17804"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization", "Subsection",
 CellChangeTimes->{{3.8346607995190887`*^9, 
  3.834660801235201*^9}},ExpressionUUID->"6051467c-dbcb-4e90-a3fb-\
6054dcc6121d"],

Cell["\<\
Plot of the initial range of the material. These are the first 700 \
experimental data points. The main settings are related to the lay-out of the \
plot\
\>", "Text",
 CellChangeTimes->{{3.834660804555588*^9, 
  3.8346608451333885`*^9}},ExpressionUUID->"ad20c1b9-3551-4679-a0ed-\
3a682d1e8f2c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pinitial", " ", "=", " ", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"\[Epsilon]tinitial", ",", "700"}], "]"}], ",", 
      RowBox[{"Take", "[", 
       RowBox[{"\[Epsilon]linitial", ",", "700"}], "]"}]}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<t (sec)\>\"", ",", "15"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Epsilon]\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Green", ",", " ", "Red", ",", "Blue"}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(tt\)]\), before\>\"", ",", 
       " ", "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(ll\)]\), before\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8317892642992897`*^9, 3.831789268453678*^9}, {
   3.831789402357349*^9, 3.831789441673869*^9}, {3.8317895328976593`*^9, 
   3.8317895626860876`*^9}, {3.8317895989773436`*^9, 3.831789601513636*^9}, {
   3.8317896927299814`*^9, 3.8317896951355944`*^9}, {3.834498135999522*^9, 
   3.8344981478675137`*^9}, {3.8344984528563657`*^9, 
   3.8344984850073867`*^9}, {3.834498539386263*^9, 3.834498611022333*^9}, {
   3.8344986502543774`*^9, 3.8344986790776105`*^9}, 3.834499108584947*^9},
 CellLabel->
  "In[597]:=",ExpressionUUID->"caf2167c-5b43-4ba2-bbb7-7ca8799bb11a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
8vnezI01HpmRU/4PxpLcTg==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1: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
n0P2QH7Z783gVdyCL9bX1cjk+nKL9+C8oW9SMk+SD2J9b+NeTTe5RUdxfR4d
yheVkePR36tVa9NJ81MwXyXSpOfkU9zncd47B1tVLbmFq/DHY+obdnOLb2N9
dnrGhDhyHtZHpbleu8UtKsD+Mnp1si/IFchDZyw9/JPmv4C1nPspT0/h8xtw
vQwWhty1J7dgvleRhmEwt/gr+vq3fb5dJP9G//wGv4Ml3KLu5cyhzsjWuZUs
Wc6E5zN/hvVN5fvJIP89SstOkzyinNX+MEps2cAtjEOuv6k+6ji3WAUOsisa
WUhWhxeavv71k1s0G+tl/L++GnWae345U+wWl6Iyn5stLGci9RsyjSu5hWXo
J60crHeEbIt5nyImLy7gFq/BeS+N8HP7Q16PfrD4dKXaGT5/K3x2t/FcO/JO
rL/U2zfYj5v5IxcKRyWc4hb2wxp7E+YVkg+VswTbXU9+ypzl82Nw3pcF+TJL
yQk4b2Oi3uogbtEZ9C0SLkZlcbOMcib2rb00tpl8HftPSnkxSTaNzxdjv5NL
Xm2bzS1+iNxR0d7TlVxczlhV4IrIVG7RM/RDRq56UE9+jfnRJ3J2jk3n899h
vVRiQ6Q1+RPO13nlg1UYt/AT16v3OFsJMbkT8z4ekVVu4Rb3qmCsQnlBtc45
Pn9gBRO2+K02DCIPhdNOvZ2Wz80UKlit3cWigoHnuSdWMPHGXebeC7iFqRX4
fVXVL9CXWzwT81fol928Qp6L9U8eHnVs4BYZYv6VJ1Uv2QXuJRVMcVnySs8I
brYC8+UjJ+i95BbskbvfVrBSvsj9XwVLuDR/W84GbrEr+kuTjbNSyO7Y/03Z
i8TX3CKfCtb2TUN20vAM7iDs7y7+KrGAmx2oYGo95pmt9uIWjlQwh5K7H0MS
yXFYL1pXOqGQW5wMXyzwM/hM89Kx/krulwGDL3FfqWAZsht130/nZrew34sK
7Wv/kXORe5e/fxPDLTzB+qhyT9nH5PIKZt5d4b3tT25xNa7f5O491ytd5n6D
6zGun4y6BbfofQUrmTZ3RvUubvYF6923LtiSQu7AeZ0PaH5/yy10q2Rtkxt8
GyZc4e5XySJ2fIgcv4pbPLiSqcnKx6nHcIuGw3/rqt0fkcdUsi1a3zYv/sPN
lCuZUGRnoKuayT29kinq/zjUYz23oI31dfMKO8+T9SrxvEg7Fn/mFi/AeeT3
VShpXeXzzTH/iu4WVS+yNXx1qa5bFjdzqGSs8/HTcV/JLji/U2Cs1dQsPn8L
5omqJV/vzZr3f49EA18=
         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"\[Epsilon]\"", 15, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"t (sec)\"", 15, StripOnInput -> False], TraditionalForm],
         None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[
       GrayLevel[0], 13], GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 21952.}, {-7.929108637338977*^-6, 
       0.08799547233002492}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(tt\\)]\\), before\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(ll\\)]\\), before\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.83178927462951*^9, {3.8317893298135376`*^9, 3.831789341749896*^9}, {
   3.831789399398288*^9, 3.831789603046259*^9}, {3.8317896873713207`*^9, 
   3.8317897000222683`*^9}, {3.831791959372175*^9, 3.8317919643586516`*^9}, 
   3.8320667155361614`*^9, 3.832066787321619*^9, 3.83221595447141*^9, 
   3.8322189444060717`*^9, 3.8344981181937056`*^9, {3.834498149587206*^9, 
   3.834498174297086*^9}, {3.834498327516458*^9, 3.8344983554715643`*^9}, 
   3.834498388649023*^9, {3.834498431010688*^9, 3.8344984867870264`*^9}, {
   3.834498527184063*^9, 3.834498574032656*^9}, {3.8344986127786307`*^9, 
   3.8344987686801567`*^9}, {3.8344988034114037`*^9, 3.834498817412716*^9}, {
   3.83449909897243*^9, 3.834499110066384*^9}, {3.8344993567634444`*^9, 
   3.8344993668316054`*^9}},
 CellLabel->
  "Out[597]=",ExpressionUUID->"6bfc974c-ecd4-48e1-931a-c8beeeb6e539"]
}, Open  ]],

Cell["\<\
Plot of the initial range of the material. These are the 750 until 950 \
experimental data points. The main settings are related to the lay - out of \
the plot\
\>", "Text",
 CellChangeTimes->{{3.8346608576503844`*^9, 
  3.8346608715605516`*^9}},ExpressionUUID->"714d1af1-09b6-4f72-ba41-\
c418c87d743a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pfinal", " ", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Take", "[", 
       RowBox[{"\[Epsilon]tfinal", ",", 
        RowBox[{"{", 
         RowBox[{"750", ",", "950"}], "}"}]}], "]"}], ",", 
      RowBox[{"Take", "[", 
       RowBox[{"\[Epsilon]lfinal", ",", 
        RowBox[{"{", 
         RowBox[{"750", ",", "950"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<t (sec)\>\"", ",", "15"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Epsilon]\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Dashed", ",", "Green"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", " ", "Red"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Dashed", ",", "Blue"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(tt\)]\), after\>\"", ",", 
       " ", "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(ll\)]\), after\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8317895121897755`*^9, 3.831789596039509*^9}, 
   3.8317896986685143`*^9, {3.83449815422443*^9, 3.834498172779058*^9}, 
   3.834498472706447*^9, 3.8344985260614557`*^9, {3.83449868189682*^9, 
   3.8344986871017733`*^9}, 3.8344991069458323`*^9, 
   3.834660852231762*^9},ExpressionUUID->"de46d4df-e6c3-4b6d-a8d6-\
2163c756bf0a"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[0, 1, 0]], 
        LineBox[CompressedData["
1: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
wX8/Ro9zGsmDamDA5OdfWcqlTn8DjCy2bA==
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]], 
        LineBox[CompressedData["
1:eJwt1AtUjekawPHPpelmlGtJKsmlXLpMMSuqh+QYlzQldCKbtimObKJQ6DMp
l6TUyaUJ+4zqRMnuFLrR59JQbGOQffuizSlNDaKpaaRmHut9Wstq/db7vv/3
eT+W8etlgRsGchxXh38+//78w/c8g6YC35bAgPM+nw2cCprilkcWbCQboY3f
N5onMHPmKpDELXNPOcksWKhALr6bKpaTbVVgVyzf8E0DMz9ZBdD1pXzre7Kz
CoQF/V1tprmsPwt7d62NUhzIPirgEmOTznkyc/9Abw4WpEuZBX8V8EVOpYcj
yCvwfs3bqWOSmPkwnPffaYM75OTvcD2jNiu2mvpb0P7tFl1PqR+LvcLxjvm/
kvfhPP0fd639RP0k9OjU4w2mecypOE9urdk2R2Y+C9cFh5KRvsxwBt/XFPzV
m9XkPFzfsKC2JJqZu4SOeDXH9yD1ynDelwWtHqfJ1Tjf+wSZ5wXq38H9+966
PasmP8B17/yH9iL1n+J9DRbeXj3UF/H7Rw5b3Ts8n/n/6OgpOTOnMgvtn9el
o8p8yJ34ntnq8tdBzHwvzhNRN50LZ4ZBauDn85t37iGbqoHzOmXcmk39EWpo
uu0sP3yFelZqsJMaG19/SLZXg+T0C4O+V9R3UoM86IVJcjfZDdevtnptMvwv
63uip31SbxjNzM3D+6xSb0Z6kBfheU9DZUwQs/At7h9Q8/bjVnII3p/fW1N5
mJlfh+f/LFc6n6P+Rtx/aV34wFLyNpw/8XL61VvU343ri0dU2Twm78f1J8uW
5HRQ/xB+j/5ninmmBayfjvuDnRbqJ5BP4Xxv1or7ZjODHPdPdhvutpxcoAYh
x/GvNRuZOQXOl3UvOi6eWbimBngSkjP/FLkG+8U7uZhy6t/F/fLOSL9n5J+x
lyQmf3xHfRW+39+51vqLC8wv8PyS8QHPrZi519jXZYYYz2AW3uK6Nqy01ovc
jR7huerYama+H3sGst5B8dT7QgMSpcxRn0UeqgHhnqQ7WUH90RqAOSFto+6T
bTTApa7sqtFTf6IGms683OXeRf3pGpDPza4aaHKR2QPPZxZtO+DEDF4asAt+
PTF7IdkP9x87d8lQyswtxXks5xyZtI8cjH0YFxOVxSysxp7LeIc/LlJfivMu
q4ftAnkzng86tti7kfo78Lyd6k5JP/X24Pku80pbm0LmAzjPYceN+q+ZhRTc
3+yurwwkZ2IvKqihOIKZ/wHXH46LXLSHfB57Za4TS9OYoRC/z9litzcKcin2
lYnrbz6h+6pwf57+p7QP1L+F/b777+8OLWKux/P186sOTWHmH+P7nJxfG/qQ
tbhuN/zh0iBmeInfT5yyLWQLM9emAX6I9lh3GvkD7g800TkpqP8n7k9d6S5T
kgdoQaJzkl37lfrG6DL7tZF/UX+YFkDSnW0z6hLzGC1w4S+v35zEzI3XAj+i
6Id4P7Ij+qn0+q1IZsEF9y/5VHv9CDP/NfbXeBRmXyADrjdOb06ppf5CvK9k
fdLJJnKAFuRt2mSvP6i/Cs/HVt9LNy1mluD+d70t61yZhQjc72OSza1g5mVa
sHPJWLp0B3knrv9WaSI5yQwJ2Dv9jay+jHxQC03SXH37feqnYb993M+Dm6h/
AntrO/fM+kg+iz6z8PfztpdZPx/3X54+9Rc/cjG+b//xe1MimOEqrldN3jQs
mXwD7xvZMuF5HjP3E853fnWoqpJZUKIXzd175TG5Ac8fkLbb9FC/Ec+n3ggb
NVTB3Iz7V8buWGTLDG+0oJBLVgW4MHNdWkjPyZ/z1VxynxbMnXkuMYBZGKyD
rTO0ELWGPEQH6b+nzN61mfojdfj3mdUgS6C+tQ46JOmv5meSHXT4/43LTGUu
9afhfmX5FoMrZHdcX956wvw29WejR5/2CnxC9tWB+YxR4c/1dN9iPH95/+Ge
DuoH4X2Z1sv7DEqYQ3UgV86usbBi5sJxfpPusTOnkv+FNvTSit7MQrQO7Iw2
3Wr3Z+bjcN3h7CPXNeTvsWdZ4eS8ifpH0Lvv7FbuJWfgfFLLCrPj1M/G9X/m
fDsmj/r/QV9cFFJfQb6gA8X9ivW766hfogPhwY/8GQ25QgfQEv3QoYX6N3XQ
NN8m410n9euwd+5CrL3R/5h/0cGjHR4WGmtmQY2ODov/4Epuwve8adu7yZeZ
b8X7z4U6Lwgid+D3K5QpW8KZoUcHLnMdimZupz4ngotrhLvP92QjETo66y4v
O0F9MxHSh6wLzyiinoUI5rLT/jU3yLYiBBRZPd7/mPqTRZC7+f2YqSc7i8B3
Sc1iO6g/C3s+Kflx/dT3xvsiveZdMyhlXoDnDZpNzYyYeX+878SxB5lkWCGC
xKnFodSQHCbC1gnSI+voPPedCIqoebkdg8hbsD+puDqeLMSIIJTvaNQPoP5e
nKfP2SPyI70nCef1m3Hgt7c0fyrOY7mnKrCZnIXfq/7JgkqR3nMG7xsRmqel
93N5InDTGw/draP3FeG8q7baJ9ykfhn2kw8e/3CFXC2C3dijCTdyqX8H3xO4
PLQ1g/wA759YPDIqkfpPsXd0jOWSGOrr8PsU3uaCI8ivRIDtVbnpodRvx/cv
jlfYBZA7cd7kaWEKH+r34n1Ga4sOTiMPaoRHURXm28bSfaaN4DLsKChMqT+8
EXjvO19u7qN/71aN0FEwwHZvR4nP33Y1kDc=
         "]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[0, 1, 0]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 90], 0.011111111111111112`]], 
         AbsoluteThickness[1.6], 
         Dashing[{Small, Small}], 
         RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {23391.145833333336`, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         StyleBox["\"\[Epsilon]\"", 15, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"t (sec)\"", 15, StripOnInput -> False], TraditionalForm],
         None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[
       GrayLevel[0], 13], GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{23391.145833333336`, 29803.}, {0, 0.15566809975618034`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(tt\\)]\\), after\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(ll\\)]\\), after\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8317895203569546`*^9, 3.8317896032939186`*^9}, {
   3.831789687490137*^9, 3.8317897001516123`*^9}, {3.8317919601973696`*^9, 
   3.8317919645371265`*^9}, 3.8320667162464275`*^9, 3.832066787605377*^9, 
   3.832215954621809*^9, 3.8322189445820737`*^9, 3.8344981183252754`*^9, 
   3.834498174381248*^9, {3.8344983276167417`*^9, 3.834498355524976*^9}, 
   3.834498388749339*^9, {3.834498431111015*^9, 3.8344984869089837`*^9}, {
   3.8344985272793145`*^9, 3.8344985741141987`*^9}, {3.8344986128739367`*^9, 
   3.8344986418486366`*^9}, {3.834498688573402*^9, 3.834498768827346*^9}, {
   3.834498803514795*^9, 3.834498817530134*^9}, {3.834499099119647*^9, 
   3.83449911022007*^9}, {3.834499356941876*^9, 3.83449936696968*^9}},
 CellLabel->
  "Out[598]=",ExpressionUUID->"eb53ffc5-76bb-4392-bd41-64320fad0152"]
}, Open  ]],

Cell["Experimental plots with the same lay-out.", "Text",
 CellChangeTimes->{{3.8346608772768097`*^9, 
  3.8346608848281403`*^9}},ExpressionUUID->"117908fe-594b-4bbf-94b9-\
e46ee07a102a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pexp", " ", "=", " ", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\[Epsilon]texp", ",", "\[Epsilon]lexp"}], "}"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<t (sec)\>\"", ",", "15"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<\[Epsilon]\>\"", ",", "15"}], "]"}]}], "}"}]}], ",", 
    RowBox[{"FrameTicksStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"Green", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{"Opacity", "[", "0.3", "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(tt\)]\), exp\>\"", ",", " ", 
       "\"\<\!\(\*SubscriptBox[\(\[Epsilon]\), \(ll\)]\), exp\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8317896181136913`*^9, 3.831789679391406*^9}, {
   3.834498420344795*^9, 3.83449842750345*^9}, 3.8344984764431133`*^9, {
   3.83449869501132*^9, 3.834498767541586*^9}, {3.8344990630716763`*^9, 
   3.834499097671045*^9}},
 CellLabel->
  "In[599]:=",ExpressionUUID->"0842caef-1e96-456b-9a99-1508722417ea"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Opacity[0.3]], 
        LineBox[CompressedData["
1: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
EZ/v/qF0LY5yCyFCUhHu1Ui2593j2OGZS7aw/kkhPPXOKM62YOauCJFzNWTo
naPk+0JYfBUcfvWQ+k+FaNi3P8w1npwsBHSkzC5kU79ICNFyl07VyebM9UL+
/jb/l9UyZkErf/zuC2L7nZT/4d9fffzRL9fI/VOh8ztriNEj6g9PhbPEoEuu
hqyVihAn2QMjaqk/LxXyvedo5fXeyvKVqVDTF3cvXk3ekspfT51zN+3bStcP
b0PFVXNCycdT4bs2tDnmCfXPp8K09xc97SrK/fjj/2ux9ZXaRtdXKiKmDlPb
rc0siEsF0gb36nSmPDcVSnKrtKecI1elwjPh9jflcOo388ePrJ/65gu5i8+n
35hRWUN92TT4LnG7l/WNrJSG2K2+9i+Wbmf98WnwfDlBXLSWPCsNQgcDLdfQ
7XS9psFuj+qIGX0sWG6Shu6NFYP7K5J3pUFaz6hIl8wdSYN7SM30pxMp90jD
houLXcUK5OtpyFB/+/uGNvUfpuHQ/qBxvzdTHpUGXIu/PtuNnJEGU5PI17/I
nJj3l22y2YHkd2lQmLLkUlEi9b+lwWVcgNK+KMql0mG+4NT0xtfkIenoWPwC
sRLqq6fj8Zd8p5iv5KnpmO6kPmDncEvWX5gO+ZG/RxarMguM08EdH7steDbZ
Mh06mbmyc/ZR/2A6FMbPUx66jXyKzxeYl692o75XOuTEo7qqg8j+6ZCN8ZoQ
kED9iHR0v04NM2gnC9OREVFyp+0H9YvT0V7A3dGU38HyV+mI0rfRVBpK/pwO
tbb9P06MYRb8TUft4cO336wgD8iAxVO337ZbqD8yAw3diksGH6J8cgYSdV7Y
/nIh62dAYVPfoh0PqL86A3Y7VPSkX5K3ZsA9eMyBrkTq22XAOfWxy+RUsksG
HjSP7RPcTv2LGejYOTkiebAV850MWOsd/ztzIrMgPANGORq2rgaUJ/Cvt1ob
uWc3OT8DOkvXJItdqF+dgdgtb0c7HCG3ZIBLXjIz/AT1f2WgeUyO4flH5L6Z
2JBUMrCimPrKmfC9e+7fh1bKJ2SiOWvo5e2cNfPsTEiKFk41HcwsWJ6JB1su
PkxSJJtmIsKmLqVjNPVtMsGZO6wdb0C5UyYWO1cdG3mAfJZ3zEPlNzepfzMT
q06nyyh4UR6cCXnFOafWPidH8/3woPj+QupnZaJAPUdXt45ckQnncWKbW2Lq
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
0LPkoHpcmxncNmxv4vz/B4LNOlg=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3]], 
        LineBox[CompressedData["
1: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
4UEl5Pcm43LKa/FwzyDVf/4AV+alPBwduU2xVouZayr202lh64xpbsnD9TVX
2lc6kx15kDdL05U7T3l3HqIT7xnHedPcl4czxutGDo4h3+fh3dWrAWel3Vg+
joewoSfT+szI2Txo2I5tUzzmRn9vHrSzn+p+CSC3ia8XIpsfm0T5jzyM0I3/
kZRG8z88jKrqf2ZYQx6ei5+nR3PXfaL8hFxUfb91WX3DGWa1XKRci7nw05eZ
o58L7UjVpd48mhvnwtohcadkH3l7LsIkKpbFf6W8fS4ix7RU6ai4M5/OxcJb
lS8C1Zm53rkwWidRIrhO89u5ODpnbmpjLTk6F4L2nQp9Pymfnov5jSdDfo/i
0v2WixeGtarT1clNubjkmbhJdxEz900uggcfSv61mPw9F26dRu431lFeJg+5
MYIiw/PksXl4+TpPxTOU8jPy0NxZ05uaQtbNg5b0XGVUU35lHtz05mvveUnz
LeJ5s+HdjZ1k6zz058o4mfdT3jkPi7JtcueNPcvm5/MgYb/V32wx2T8P56Z8
+qG58Szd33nIzCs/GnuI5sl5OOx+PsbmPLkgD1IaC+4+vUF5fh7G/FCZ+eMu
uTMPL4bofzkZRfnePJyedapKupnmUvm40dSadvQXWS4f6r9EJ0cO82D5qfk4
NvGFxcdJZO18HJl6vKlal5ljKM7XTzraZkJzs3z8mt/bU7edvCcfU9Zbb860
ofyRfDxdO/nwqPvks/mo3bn0SWI25f3yIXf5+ZpEATlEfL1Cmfo5rymfIHbd
Ibt/f8m8fAxNGWZ1f/A5lq/Oh+6wl0X2Y5g57fmYedYlcORC8qd8NBQ53Py2
h/J/87Ek+818mfPkEQU4+EXzndFtyk8qgN2Tl4fiH9NcvQDHShfZ2WeSDQrw
wsrWOaae8iYFSFpVuzWylbyzAJ+U5HuXK3iyvEMBfBrfXzm+nOxaAKnCYORb
MnOuFMB+wMz1js7ku+LPP9U9GHSJ8o8LUF1j+updEM0zC+DeeB0pCeTyAjxr
v3jBvJDyIvH1eIVtF6XOM78rwB7XWWfzVJg5P8XzZVHXqvXIQwpRGTbRKG8b
5ccVon+s83P1/TSfWYiD48aVLz1C1iuEcb3kjftelF9VCM3Ls4tz0snmhVBO
ja2Lf0l520LEZ9i5TBl4gc1PFCK0ePWRXWPJFwthJ5CpVNRm5gQUIl327Lpv
q2geWYgXaa128hvJKYWoXeH2V8OW8kWFuPOgwi7uEVlQiEFntbQuVVC+qxBH
fJrvr/tE8/5CdCnN9FOTucg8sAh/+iSD4iYyc0cXwUzySuTLOTSfVoTYyCZv
Rx3yvCIMX5Kua7uR8suK0D5yRK10IHljEY4pbr61OJfye4uQ7jJYY1kXzY8W
wc3tfWz5T7KH+PM7dPSH/efF8teLsOTPb4+rSuSwIpyX2vNjmCYz90kRtmZ0
nxAepHluEYojok1W+JJri6CwqV5/7jPKPy/Cw3vBVYuaaN5ThNCrgkmnvpI5
xbC5ou80Z/Allv+vGKXLtibUqTBzJhfj8h5l2wGLyJrF2K/uuzbEi/KLi/Ex
4Jie3RPyumLsLptx44yA8ruK8e3R5gsDP9H8YDEa31YZcId6M7sVw97u/e9/
yswcn2KE/o3Z8p8+ObgY/kckgj5spXxMMc7t+6yx/g7Ns8TftzIFIdnkimKM
v1pbGCOifHMxYn1qLuhJXWZ+X4wT089VK8gxc34VY+4lk+9yajQfUoKh+X+d
uhaRFUvQsFqzTYpL+VkliG359/2/BPLCEpz8r4or1UD51SWQsvRoL+gjW5TA
YEvqqoujrrC8XQk0o7QUXqowc11KMHPhydFyS8leJSjPapk9aD3lA0vQrqNv
ffcxzR+W4NfJKSPuNpJTS3BtWVvkuiE+LF9cgm/P7T7XqZIbS7BfzSv98mpm
7qsSVHdcnj9+D/lrCQZJW10KOk956VLslJp7+WISWb4U40MmvrvUR/nppWia
dPBn9NSrzPNLkX9ft63fmJmzohT+1y2EktY031QK3+4TAxrPkfeVotHX9+nj
YMofL4XZ9+0zbz8le5bixtonns9kfFn+Rimuea958BHkB6X4HP5LasJ+Zk5S
KZLa62xG+dA8rxSDQ9L2zk0g15Wiv89nmUhA+Y5SvJS5ZmH3jvylFGOr0k6n
cvxYXqIMfO0X8V5azJyRZUhp1Wv5aEyeUoa75onvnfZQfk4ZpO98/XL3OBni
zxcfvPLci/Km4s9/Kw0ecYtsWQYhZ5iZZBjlD5chat+gcxMLaO5eBk5WlIdr
J9m3DJ0WuXtfSF1j+XtlePO4tEN3LDMnrgyJ4wvM/DTJ2WWIaS+/c3U55SvL
YH3EdsngjeRW8fWTts1evp3yH8tQ5D//P30vmv8uw5z69QVfI8nDyrFKpfZm
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

         "]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Opacity[0.3]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3]]}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Opacity[0.3]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0], 
         Opacity[0.3]]}, {
        Directive[
         PointSize[0.006944444444444445], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         StyleBox["\"\[Epsilon]\"", 15, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"t (sec)\"", 15, StripOnInput -> False], TraditionalForm],
         None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[
       GrayLevel[0], 13], GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 31373.}, {-0.0000566619920137363, 0.1386229119134996}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(tt\\)]\\), exp\"", 
       "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(ll\\)]\\), exp\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"True", ",", "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.831789667782243*^9, 3.8317897002674203`*^9}, {
   3.831791960628517*^9, 3.831791964943206*^9}, 3.832066716529177*^9, 
   3.8320667878309774`*^9, 3.832215954704028*^9, 3.8322189446737833`*^9, 
   3.8344981183786488`*^9, 3.8344981744826365`*^9, {3.8344983281189404`*^9, 
   3.8344983556096287`*^9}, 3.8344983888652544`*^9, {3.8344984280075445`*^9, 
   3.834498487024901*^9}, {3.8344985273986316`*^9, 3.834498574235155*^9}, {
   3.834498612978733*^9, 3.834498641948887*^9}, {3.8344986886893196`*^9, 
   3.8344987689649153`*^9}, {3.8344988036620092`*^9, 
   3.8344988176667004`*^9}, {3.8344990992729044`*^9, 
   3.8344991103672295`*^9}, {3.8344993571420364`*^9, 3.8344993671012225`*^9}},
 CellLabel->
  "Out[599]=",ExpressionUUID->"02e98dff-b755-4cc8-9b08-8c0cddc91d06"]
}, Open  ]],

Cell["\<\
Combination of all previous graphs. Total overview of how well the chosen set \
of parameters represents the experimental curves\
\>", "Text",
 CellChangeTimes->{{3.834660888377544*^9, 3.834660895027768*^9}, {
  3.8346609918480263`*^9, 
  3.83466101475671*^9}},ExpressionUUID->"78cc97df-027c-4766-be52-\
45da881efa90"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pltspring", "=", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"pinitial", ",", "pfinal", ",", "pexp"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.831789555388132*^9, 3.831789572062456*^9}, {
  3.8317896827682996`*^9, 3.831789683469803*^9}, {3.832066773949013*^9, 
  3.832066785245598*^9}, {3.8344984362506866`*^9, 3.8344984471334267`*^9}, {
  3.834498516679956*^9, 3.834498517666162*^9}, {3.8344985708091445`*^9, 
  3.8344985709622393`*^9}, {3.8344986311172047`*^9, 3.834498645865777*^9}, {
  3.8344987187122545`*^9, 3.8344987202293043`*^9}, {3.8344987917289286`*^9, 
  3.8344988017753043`*^9}},
 CellLabel->
  "In[600]:=",ExpressionUUID->"6ab249e6-de92-466f-866d-d6f9e5627f8f"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
8vnezI01HpmRU/4PxpLcTg==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
n0P2QH7Z783gVdyCL9bX1cjk+nKL9+C8oW9SMk+SD2J9b+NeTTe5RUdxfR4d
yheVkePR36tVa9NJ81MwXyXSpOfkU9zncd47B1tVLbmFq/DHY+obdnOLb2N9
dnrGhDhyHtZHpbleu8UtKsD+Mnp1si/IFchDZyw9/JPmv4C1nPspT0/h8xtw
vQwWhty1J7dgvleRhmEwt/gr+vq3fb5dJP9G//wGv4Ml3KLu5cyhzsjWuZUs
Wc6E5zN/hvVN5fvJIP89SstOkzyinNX+MEps2cAtjEOuv6k+6ji3WAUOsisa
WUhWhxeavv71k1s0G+tl/L++GnWae345U+wWl6Iyn5stLGci9RsyjSu5hWXo
J60crHeEbIt5nyImLy7gFq/BeS+N8HP7Q16PfrD4dKXaGT5/K3x2t/FcO/JO
rL/U2zfYj5v5IxcKRyWc4hb2wxp7E+YVkg+VswTbXU9+ypzl82Nw3pcF+TJL
yQk4b2Oi3uogbtEZ9C0SLkZlcbOMcib2rb00tpl8HftPSnkxSTaNzxdjv5NL
Xm2bzS1+iNxR0d7TlVxczlhV4IrIVG7RM/RDRq56UE9+jfnRJ3J2jk3n899h
vVRiQ6Q1+RPO13nlg1UYt/AT16v3OFsJMbkT8z4ekVVu4Rb3qmCsQnlBtc45
Pn9gBRO2+K02DCIPhdNOvZ2Wz80UKlit3cWigoHnuSdWMPHGXebeC7iFqRX4
fVXVL9CXWzwT81fol928Qp6L9U8eHnVs4BYZYv6VJ1Uv2QXuJRVMcVnySs8I
brYC8+UjJ+i95BbskbvfVrBSvsj9XwVLuDR/W84GbrEr+kuTjbNSyO7Y/03Z
i8TX3CKfCtb2TUN20vAM7iDs7y7+KrGAmx2oYGo95pmt9uIWjlQwh5K7H0MS
yXFYL1pXOqGQW5wMXyzwM/hM89Kx/krulwGDL3FfqWAZsht130/nZrew34sK
7Wv/kXORe5e/fxPDLTzB+qhyT9nH5PIKZt5d4b3tT25xNa7f5O491ytd5n6D
6zGun4y6BbfofQUrmTZ3RvUubvYF6923LtiSQu7AeZ0PaH5/yy10q2Rtkxt8
GyZc4e5XySJ2fIgcv4pbPLiSqcnKx6nHcIuGw3/rqt0fkcdUsi1a3zYv/sPN
lCuZUGRnoKuayT29kinq/zjUYz23oI31dfMKO8+T9SrxvEg7Fn/mFi/AeeT3
VShpXeXzzTH/iu4WVS+yNXx1qa5bFjdzqGSs8/HTcV/JLji/U2Cs1dQsPn8L
5omqJV/vzZr3f49EA18=
          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
wX8/Ro9zGsmDamDA5OdfWcqlTn8DjCy2bA==
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1:eJwt1AtUjekawPHPpelmlGtJKsmlXLpMMSuqh+QYlzQldCKbtimObKJQ6DMp
l6TUyaUJ+4zqRMnuFLrR59JQbGOQffuizSlNDaKpaaRmHut9Wstq/db7vv/3
eT+W8etlgRsGchxXh38+//78w/c8g6YC35bAgPM+nw2cCprilkcWbCQboY3f
N5onMHPmKpDELXNPOcksWKhALr6bKpaTbVVgVyzf8E0DMz9ZBdD1pXzre7Kz
CoQF/V1tprmsPwt7d62NUhzIPirgEmOTznkyc/9Abw4WpEuZBX8V8EVOpYcj
yCvwfs3bqWOSmPkwnPffaYM75OTvcD2jNiu2mvpb0P7tFl1PqR+LvcLxjvm/
kvfhPP0fd639RP0k9OjU4w2mecypOE9urdk2R2Y+C9cFh5KRvsxwBt/XFPzV
m9XkPFzfsKC2JJqZu4SOeDXH9yD1ynDelwWtHqfJ1Tjf+wSZ5wXq38H9+966
PasmP8B17/yH9iL1n+J9DRbeXj3UF/H7Rw5b3Ts8n/n/6OgpOTOnMgvtn9el
o8p8yJ34ntnq8tdBzHwvzhNRN50LZ4ZBauDn85t37iGbqoHzOmXcmk39EWpo
uu0sP3yFelZqsJMaG19/SLZXg+T0C4O+V9R3UoM86IVJcjfZDdevtnptMvwv
63uip31SbxjNzM3D+6xSb0Z6kBfheU9DZUwQs/At7h9Q8/bjVnII3p/fW1N5
mJlfh+f/LFc6n6P+Rtx/aV34wFLyNpw/8XL61VvU343ri0dU2Twm78f1J8uW
5HRQ/xB+j/5ninmmBayfjvuDnRbqJ5BP4Xxv1or7ZjODHPdPdhvutpxcoAYh
x/GvNRuZOQXOl3UvOi6eWbimBngSkjP/FLkG+8U7uZhy6t/F/fLOSL9n5J+x
lyQmf3xHfRW+39+51vqLC8wv8PyS8QHPrZi519jXZYYYz2AW3uK6Nqy01ovc
jR7huerYama+H3sGst5B8dT7QgMSpcxRn0UeqgHhnqQ7WUH90RqAOSFto+6T
bTTApa7sqtFTf6IGms683OXeRf3pGpDPza4aaHKR2QPPZxZtO+DEDF4asAt+
PTF7IdkP9x87d8lQyswtxXks5xyZtI8cjH0YFxOVxSysxp7LeIc/LlJfivMu
q4ftAnkzng86tti7kfo78Lyd6k5JP/X24Pku80pbm0LmAzjPYceN+q+ZhRTc
3+yurwwkZ2IvKqihOIKZ/wHXH46LXLSHfB57Za4TS9OYoRC/z9litzcKcin2
lYnrbz6h+6pwf57+p7QP1L+F/b777+8OLWKux/P186sOTWHmH+P7nJxfG/qQ
tbhuN/zh0iBmeInfT5yyLWQLM9emAX6I9lh3GvkD7g800TkpqP8n7k9d6S5T
kgdoQaJzkl37lfrG6DL7tZF/UX+YFkDSnW0z6hLzGC1w4S+v35zEzI3XAj+i
6Id4P7Ij+qn0+q1IZsEF9y/5VHv9CDP/NfbXeBRmXyADrjdOb06ppf5CvK9k
fdLJJnKAFuRt2mSvP6i/Cs/HVt9LNy1mluD+d70t61yZhQjc72OSza1g5mVa
sHPJWLp0B3knrv9WaSI5yQwJ2Dv9jay+jHxQC03SXH37feqnYb993M+Dm6h/
AntrO/fM+kg+iz6z8PfztpdZPx/3X54+9Rc/cjG+b//xe1MimOEqrldN3jQs
mXwD7xvZMuF5HjP3E853fnWoqpJZUKIXzd175TG5Ac8fkLbb9FC/Ec+n3ggb
NVTB3Iz7V8buWGTLDG+0oJBLVgW4MHNdWkjPyZ/z1VxynxbMnXkuMYBZGKyD
rTO0ELWGPEQH6b+nzN61mfojdfj3mdUgS6C+tQ46JOmv5meSHXT4/43LTGUu
9afhfmX5FoMrZHdcX956wvw29WejR5/2CnxC9tWB+YxR4c/1dN9iPH95/+Ge
DuoH4X2Z1sv7DEqYQ3UgV86usbBi5sJxfpPusTOnkv+FNvTSit7MQrQO7Iw2
3Wr3Z+bjcN3h7CPXNeTvsWdZ4eS8ifpH0Lvv7FbuJWfgfFLLCrPj1M/G9X/m
fDsmj/r/QV9cFFJfQb6gA8X9ivW766hfogPhwY/8GQ25QgfQEv3QoYX6N3XQ
NN8m410n9euwd+5CrL3R/5h/0cGjHR4WGmtmQY2ODov/4Epuwve8adu7yZeZ
b8X7z4U6Lwgid+D3K5QpW8KZoUcHLnMdimZupz4ngotrhLvP92QjETo66y4v
O0F9MxHSh6wLzyiinoUI5rLT/jU3yLYiBBRZPd7/mPqTRZC7+f2YqSc7i8B3
Sc1iO6g/C3s+Kflx/dT3xvsiveZdMyhlXoDnDZpNzYyYeX+878SxB5lkWCGC
xKnFodSQHCbC1gnSI+voPPedCIqoebkdg8hbsD+puDqeLMSIIJTvaNQPoP5e
nKfP2SPyI70nCef1m3Hgt7c0fyrOY7mnKrCZnIXfq/7JgkqR3nMG7xsRmqel
93N5InDTGw/draP3FeG8q7baJ9ykfhn2kw8e/3CFXC2C3dijCTdyqX8H3xO4
PLQ1g/wA759YPDIqkfpPsXd0jOWSGOrr8PsU3uaCI8ivRIDtVbnpodRvx/cv
jlfYBZA7cd7kaWEKH+r34n1Ga4sOTiMPaoRHURXm28bSfaaN4DLsKChMqT+8
EXjvO19u7qN/71aN0FEwwHZvR4nP33Y1kDc=
          "]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0, 1, 0]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0, 0]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0, 1, 0]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[0, 1, 0]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 90], 0.011111111111111112`]], 
          AbsoluteThickness[1.6], 
          Dashing[{Small, Small}], 
          RGBColor[1, 0, 0]]}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Opacity[0.3]], 
         LineBox[CompressedData["
1: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
EZ/v/qF0LY5yCyFCUhHu1Ui2593j2OGZS7aw/kkhPPXOKM62YOauCJFzNWTo
naPk+0JYfBUcfvWQ+k+FaNi3P8w1npwsBHSkzC5kU79ICNFyl07VyebM9UL+
/jb/l9UyZkErf/zuC2L7nZT/4d9fffzRL9fI/VOh8ztriNEj6g9PhbPEoEuu
hqyVihAn2QMjaqk/LxXyvedo5fXeyvKVqVDTF3cvXk3ekspfT51zN+3bStcP
b0PFVXNCycdT4bs2tDnmCfXPp8K09xc97SrK/fjj/2ux9ZXaRtdXKiKmDlPb
rc0siEsF0gb36nSmPDcVSnKrtKecI1elwjPh9jflcOo388ePrJ/65gu5i8+n
35hRWUN92TT4LnG7l/WNrJSG2K2+9i+Wbmf98WnwfDlBXLSWPCsNQgcDLdfQ
7XS9psFuj+qIGX0sWG6Shu6NFYP7K5J3pUFaz6hIl8wdSYN7SM30pxMp90jD
houLXcUK5OtpyFB/+/uGNvUfpuHQ/qBxvzdTHpUGXIu/PtuNnJEGU5PI17/I
nJj3l22y2YHkd2lQmLLkUlEi9b+lwWVcgNK+KMql0mG+4NT0xtfkIenoWPwC
sRLqq6fj8Zd8p5iv5KnpmO6kPmDncEvWX5gO+ZG/RxarMguM08EdH7steDbZ
Mh06mbmyc/ZR/2A6FMbPUx66jXyKzxeYl692o75XOuTEo7qqg8j+6ZCN8ZoQ
kED9iHR0v04NM2gnC9OREVFyp+0H9YvT0V7A3dGU38HyV+mI0rfRVBpK/pwO
tbb9P06MYRb8TUft4cO336wgD8iAxVO337ZbqD8yAw3diksGH6J8cgYSdV7Y
/nIh62dAYVPfoh0PqL86A3Y7VPSkX5K3ZsA9eMyBrkTq22XAOfWxy+RUsksG
HjSP7RPcTv2LGejYOTkiebAV850MWOsd/ztzIrMgPANGORq2rgaUJ/Cvt1ob
uWc3OT8DOkvXJItdqF+dgdgtb0c7HCG3ZIBLXjIz/AT1f2WgeUyO4flH5L6Z
2JBUMrCimPrKmfC9e+7fh1bKJ2SiOWvo5e2cNfPsTEiKFk41HcwsWJ6JB1su
PkxSJJtmIsKmLqVjNPVtMsGZO6wdb0C5UyYWO1cdG3mAfJZ3zEPlNzepfzMT
q06nyyh4UR6cCXnFOafWPidH8/3woPj+QupnZaJAPUdXt45ckQnncWKbW2Lq
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
0LPkoHpcmxncNmxv4vz/B4LNOlg=
          "]]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3]], 
         LineBox[CompressedData["
1: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
4UEl5Pcm43LKa/FwzyDVf/4AV+alPBwduU2xVouZayr202lh64xpbsnD9TVX
2lc6kx15kDdL05U7T3l3HqIT7xnHedPcl4czxutGDo4h3+fh3dWrAWel3Vg+
joewoSfT+szI2Txo2I5tUzzmRn9vHrSzn+p+CSC3ia8XIpsfm0T5jzyM0I3/
kZRG8z88jKrqf2ZYQx6ei5+nR3PXfaL8hFxUfb91WX3DGWa1XKRci7nw05eZ
o58L7UjVpd48mhvnwtohcadkH3l7LsIkKpbFf6W8fS4ix7RU6ai4M5/OxcJb
lS8C1Zm53rkwWidRIrhO89u5ODpnbmpjLTk6F4L2nQp9Pymfnov5jSdDfo/i
0v2WixeGtarT1clNubjkmbhJdxEz900uggcfSv61mPw9F26dRu431lFeJg+5
MYIiw/PksXl4+TpPxTOU8jPy0NxZ05uaQtbNg5b0XGVUU35lHtz05mvveUnz
LeJ5s+HdjZ1k6zz058o4mfdT3jkPi7JtcueNPcvm5/MgYb/V32wx2T8P56Z8
+qG58Szd33nIzCs/GnuI5sl5OOx+PsbmPLkgD1IaC+4+vUF5fh7G/FCZ+eMu
uTMPL4bofzkZRfnePJyedapKupnmUvm40dSadvQXWS4f6r9EJ0cO82D5qfk4
NvGFxcdJZO18HJl6vKlal5ljKM7XTzraZkJzs3z8mt/bU7edvCcfU9Zbb860
ofyRfDxdO/nwqPvks/mo3bn0SWI25f3yIXf5+ZpEATlEfL1Cmfo5rymfIHbd
Ibt/f8m8fAxNGWZ1f/A5lq/Oh+6wl0X2Y5g57fmYedYlcORC8qd8NBQ53Py2
h/J/87Ek+818mfPkEQU4+EXzndFtyk8qgN2Tl4fiH9NcvQDHShfZ2WeSDQrw
wsrWOaae8iYFSFpVuzWylbyzAJ+U5HuXK3iyvEMBfBrfXzm+nOxaAKnCYORb
MnOuFMB+wMz1js7ku+LPP9U9GHSJ8o8LUF1j+updEM0zC+DeeB0pCeTyAjxr
v3jBvJDyIvH1eIVtF6XOM78rwB7XWWfzVJg5P8XzZVHXqvXIQwpRGTbRKG8b
5ccVon+s83P1/TSfWYiD48aVLz1C1iuEcb3kjftelF9VCM3Ls4tz0snmhVBO
ja2Lf0l520LEZ9i5TBl4gc1PFCK0ePWRXWPJFwthJ5CpVNRm5gQUIl327Lpv
q2geWYgXaa128hvJKYWoXeH2V8OW8kWFuPOgwi7uEVlQiEFntbQuVVC+qxBH
fJrvr/tE8/5CdCnN9FOTucg8sAh/+iSD4iYyc0cXwUzySuTLOTSfVoTYyCZv
Rx3yvCIMX5Kua7uR8suK0D5yRK10IHljEY4pbr61OJfye4uQ7jJYY1kXzY8W
wc3tfWz5T7KH+PM7dPSH/efF8teLsOTPb4+rSuSwIpyX2vNjmCYz90kRtmZ0
nxAepHluEYojok1W+JJri6CwqV5/7jPKPy/Cw3vBVYuaaN5ThNCrgkmnvpI5
xbC5ou80Z/Allv+vGKXLtibUqTBzJhfj8h5l2wGLyJrF2K/uuzbEi/KLi/Ex
4Jie3RPyumLsLptx44yA8ruK8e3R5gsDP9H8YDEa31YZcId6M7sVw97u/e9/
yswcn2KE/o3Z8p8+ObgY/kckgj5spXxMMc7t+6yx/g7Ns8TftzIFIdnkimKM
v1pbGCOifHMxYn1qLuhJXWZ+X4wT089VK8gxc34VY+4lk+9yajQfUoKh+X+d
uhaRFUvQsFqzTYpL+VkliG359/2/BPLCEpz8r4or1UD51SWQsvRoL+gjW5TA
YEvqqoujrrC8XQk0o7QUXqowc11KMHPhydFyS8leJSjPapk9aD3lA0vQrqNv
ffcxzR+W4NfJKSPuNpJTS3BtWVvkuiE+LF9cgm/P7T7XqZIbS7BfzSv98mpm
7qsSVHdcnj9+D/lrCQZJW10KOk956VLslJp7+WISWb4U40MmvrvUR/nppWia
dPBn9NSrzPNLkX9ft63fmJmzohT+1y2EktY031QK3+4TAxrPkfeVotHX9+nj
YMofL4XZ9+0zbz8le5bixtonns9kfFn+Rimuea958BHkB6X4HP5LasJ+Zk5S
KZLa62xG+dA8rxSDQ9L2zk0g15Wiv89nmUhA+Y5SvJS5ZmH3jvylFGOr0k6n
cvxYXqIMfO0X8V5azJyRZUhp1Wv5aEyeUoa75onvnfZQfk4ZpO98/XL3OBni
zxcfvPLci/Km4s9/Kw0ecYtsWQYhZ5iZZBjlD5chat+gcxMLaO5eBk5WlIdr
J9m3DJ0WuXtfSF1j+XtlePO4tEN3LDMnrgyJ4wvM/DTJ2WWIaS+/c3U55SvL
YH3EdsngjeRW8fWTts1evp3yH8tQ5D//P30vmv8uw5z69QVfI8nDyrFKpfZm
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

          "]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Opacity[0.3]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3]]}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Opacity[0.3]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3]]}, {}, {}, {}}, {{
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0], 
          Opacity[0.3]]}, {
         Directive[
          PointSize[0.006944444444444445], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3]]}, {}, {}, {}}}, {{}, {}}}}, {
    PlotRange -> All, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{
        FormBox[
         StyleBox["\"\[Epsilon]\"", 15, StripOnInput -> False], 
         TraditionalForm], None}, {
        FormBox[
         StyleBox["\"t (sec)\"", 15, StripOnInput -> False], TraditionalForm],
         None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     FrameTicksStyle -> Directive[
       GrayLevel[0], 13], GridLines -> {Automatic, Automatic}, GridLinesStyle -> 
     Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> 400, 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 21952.}, {-7.929108637338977*^-6, 
       0.08799547233002492}}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(tt\\)]\\), before\"", 
           "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(ll\\)]\\), \
before\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(tt\\)]\\), after\"", 
           "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(ll\\)]\\), after\""},
           "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Dashing[{Small, Small}], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "90"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"Small", ",", "Small"}], "}"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(tt\\)]\\), exp\"", 
           "\"\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(ll\\)]\\), exp\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.3]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.006944444444444445`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}]}], "]"}]}], "}"}], 
               ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.831789567190194*^9, 3.8317896035762024`*^9}, {
   3.8317896841952333`*^9, 3.8317897003556547`*^9}, {3.8317919609794493`*^9, 
   3.8317919650439734`*^9}, 3.8320667168004026`*^9, 3.832066788058114*^9, 
   3.832215954754661*^9, 3.832218944848749*^9, 3.8344981185414424`*^9, 
   3.834498174560343*^9, {3.8344983282328043`*^9, 3.834498355687771*^9}, 
   3.834498388927764*^9, {3.8344984313115845`*^9, 3.834498487109559*^9}, {
   3.8344985186519833`*^9, 3.834498574297665*^9}, {3.8344986130568695`*^9, 
   3.8344986462657537`*^9}, {3.8344986888364744`*^9, 
   3.8344987691277065`*^9}, {3.8344988038625565`*^9, 3.834498817798278*^9}, {
   3.8344990994357357`*^9, 3.83449911052099*^9}, {3.8344993573798285`*^9, 
   3.8344993672705283`*^9}},
 CellLabel->
  "Out[600]=",ExpressionUUID->"75bc6348-f109-4cd2-b6ef-591d65f253ea"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Export ", "Subsection",
 CellChangeTimes->{{3.834659488807091*^9, 
  3.834659489617752*^9}},ExpressionUUID->"1cbff7dd-ecf4-45ef-a44c-\
1a18ff06b21a"],

Cell["Uncomment if you want to export the last graph ", "Text",
 CellChangeTimes->{{3.834660091909977*^9, 3.8346600966726413`*^9}, {
  3.8346610331486917`*^9, 
  3.83466103866796*^9}},ExpressionUUID->"5db237b1-7ebf-413b-8e28-\
79959ff07f1a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<pltspring-estimate.eps\>\"", ",", "pltspring"}], "]"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8344988037310085`*^9, 3.8344988164320836`*^9}, 
   3.834499365699706*^9, {3.8346610565954695`*^9, 
   3.834661060192588*^9}},ExpressionUUID->"b4dd5fc6-b4a0-4229-9b67-\
94453b230a58"],

Cell["Uncomment if you want to export the individual graphs", "Text",
 CellChangeTimes->{{3.8346610474906845`*^9, 
  3.8346610547054424`*^9}},ExpressionUUID->"268ba52d-0a65-480e-998c-\
a0a8a3fef04a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pltinitial-estimate.eps\>\"", ",", "pinitial"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pltfinal-estimate.eps\>\"", ",", "pfinal"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<pltexp-estimate.eps\>\"", ",", "pexp"}], "]"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8346610667152224`*^9, 
  3.834661093751865*^9}},ExpressionUUID->"d59f3c16-6194-48b4-b69f-\
1593ee4bfcef"]
}, Open  ]]
},
WindowSize->{574.8, 574.8},
WindowMargins->{{Automatic, 1.7999999999999545`}, {Automatic, 0}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
Magnification->0.75,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"94c26cdb-450a-402d-9bdd-91b0121bebe0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 221, 3, 21, "Input",ExpressionUUID->"7056c22b-47f5-4c49-b6c0-1bf1293baf96"],
Cell[782, 25, 267, 5, 21, "Input",ExpressionUUID->"c80f0998-5235-47f0-a5a8-d851975a7ad2"],
Cell[CellGroupData[{
Cell[1074, 34, 170, 3, 41, "Subsection",ExpressionUUID->"daf25c25-6822-497e-9dc5-a62683e3f300"],
Cell[1247, 39, 549, 11, 22, "Input",ExpressionUUID->"6df2667a-755a-418c-9287-8d2bb4486b39"],
Cell[1799, 52, 407, 11, 21, "Input",ExpressionUUID->"b25cb6a7-ea16-4cb2-b1a0-b1de3a14f42d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2243, 68, 225, 5, 41, "Subsection",ExpressionUUID->"9bfcbe2a-1a10-4103-84de-cdd305769f64"],
Cell[2471, 75, 403, 8, 60, "Text",ExpressionUUID->"2de877b8-cb6f-455c-b17a-6431858b02f0"],
Cell[2877, 85, 2233, 60, 64, "Input",ExpressionUUID->"0f0209b1-9ef0-41e9-8c58-3fc5ee4ca6ba"],
Cell[5113, 147, 2057, 56, 64, "Input",ExpressionUUID->"76dab2ff-4af0-453d-864c-330ecf8d1657"],
Cell[7173, 205, 1823, 48, 79, "Input",ExpressionUUID->"bd49b49e-d1e4-4bf4-9bbf-57617ae17804"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9033, 258, 163, 3, 41, "Subsection",ExpressionUUID->"6051467c-dbcb-4e90-a3fb-6054dcc6121d"],
Cell[9199, 263, 305, 7, 43, "Text",ExpressionUUID->"ad20c1b9-3551-4679-a0ed-3a682d1e8f2c"],
Cell[CellGroupData[{
Cell[9529, 274, 1900, 41, 79, "Input",ExpressionUUID->"caf2167c-5b43-4ba2-bbb7-7ca8799bb11a"],
Cell[11432, 317, 30057, 565, 207, "Output",ExpressionUUID->"6bfc974c-ecd4-48e1-931a-c8beeeb6e539"]
}, Open  ]],
Cell[41504, 885, 313, 7, 43, "Text",ExpressionUUID->"714d1af1-09b6-4f72-ba41-c418c87d743a"],
Cell[CellGroupData[{
Cell[41842, 896, 1903, 47, 79, "Input",ExpressionUUID->"de46d4df-e6c3-4b6d-a8d6-2163c756bf0a"],
Cell[43748, 945, 19817, 410, 207, "Output",ExpressionUUID->"eb53ffc5-76bb-4392-bd41-64320fad0152"]
}, Open  ]],
Cell[63580, 1358, 187, 3, 26, "Text",ExpressionUUID->"117908fe-594b-4bbf-94b9-e46ee07a102a"],
Cell[CellGroupData[{
Cell[63792, 1365, 1618, 39, 79, "Input",ExpressionUUID->"0842caef-1e96-456b-9a99-1508722417ea"],
Cell[65413, 1406, 41167, 753, 207, "Output",ExpressionUUID->"02e98dff-b755-4cc8-9b08-8c0cddc91d06"]
}, Open  ]],
Cell[106595, 2162, 328, 7, 43, "Text",ExpressionUUID->"78cc97df-027c-4766-be52-45da881efa90"],
Cell[CellGroupData[{
Cell[106948, 2173, 789, 15, 21, "Input",ExpressionUUID->"6ab249e6-de92-466f-866d-d6f9e5627f8f"],
Cell[107740, 2190, 85913, 1603, 207, "Output",ExpressionUUID->"75bc6348-f109-4cd2-b6ef-591d65f253ea"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[193702, 3799, 155, 3, 41, "Subsection",ExpressionUUID->"1cbff7dd-ecf4-45ef-a44c-1a18ff06b21a"],
Cell[193860, 3804, 241, 4, 26, "Text",ExpressionUUID->"5db237b1-7ebf-413b-8e28-79959ff07f1a"],
Cell[194104, 3810, 353, 8, 21, "Input",ExpressionUUID->"b4dd5fc6-b4a0-4229-9b67-94453b230a58"],
Cell[194460, 3820, 199, 3, 26, "Text",ExpressionUUID->"268ba52d-0a65-480e-998c-a0a8a3fef04a"],
Cell[194662, 3825, 535, 14, 50, "Input",ExpressionUUID->"d59f3c16-6194-48b4-b69f-1593ee4bfcef"]
}, Open  ]]
}
]
*)

