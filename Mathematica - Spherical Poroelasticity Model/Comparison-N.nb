(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    411809,       7942]
NotebookOptionsPosition[    407421,       7864]
NotebookOutlinePosition[    407844,       7881]
CellTagsIndexPosition[    407801,       7878]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.8331701049089036`*^9, 3.833170109468961*^9}, {
  3.8346671810970573`*^9, 3.834667181513317*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"d527c344-456e-44c7-bc8a-06436c33c624"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.8346671821290708`*^9, 3.8346671872759914`*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"6d2dcb3f-0e52-4a5c-930a-887e2ad29a23"],

Cell[CellGroupData[{

Cell["Import data", "Subsection",
 CellChangeTimes->{{3.833170194856758*^9, 
  3.833170196377653*^9}},ExpressionUUID->"e8db0495-65c5-4f89-b28b-\
053b122f932a"],

Cell[CellGroupData[{

Cell["Data for N=5", "Subsubsection",
 CellChangeTimes->{{3.833170311970004*^9, 
  3.833170314426365*^9}},ExpressionUUID->"5a0e717d-effb-4e3d-8079-\
c551469d7665"],

Cell["\<\
Import data from Effect of grid size N - N = 5 - see folders dataset \
\>", "Text",
 CellChangeTimes->{{3.8346672792230277`*^9, 
  3.834667287182907*^9}},ExpressionUUID->"19937bda-e531-47c1-8f27-\
3be234623592"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Sigma]rimportN5", " ", "=", " ", 
   RowBox[{
   "Import", "[", 
    "\"\<Effect of grid size N - N = 5\\\\\[Sigma]rleft-excludingdt.mat\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtbeforeN5", " ", "=", " ", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<Effect of grid size N - N = 5\\\\dt-before.mat\>\"", 
     "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.833170199199963*^9, 3.833170282109661*^9}, {
  3.8346671954769096`*^9, 3.834667221728636*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"affc4620-f9e8-4013-b4ca-906665b30baa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataaN5", " ", "=", " ", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<Effect of grid size N - N = 5\\\\a0.mat\>\"", "]"}], 
    "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8331706230173388`*^9, 3.8331706378500805`*^9}, {
  3.834667197030772*^9, 3.834667225116169*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f3993544-def1-458f-a298-628affaad509"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dt\[Sigma]rN5", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "dtbeforeN5", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\[Sigma]rimportN5"}], " ", 
      "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823931494300189*^9, 3.823931516440471*^9}, {
   3.8239315733194427`*^9, 3.8239315823882284`*^9}, {3.823931628995893*^9, 
   3.8239316432961836`*^9}, {3.8239317993318357`*^9, 
   3.8239318141376677`*^9}, {3.8239318760081882`*^9, 3.823931879513427*^9}, {
   3.8239325746934648`*^9, 3.823932611557966*^9}, {3.82393267030212*^9, 
   3.8239326783273325`*^9}, {3.8239346297092695`*^9, 
   3.8239346479670124`*^9}, {3.823940778654003*^9, 3.8239407997426786`*^9}, {
   3.824200296536714*^9, 3.8242003010200896`*^9}, {3.833170255279961*^9, 
   3.8331702707838893`*^9}, 3.833175349527361*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"c0386ad5-6e16-4adc-906f-2e1823014001"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data for N=15", "Subsubsection",
 CellChangeTimes->{{3.833170311970004*^9, 
  3.833170323558499*^9}},ExpressionUUID->"bf032dbf-988e-44f9-a578-\
4dc645802aaf"],

Cell["\<\
Import data from Typical results for spherical hydrogels - see folders \
dataset \
\>", "Text",
 CellChangeTimes->{{3.834667272851137*^9, 
  3.8346672746536736`*^9}},ExpressionUUID->"386d9832-8241-4a08-88a1-\
84cd65db4f2b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]rimportN15", " ", "=", " ", 
    RowBox[{
    "Import", "[", 
     "\"\<Typical results for spherical \
hydrogel\\\\\[Sigma]rleft-excludingdt.mat\>\"", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtbeforeN15", " ", "=", " ", 
   RowBox[{
    RowBox[{
    "Import", "[", 
     "\"\<Typical results for spherical hydrogel\\\\dt-before.mat\>\"", "]"}],
     "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.833170199199963*^9, 3.833170282109661*^9}, {
  3.8331703242436028`*^9, 3.8331703614708314`*^9}, {3.834667197748579*^9, 
  3.834667198177899*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"98c3e79f-ac80-44dc-8da4-cdbecb591216"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataaN15", " ", "=", " ", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<Typical results for spherical hydrogel\\\\a0.mat\>\"",
      "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8331706409914427`*^9, 3.8331706593469086`*^9}, {
   3.833170750030603*^9, 3.8331707518493767`*^9}, 3.8346671985308857`*^9},
 CellLabel->"In[9]:=",ExpressionUUID->"35938154-9912-4be1-9488-4efdfac2a738"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dt\[Sigma]rN15", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Join", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"Transpose", "[", "dtbeforeN15", "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\[Sigma]rimportN15"}], " ", 
      "}"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.823931494300189*^9, 3.823931516440471*^9}, {
  3.8239315733194427`*^9, 3.8239315823882284`*^9}, {3.823931628995893*^9, 
  3.8239316432961836`*^9}, {3.8239317993318357`*^9, 3.8239318141376677`*^9}, {
  3.8239318760081882`*^9, 3.823931879513427*^9}, {3.8239325746934648`*^9, 
  3.823932611557966*^9}, {3.82393267030212*^9, 3.8239326783273325`*^9}, {
  3.8239346297092695`*^9, 3.8239346479670124`*^9}, {3.823940778654003*^9, 
  3.8239407997426786`*^9}, {3.824200296536714*^9, 3.8242003010200896`*^9}, {
  3.833170255279961*^9, 3.8331702707838893`*^9}, {3.833170327066561*^9, 
  3.8331703299719467`*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"b4b002f1-075f-4cd0-ba19-e06d0a83a0ea"],

Cell["Make sure that we compare the same region of time", "Text",
 CellChangeTimes->{{3.8331704103129344`*^9, 
  3.8331704197708035`*^9}},ExpressionUUID->"5919e177-0f0b-48bf-8425-\
c839368d7530"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dt\[Sigma]rN15", " ", "=", " ", 
   RowBox[{"Take", "[", 
    RowBox[{"dt\[Sigma]rN15", ",", 
     RowBox[{"Length", "[", "dt\[Sigma]rN5", "]"}]}], "]"}]}], " ", 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dataaN15", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"dataaN15", ",", 
     RowBox[{"Length", "[", "dataaN5", "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8331703743937635`*^9, 3.833170427950762*^9}, {
  3.8331707054084425`*^9, 3.833170714558332*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"e6776918-6339-4adf-bbce-25cb3712d15d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Plots of N=5,15", "Subsection",
 CellChangeTimes->{{3.833170438033356*^9, 
  3.8331704423022003`*^9}},ExpressionUUID->"1c37448f-4f59-4beb-bb91-\
1341ed7c802b"],

Cell["\<\
Take only a selection of all data (too see significant differences between \
lines)\
\>", "Text",
 CellChangeTimes->{{3.8331704895593295`*^9, 
  3.8331705142530622`*^9}},ExpressionUUID->"35737232-5c0e-44aa-bd8a-\
cef9ec27a0a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sequenceN15", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dt\[Sigma]rN15", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtsequenceN15", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dt\[Sigma]rN15", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotstyleN15", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{"Opacity", "[", "i", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.1", ",", "0.9", ",", 
       FractionBox["0.8", 
        RowBox[{"Length", "[", "sequenceN15", "]"}]]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8331704535455904`*^9, 3.833170482096407*^9}, 
   3.833170525283161*^9, {3.8331705941343536`*^9, 3.833170603497383*^9}, {
   3.833173732492093*^9, 3.833173822035376*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"b8210868-875a-46d6-90e9-a9868a2302b8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sequenceN5", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dt\[Sigma]rN5", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dtsequenceN5", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"dt\[Sigma]rN5", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "100", ",", "10"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotstyleN5", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Blue", ",", 
       RowBox[{"Opacity", "[", "i", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0.1", ",", "0.9", ",", 
       FractionBox["0.8", 
        RowBox[{"Length", "[", "sequenceN5", "]"}]]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8331705167729273`*^9, 3.8331705365660386`*^9}, {
   3.8331706051677833`*^9, 3.8331706129627714`*^9}, {3.8331738030864625`*^9, 
   3.8331738110301743`*^9}, 3.8331738620065765`*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"dcc23952-ac37-4dbf-8aca-ed9d0ac2fbf3"],

Cell[CellGroupData[{

Cell["Plots for comparison (not best plot method)", "Subsubsection",
 CellChangeTimes->{{3.8331745221398287`*^9, 
  3.8331745348762665`*^9}},ExpressionUUID->"a8505cf6-21bd-4b03-a57b-\
f05801d9f845"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p15", "=", " ", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"sequenceN15", ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "plotstyleN15"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<N=15\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8331705402556047`*^9, 3.833170562535511*^9}, {
  3.8331708455999694`*^9, 3.833170845762953*^9}, {3.833173774048476*^9, 
  3.833173778134569*^9}, {3.8331738169751062`*^9, 3.8331738393756514`*^9}, {
  3.8331739708401604`*^9, 3.833173975702689*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"39c0ae0e-2d99-4e60-8bba-686ae59f2cf1"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.1]], 
        LineBox[{{0.035573019315953955`, 0.11427808525681848`}, {
         0.10671905794786186`, 0.11427808525681811`}, {0.1778650965797698, 
         0.11427808525681775`}, {0.24901113521167767`, 
         0.11427808525681775`}, {0.3201571738435856, 0.11427808525681775`}, {
         0.3913032124754935, 0.11427808525681739`}, {0.4624492511074014, 
         0.11427808525681683`}, {0.5335952897393094, 0.11427808525681739`}, {
         0.6047413283712172, 0.11427808525681739`}, {0.6758873670031251, 
         0.11427808525681775`}, {0.7470334056350331, 0.11427808525681739`}, {
         0.818179444266941, 0.11427808525681775`}, {0.8893254828988488, 
         0.11427808525681683`}, {0.9604715215307568, 0.11427808525681775`}, {
         1.0316175601626647`, 0.11427808525681739`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.18000000000000002`]], 
        LineBox[{{0.0360901233727952, 0.11427808525681811`}, {
         0.1082703701183856, 0.11427808525681775`}, {0.180450616863976, 
         0.11427808525681775`}, {0.2526308636095664, 0.11427808525681775`}, {
         0.3248111103551568, 0.11427808525681811`}, {0.3969913571007472, 
         0.11427808526237279`}, {0.4691716038463376, 0.1142780858972908}, {
         0.541351850591928, 0.11427811877126567`}, {0.6135320973375183, 
         0.1142791290856144}, {0.6857123440831088, 0.11429944584511743`}, {
         0.7578925908286992, 0.11457746681861183`}, {0.8300728375742896, 
         0.11718780380688601`}, {0.9022530843198799, 0.1338208139151175}, {
         0.9744333310654704, 0.20450145061691505`}, {1.0466135778110608`, 
         0.3976553464399802}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.26]], 
        LineBox[{{0.03623008827239822, 0.11427808525691734`}, {
         0.10869026481719467`, 0.11427808525880676`}, {0.1811504413619911, 
         0.11427808530014698`}, {0.25361061790678757`, 
         0.11427808604918849`}, {0.326070794451584, 0.11427809753362823`}, {
         0.39853097099638046`, 0.1142782460327349}, {0.4709911475411769, 
         0.11427985681481098`}, {0.5434513240859733, 0.11429441229258303`}, {
         0.6159115006307698, 0.11440296807496866`}, {0.6883716771755662, 
         0.11506294295821513`}, {0.7608318537203627, 0.11828283228065486`}, {
         0.8332920302651591, 0.13067478020454285`}, {0.9057522068099556, 
         0.1677457371104636}, {0.978212383354752, 0.252819580407185}, {
         1.0506725598995486`, 0.39649158503812576`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3400000000000001]], 
        LineBox[{{0.03633329498927283, 0.11427808545176056`}, {
         0.1089998849678185, 0.11427808674849174`}, {0.18166647494636418`, 
         0.1142780992163182}, {0.2543330649249098, 0.11427820318738112`}, {
         0.3269996549034555, 0.11427898390162555`}, {0.39966624488200114`, 
         0.11428420540047463`}, {0.47233283486054684`, 
         0.11431496223332337`}, {0.5449994248390925, 0.11447272258181371`}, {
         0.6176660148176382, 0.11516894935459839`}, {0.6903326047961839, 
         0.11777926647167632`}, {0.7629991947747294, 0.12599221529711907`}, {
         0.8356657847532751, 0.1474695272351209}, {0.9083323747318208, 
         0.1938669475461064}, {0.9809989647103665, 0.2759347671018963}, {
         1.0536655546889122`, 0.3901147129869903}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.42000000000000004`]], 
        LineBox[{{0.036418164807412966`, 0.11427809742240906`}, {
         0.10925449442223889`, 0.114278143444722}, {0.18209082403706484`, 
         0.11427844102179426`}, {0.2549271536518908, 0.11428009226718508`}, {
         0.32776348326671667`, 0.11428849264965753`}, {0.4005998128815426, 
         0.11432727678756265`}, {0.47343614249636856`, 0.1144880203886294}, {
         0.5462724721111945, 0.1150797400679213}, {0.6191088017260205, 
         0.1169944698009061}, {0.6919451313408463, 0.12238955393486552`}, {
         0.7647814609556722, 0.13552988078785627`}, {0.8376177905704982, 
         0.16307871321305742`}, {0.9104541201853241, 0.21266050872642694`}, {
         0.9832904498001501, 0.28855211556471566`}, {1.056126779414976, 
         0.38347434232634003`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5000000000000001]], 
        LineBox[{{0.03649123472333449, 0.11427827142231187`}, {
         0.10947370417000346`, 0.11427874183595549`}, {0.18245617361667243`, 
         0.11428111512582065`}, {0.2554386430633414, 0.11429117556570782`}, {
         0.3284211125100104, 0.11433059659904432`}, {0.40140358195667936`, 
         0.11447227568291922`}, {0.47438605140334833`, 
         0.11493483532972634`}, {0.5473685208500173, 0.11629439644373636`}, {
         0.6203509902966863, 0.1198632440326322}, {0.6933334597433553, 
         0.12817771823967186`}, {0.7663159291900242, 0.14530420885626164`}, {
         0.8392983986366932, 0.17644547288380247`}, {0.9122808680833622, 
         0.22631721936918292`}, {0.9852633375300311, 0.2958794013227609}, {
         1.0582458069767, 0.37711661421162274`}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5800000000000001]], 
        LineBox[{{0.03655588825415281, 0.11427941138134269`}, {
         0.10966766476245843`, 0.11428184071304695`}, {0.18277944127076406`, 
         0.11429216479090418`}, {0.2558912177790697, 0.11432816328735472`}, {
         0.3290029942873753, 0.11444467399752452`}, {0.4021147707956809, 
         0.11479314941089272`}, {0.47522654730398656`, 0.1157486347357519}, {
         0.5483383238122922, 0.11813305236078799`}, {0.6214501003205978, 
         0.1235173936970059}, {0.6945618768289035, 0.13447731328646773`}, {
         0.767673653337209, 0.15455164125824164`}, {0.8407854298455146, 
         0.18761252248540683`}, {0.9138972063538203, 0.23642267336473244`}, {
         0.9870089828621259, 0.3001945028563742}, {1.0601207593704316`, 
         0.3711438088086942}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.66]], 
        LineBox[{{0.0366141489105149, 0.11428395803162866`}, {
         0.1098424467315447, 0.11429216141747982`}, {0.1830707445525745, 
         0.11432292344432576`}, {0.2562990423736043, 0.11441535631964195`}, {
         0.3295273401946341, 0.11467362878952687`}, {0.4027556380156639, 
         0.11534447100148353`}, {0.4759839358366937, 0.11695416665012227`}, {
         0.5492122336577234, 0.12050257790053774`}, {0.6224405314787533, 
         0.1276598224454903}, {0.695668829299783, 0.14083970501281315`}, {
         0.7688971271208129, 0.16298050395168387`}, {0.8421254249418426, 
         0.19688475125152663`}, {0.9153537227628725, 0.24401521308737414`}, {
         0.9885820205839022, 0.3026521045875091}, {1.0618103184049321`, 
         0.3655547904793317}}]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.7400000000000001]], 
        LineBox[{{0.036667340454230125`, 0.11429697349082638`}, {
         0.11000202136269038`, 0.11431780274310914`}, {0.18333670227115062`, 
         0.11438887788615786`}, {0.25667138317961086`, 0.1145789168374864}, {
         0.33000606408807115`, 0.11505154390676375`}, {0.4033407449965314, 
         0.11614950209575496`}, {0.4766754259049916, 0.11852163323525253`}, {
         0.5500101068134519, 0.12326834272990406`}, {0.6233447877219122, 
         0.13204182272115844`}, {0.6966794686303723, 0.1470017296209722}, {
         0.7700141495388326, 0.17052371325256588`}, {0.8433488304472929, 
         0.20458630524237462`}, {0.9166835113557531, 0.24978079350850788`}, {
         0.9900181922642134, 0.3038996059002532}, {1.0633528731726736`, 
         0.3603210676218419}}]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.8200000000000002]], 
        LineBox[{{0.03671638480813649, 0.11432649622509082`}, {
         0.11014915442440948`, 0.11436973929971929`}, {0.18358192404068246`, 
         0.11450693604744397`}, {0.25701469365695545`, 
         0.11484109100732937`}, {0.33044746327322844`, 
         0.11559745045049964`}, {0.4038802328895014, 0.11720299707071871`}, {
         0.4773130025057744, 0.12039120510486055`}, {0.5507457721220475, 
         0.1262965661125353}, {0.6241785417383203, 0.13648122987283065`}, {
         0.6976113113545934, 0.1528240162832288}, {0.7710440809708663, 
         0.17721255240046707`}, {0.8444768505871394, 0.21099901614268324`}, {
         0.9179096202034123, 0.2541851866768991}, {0.9913423898196854, 
         0.3043273000961983}, {1.0647751594359582`, 
         0.35540875108052145`}}]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.18000000000000002`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.26]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.42000000000000004`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5000000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5800000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.66]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.7400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.8200000000000002]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.18000000000000002`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.26]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.42000000000000004`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5000000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5800000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.66]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.7400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[
         0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.18000000000000002`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.26]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.3400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.42000000000000004`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5000000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.5800000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.66]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[0.7400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 72], 0.013888888888888888`]], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0], 
         Opacity[
         0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.014131308063453866`, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.014131308063453866`, 1.0647751594359582`}, {
       0, 0.3976553464399802}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"N=15\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.18000000000000002`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.26`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3400000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.42000000000000004`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.5000000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.5800000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.66`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.7400000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.8200000000000002`", "]"}]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.833170555713262*^9, 3.8331705628044167`*^9}, 
   3.8331706286634016`*^9, 3.8331706742780857`*^9, 3.8331707337764797`*^9, 
   3.8331708460784893`*^9, 3.8331737785005393`*^9, {3.8331738129082966`*^9, 
   3.833173825783433*^9}, 3.8331738647359314`*^9, 3.8331738992947507`*^9, 
   3.8331739761143003`*^9, 3.833174303083991*^9, 3.8331743661130047`*^9, 
   3.8331744045038433`*^9, 3.8331744824222803`*^9, 3.8331747712282066`*^9, 
   3.8338695072479143`*^9, 3.8338697337604313`*^9, 3.8346672410502367`*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"cd805f7a-ab81-4345-bc6f-4c39136a68e5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p5", "=", 
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"sequenceN5", ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "plotstyleN5"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", " ", 
     RowBox[{"{", "\"\<N=5\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8331705468503747`*^9, 3.833170568172905*^9}, {
  3.8331708186505737`*^9, 3.8331708300333443`*^9}, {3.833173828295372*^9, 
  3.8331738416155114`*^9}, {3.8331739388317757`*^9, 3.833173949755945*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"992ff666-3af1-4d68-97a6-cc06c8b9820c"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{}, {}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.1]], 
        LineBox[{{0.10671905794786188`, 0.11427808525681811`}, {
         0.32015717384358566`, 0.11427808525681739`}, {0.5335952897393094, 
         0.11427808525681739`}, {0.7470334056350332, 0.11427808525681739`}, {
         0.9604715215307569, 0.11427808525681739`}}]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.18000000000000002`]], 
        LineBox[{{0.10796877566451742`, 0.11427812521827754`}, {
         0.32390632699355226`, 0.11428061657936261`}, {0.5398438783225871, 
         0.11441423144088149`}, {0.7557814296516219, 0.11893530899402482`}, {
         0.9717189809806568, 0.20968836038683364`}}]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.26]], 
        LineBox[{{0.10876104187479146`, 0.11427974203929316`}, {
         0.3262831256243744, 0.11431755045201904`}, {0.5438052093739574, 
         0.11517668128463981`}, {0.7613272931235402, 0.12851148269249227`}, {
         0.9788493768731232, 0.26243073311721044`}}]}, {
        Hue[0.37820393249936934`, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.3400000000000001]], 
        LineBox[{{0.10930918154564442`, 0.1142890379312982}, {
         0.3279275446369333, 0.11443902688701589`}, {0.5465459077282221, 
         0.11663843308576584`}, {0.765164270819511, 0.13915377383730074`}, {
         0.9837826339107998, 0.29302277134211907`}}]}, {
        Hue[0.6142719099991583, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.42000000000000004`]], 
        LineBox[{{0.10971007059066168`, 0.11431600823271543`}, {
         0.32913021177198504`, 0.11468149873914192`}, {0.5485503529533085, 
         0.11868205684045872`}, {0.7679704941346317, 0.14952966045084753`}, {
         0.9873906353159552, 0.31080465167188903`}}]}, {
        Hue[0.8503398874989481, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5000000000000001]], 
        LineBox[{{0.11001674526840417`, 0.11437237558296731`}, {
         0.33005023580521253`, 0.11506508315463705`}, {0.5500837263420209, 
         0.12116503237905238`}, {0.7701172168788292, 0.1591435376130116}, {
         0.9901507074156376, 0.32083298026392987`}}]}, {
        Hue[0.08640786499873876, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5800000000000001]], 
        LineBox[{{0.11026079763177905`, 0.11446990265361082`}, {
         0.3307823928953372, 0.11559706471615126`}, {0.5513039881588953, 
         0.12395799227233233`}, {0.7718255834224533, 0.16783515416421452`}, {
         0.9923471786860115, 0.32605887434112746`}}]}, {
        Hue[0.3224758424985268, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.66]], 
        LineBox[{{0.11046194861473482`, 0.11461928475136238`}, {
         0.3313858458442045, 0.1162755848282592}, {0.5523097430736741, 
         0.12695287886294088`}, {0.7732336403031438, 0.17558925416504584`}, {
         0.9941575375326134, 0.3282744825704222}}]}, {
        Hue[0.5585438199983166, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.7400000000000001]], 
        LineBox[{{0.11063288848645368`, 0.11482949729001334`}, {
         0.33189866545936103`, 0.11709265643764763`}, {0.5531644424322684, 
         0.1300627819303085}, {0.7744302194051758, 0.18245392137985061`}, {
         0.9956959963780831, 0.3285943974078402}}]}, {
        Hue[0.7946117974981064, 0.6, 0.6], 
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.8200000000000002]], 
        LineBox[{{0.11078197010254887`, 0.11510747835101054`}, {
         0.3323459103076466, 0.11803647782197854`}, {0.5539098505127443, 
         0.13321948136305647`}, {0.7754737907178421, 0.18850293726084452`}, {
         0.9970377309229398, 0.32772267797972476`}}]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.18000000000000002`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.26]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.3400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.42000000000000004`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5000000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5800000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.66]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.7400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.8200000000000002]]}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.18000000000000002`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.26]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.3400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.42000000000000004`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5000000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5800000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.66]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.7400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[
         0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.1]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.18000000000000002`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.26]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.3400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.42000000000000004`]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5000000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.5800000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.66]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[0.7400000000000001]]}, {
        Directive[
         PointSize[
          NCache[
           Rational[1, 60], 0.016666666666666666`]], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1], 
         Opacity[
         0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0.08817075226088132, 0}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.08817075226088132, 0.9970377309229398}, {
       0, 0.3285943974078402}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"N=5\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.18000000000000002`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.26`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.3400000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.42000000000000004`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.5000000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.5800000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.66`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.7400000000000001`", "]"}]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                   RowBox[{"Opacity", "[", "0.8200000000000002`", "]"}]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               
               RowBox[{
                "True", ",", "True", ",", "True", ",", "True", ",", "True", 
                 ",", "True", ",", "True", ",", "True", ",", "True", ",", 
                 "True"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.833170558516759*^9, 3.833170568627038*^9}, 
   3.833170628730084*^9, 3.833170674378377*^9, 3.833170733838997*^9, {
   3.8331708235253067`*^9, 3.833170830387217*^9}, {3.833173813093788*^9, 
   3.833173832648656*^9}, 3.8331738650091534`*^9, 3.833173899436626*^9, 
   3.833173950262574*^9, 3.833174303249015*^9, 3.833174366263404*^9, 
   3.8331744046788397`*^9, 3.8331744825877514`*^9, 3.8331747714181814`*^9, 
   3.8338695074184465`*^9, 3.8338697340125713`*^9, 3.8346672411969705`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"28f364b6-94fa-4071-af71-5e3745524df0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"p15", ",", "p5"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", " ", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.833173834896472*^9, 3.833173875305544*^9}, {
  3.8331739347174187`*^9, 3.8331739360234385`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"9a0605bd-cfa4-4893-8854-069820e03da3"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.1]], 
         LineBox[{{0.035573019315953955`, 0.11427808525681848`}, {
          0.10671905794786186`, 0.11427808525681811`}, {0.1778650965797698, 
          0.11427808525681775`}, {0.24901113521167767`, 
          0.11427808525681775`}, {0.3201571738435856, 0.11427808525681775`}, {
          0.3913032124754935, 0.11427808525681739`}, {0.4624492511074014, 
          0.11427808525681683`}, {0.5335952897393094, 0.11427808525681739`}, {
          0.6047413283712172, 0.11427808525681739`}, {0.6758873670031251, 
          0.11427808525681775`}, {0.7470334056350331, 0.11427808525681739`}, {
          0.818179444266941, 0.11427808525681775`}, {0.8893254828988488, 
          0.11427808525681683`}, {0.9604715215307568, 0.11427808525681775`}, {
          1.0316175601626647`, 0.11427808525681739`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.18000000000000002`]], 
         LineBox[{{0.0360901233727952, 0.11427808525681811`}, {
          0.1082703701183856, 0.11427808525681775`}, {0.180450616863976, 
          0.11427808525681775`}, {0.2526308636095664, 0.11427808525681775`}, {
          0.3248111103551568, 0.11427808525681811`}, {0.3969913571007472, 
          0.11427808526237279`}, {0.4691716038463376, 0.1142780858972908}, {
          0.541351850591928, 0.11427811877126567`}, {0.6135320973375183, 
          0.1142791290856144}, {0.6857123440831088, 0.11429944584511743`}, {
          0.7578925908286992, 0.11457746681861183`}, {0.8300728375742896, 
          0.11718780380688601`}, {0.9022530843198799, 0.1338208139151175}, {
          0.9744333310654704, 0.20450145061691505`}, {1.0466135778110608`, 
          0.3976553464399802}}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.26]], 
         LineBox[{{0.03623008827239822, 0.11427808525691734`}, {
          0.10869026481719467`, 0.11427808525880676`}, {0.1811504413619911, 
          0.11427808530014698`}, {0.25361061790678757`, 
          0.11427808604918849`}, {0.326070794451584, 0.11427809753362823`}, {
          0.39853097099638046`, 0.1142782460327349}, {0.4709911475411769, 
          0.11427985681481098`}, {0.5434513240859733, 0.11429441229258303`}, {
          0.6159115006307698, 0.11440296807496866`}, {0.6883716771755662, 
          0.11506294295821513`}, {0.7608318537203627, 0.11828283228065486`}, {
          0.8332920302651591, 0.13067478020454285`}, {0.9057522068099556, 
          0.1677457371104636}, {0.978212383354752, 0.252819580407185}, {
          1.0506725598995486`, 0.39649158503812576`}}]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3400000000000001]], 
         LineBox[{{0.03633329498927283, 0.11427808545176056`}, {
          0.1089998849678185, 0.11427808674849174`}, {0.18166647494636418`, 
          0.1142780992163182}, {0.2543330649249098, 0.11427820318738112`}, {
          0.3269996549034555, 0.11427898390162555`}, {0.39966624488200114`, 
          0.11428420540047463`}, {0.47233283486054684`, 
          0.11431496223332337`}, {0.5449994248390925, 0.11447272258181371`}, {
          0.6176660148176382, 0.11516894935459839`}, {0.6903326047961839, 
          0.11777926647167632`}, {0.7629991947747294, 0.12599221529711907`}, {
          0.8356657847532751, 0.1474695272351209}, {0.9083323747318208, 
          0.1938669475461064}, {0.9809989647103665, 0.2759347671018963}, {
          1.0536655546889122`, 0.3901147129869903}}]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.42000000000000004`]], 
         LineBox[{{0.036418164807412966`, 0.11427809742240906`}, {
          0.10925449442223889`, 0.114278143444722}, {0.18209082403706484`, 
          0.11427844102179426`}, {0.2549271536518908, 0.11428009226718508`}, {
          0.32776348326671667`, 0.11428849264965753`}, {0.4005998128815426, 
          0.11432727678756265`}, {0.47343614249636856`, 0.1144880203886294}, {
          0.5462724721111945, 0.1150797400679213}, {0.6191088017260205, 
          0.1169944698009061}, {0.6919451313408463, 0.12238955393486552`}, {
          0.7647814609556722, 0.13552988078785627`}, {0.8376177905704982, 
          0.16307871321305742`}, {0.9104541201853241, 0.21266050872642694`}, {
          0.9832904498001501, 0.28855211556471566`}, {1.056126779414976, 
          0.38347434232634003`}}]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5000000000000001]], 
         LineBox[{{0.03649123472333449, 0.11427827142231187`}, {
          0.10947370417000346`, 0.11427874183595549`}, {0.18245617361667243`, 
          0.11428111512582065`}, {0.2554386430633414, 0.11429117556570782`}, {
          0.3284211125100104, 0.11433059659904432`}, {0.40140358195667936`, 
          0.11447227568291922`}, {0.47438605140334833`, 
          0.11493483532972634`}, {0.5473685208500173, 0.11629439644373636`}, {
          0.6203509902966863, 0.1198632440326322}, {0.6933334597433553, 
          0.12817771823967186`}, {0.7663159291900242, 0.14530420885626164`}, {
          0.8392983986366932, 0.17644547288380247`}, {0.9122808680833622, 
          0.22631721936918292`}, {0.9852633375300311, 0.2958794013227609}, {
          1.0582458069767, 0.37711661421162274`}}]}, {
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5800000000000001]], 
         LineBox[{{0.03655588825415281, 0.11427941138134269`}, {
          0.10966766476245843`, 0.11428184071304695`}, {0.18277944127076406`, 
          0.11429216479090418`}, {0.2558912177790697, 0.11432816328735472`}, {
          0.3290029942873753, 0.11444467399752452`}, {0.4021147707956809, 
          0.11479314941089272`}, {0.47522654730398656`, 0.1157486347357519}, {
          0.5483383238122922, 0.11813305236078799`}, {0.6214501003205978, 
          0.1235173936970059}, {0.6945618768289035, 0.13447731328646773`}, {
          0.767673653337209, 0.15455164125824164`}, {0.8407854298455146, 
          0.18761252248540683`}, {0.9138972063538203, 0.23642267336473244`}, {
          0.9870089828621259, 0.3001945028563742}, {1.0601207593704316`, 
          0.3711438088086942}}]}, {
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.66]], 
         LineBox[{{0.0366141489105149, 0.11428395803162866`}, {
          0.1098424467315447, 0.11429216141747982`}, {0.1830707445525745, 
          0.11432292344432576`}, {0.2562990423736043, 0.11441535631964195`}, {
          0.3295273401946341, 0.11467362878952687`}, {0.4027556380156639, 
          0.11534447100148353`}, {0.4759839358366937, 0.11695416665012227`}, {
          0.5492122336577234, 0.12050257790053774`}, {0.6224405314787533, 
          0.1276598224454903}, {0.695668829299783, 0.14083970501281315`}, {
          0.7688971271208129, 0.16298050395168387`}, {0.8421254249418426, 
          0.19688475125152663`}, {0.9153537227628725, 0.24401521308737414`}, {
          0.9885820205839022, 0.3026521045875091}, {1.0618103184049321`, 
          0.3655547904793317}}]}, {
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.7400000000000001]], 
         LineBox[{{0.036667340454230125`, 0.11429697349082638`}, {
          0.11000202136269038`, 0.11431780274310914`}, {0.18333670227115062`, 
          0.11438887788615786`}, {0.25667138317961086`, 0.1145789168374864}, {
          0.33000606408807115`, 0.11505154390676375`}, {0.4033407449965314, 
          0.11614950209575496`}, {0.4766754259049916, 0.11852163323525253`}, {
          0.5500101068134519, 0.12326834272990406`}, {0.6233447877219122, 
          0.13204182272115844`}, {0.6966794686303723, 0.1470017296209722}, {
          0.7700141495388326, 0.17052371325256588`}, {0.8433488304472929, 
          0.20458630524237462`}, {0.9166835113557531, 0.24978079350850788`}, {
          0.9900181922642134, 0.3038996059002532}, {1.0633528731726736`, 
          0.3603210676218419}}]}, {
         Hue[0.7946117974981064, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.8200000000000002]], 
         LineBox[{{0.03671638480813649, 0.11432649622509082`}, {
          0.11014915442440948`, 0.11436973929971929`}, {0.18358192404068246`, 
          0.11450693604744397`}, {0.25701469365695545`, 
          0.11484109100732937`}, {0.33044746327322844`, 
          0.11559745045049964`}, {0.4038802328895014, 0.11720299707071871`}, {
          0.4773130025057744, 0.12039120510486055`}, {0.5507457721220475, 
          0.1262965661125353}, {0.6241785417383203, 0.13648122987283065`}, {
          0.6976113113545934, 0.1528240162832288}, {0.7710440809708663, 
          0.17721255240046707`}, {0.8444768505871394, 0.21099901614268324`}, {
          0.9179096202034123, 0.2541851866768991}, {0.9913423898196854, 
          0.3043273000961983}, {1.0647751594359582`, 
          0.35540875108052145`}}]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.1]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.18000000000000002`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.26]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.42000000000000004`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5000000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5800000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.66]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.7400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.8200000000000002]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.1]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.18000000000000002`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.26]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.42000000000000004`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5000000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5800000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.66]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.7400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[
          0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.1]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.18000000000000002`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.26]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.3400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.42000000000000004`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5000000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.5800000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.66]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[0.7400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 72], 0.013888888888888888`]], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0], 
          Opacity[
          0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}, {{}, {{{}, {}, {
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.1]], 
         LineBox[{{0.10671905794786188`, 0.11427808525681811`}, {
          0.32015717384358566`, 0.11427808525681739`}, {0.5335952897393094, 
          0.11427808525681739`}, {0.7470334056350332, 0.11427808525681739`}, {
          0.9604715215307569, 0.11427808525681739`}}]}, {
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.18000000000000002`]], 
         LineBox[{{0.10796877566451742`, 0.11427812521827754`}, {
          0.32390632699355226`, 0.11428061657936261`}, {0.5398438783225871, 
          0.11441423144088149`}, {0.7557814296516219, 0.11893530899402482`}, {
          0.9717189809806568, 0.20968836038683364`}}]}, {
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.26]], 
         LineBox[{{0.10876104187479146`, 0.11427974203929316`}, {
          0.3262831256243744, 0.11431755045201904`}, {0.5438052093739574, 
          0.11517668128463981`}, {0.7613272931235402, 0.12851148269249227`}, {
          0.9788493768731232, 0.26243073311721044`}}]}, {
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.3400000000000001]], 
         LineBox[{{0.10930918154564442`, 0.1142890379312982}, {
          0.3279275446369333, 0.11443902688701589`}, {0.5465459077282221, 
          0.11663843308576584`}, {0.765164270819511, 0.13915377383730074`}, {
          0.9837826339107998, 0.29302277134211907`}}]}, {
         Hue[0.6142719099991583, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.42000000000000004`]], 
         LineBox[{{0.10971007059066168`, 0.11431600823271543`}, {
          0.32913021177198504`, 0.11468149873914192`}, {0.5485503529533085, 
          0.11868205684045872`}, {0.7679704941346317, 0.14952966045084753`}, {
          0.9873906353159552, 0.31080465167188903`}}]}, {
         Hue[0.8503398874989481, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5000000000000001]], 
         LineBox[{{0.11001674526840417`, 0.11437237558296731`}, {
          0.33005023580521253`, 0.11506508315463705`}, {0.5500837263420209, 
          0.12116503237905238`}, {0.7701172168788292, 0.1591435376130116}, {
          0.9901507074156376, 0.32083298026392987`}}]}, {
         Hue[0.08640786499873876, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5800000000000001]], 
         LineBox[{{0.11026079763177905`, 0.11446990265361082`}, {
          0.3307823928953372, 0.11559706471615126`}, {0.5513039881588953, 
          0.12395799227233233`}, {0.7718255834224533, 0.16783515416421452`}, {
          0.9923471786860115, 0.32605887434112746`}}]}, {
         Hue[0.3224758424985268, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.66]], 
         LineBox[{{0.11046194861473482`, 0.11461928475136238`}, {
          0.3313858458442045, 0.1162755848282592}, {0.5523097430736741, 
          0.12695287886294088`}, {0.7732336403031438, 0.17558925416504584`}, {
          0.9941575375326134, 0.3282744825704222}}]}, {
         Hue[0.5585438199983166, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.7400000000000001]], 
         LineBox[{{0.11063288848645368`, 0.11482949729001334`}, {
          0.33189866545936103`, 0.11709265643764763`}, {0.5531644424322684, 
          0.1300627819303085}, {0.7744302194051758, 0.18245392137985061`}, {
          0.9956959963780831, 0.3285943974078402}}]}, {
         Hue[0.7946117974981064, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.8200000000000002]], 
         LineBox[{{0.11078197010254887`, 0.11510747835101054`}, {
          0.3323459103076466, 0.11803647782197854`}, {0.5539098505127443, 
          0.13321948136305647`}, {0.7754737907178421, 0.18850293726084452`}, {
          0.9970377309229398, 0.32772267797972476`}}]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.1]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.18000000000000002`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.26]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.3400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.42000000000000004`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5000000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5800000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.66]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.7400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.8200000000000002]]}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.1]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.18000000000000002`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.26]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.3400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.42000000000000004`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5000000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5800000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.66]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.7400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[
          0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}, {{
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.1]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.18000000000000002`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.26]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.3400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.42000000000000004`]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5000000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.5800000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.66]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[0.7400000000000001]]}, {
         Directive[
          PointSize[
           NCache[
            Rational[1, 60], 0.016666666666666666`]], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1], 
          Opacity[
          0.8200000000000002]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}}}, {{}, {}}}}, {
    PlotRange -> All, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.014131308063453866`, 0}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0.014131308063453866`, 1.0647751594359582`}, {
       0, 0.3976553464399802}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"N=15\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0], 
                    Opacity[0.1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.18000000000000002`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.26`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.3400000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.42000000000000004`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.5000000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.5800000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.66`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.7400000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "72"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.8200000000000002`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{"\"N=5\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1], 
                    Opacity[0.1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.1`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.18000000000000002`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.26`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.3400000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.42000000000000004`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.5000000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.5800000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.66`", "]"}]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.7400000000000001`", "]"}]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["1", "60"], "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False], ",", 
                    RowBox[{"Opacity", "[", "0.8200000000000002`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", 
                   
                   RowBox[{
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True", ",", "True", ",", "True", ",", 
                    "True", ",", "True"}], "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8331738651616554`*^9, 3.833173899557949*^9, 
  3.8331739787933097`*^9, 3.8331743034315042`*^9, 3.8331743664378977`*^9, 
  3.8331744048819103`*^9, 3.8331744827817664`*^9, 3.83317477164229*^9, 
  3.8338695076180162`*^9, 3.8338697342843466`*^9, 3.834667241396327*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"ac365d46-6a46-4e7f-902a-fa3fb91c992d"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Comparison of dynamics (becomes constant curve as N-> \[Infinity]) ", \
"Subsubsection",
 CellChangeTimes->{{3.8331745390176344`*^9, 
  3.833174572110835*^9}},ExpressionUUID->"38ff5cd4-6c40-4441-b6f8-\
5b76fa3a392c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"dataaN5", ",", "dataaN15"}], "}"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
   RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<N=5\>\"", ",", "\"\<N=15\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8331706674094863`*^9, 3.833170680450328*^9}, {
  3.833170767000933*^9, 3.8331708057159057`*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"c3ce7216-c351-4cb5-9385-3a0bb60052b9"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{}, {{{
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJw02ndcze/7B/DT3nVOg5QQIhTaadxXeyCVzAgZoUmUCBmpZCUpq0RWpGUk
qUhWifYQaW/Vae9+1/d3Pvfnn8/j+Sidc97n/b7v676ul+JOr7V7uBkMxnkp
BuN//6f/jW2p8NCWYoNV0rtbvRWuxENvzZyEGdTHyN1j0w9/mM0G37Ni/QOK
gSSkvkzklBL9eSj54zKTp2cxGy79exU79DmM9Gx2M5NdTn8/grjlpH2Z1GTD
9hl7LPuPRxG7g33vn6yg//4WsYrc8VGOsEHNXLqrRz2GzM/8/XuTCf17sUSs
c+UzFws2nHnjnOd7+D7ZF3bHw3Il/fsPyPOr51mTNmxwXZOu4PPzIfm0/x25
ZE9f7zFZ0sW9Y2gdG9Y1Mg8eWhxPuBK7n5JN9PWfEh1vwwV7trDB4Ni+3IPn
Esgfc40k9230/SSSjbYrJjc4s2EB8/30A7VJpH1F7lOl3fT9JZPToy+X/nJh
g0DJBa206BRy94lZm89++n5TyVHfK4qjbmwYj9bZrr3qBXm57IfgPk/6/l8S
//yV794fYEPPvoaQV8MvScxWOUu+Q/TzvCKLax7EafuwoUnjSqrmo9fkTBtX
5voj9POlkZ+6yw/sOsqGqkm93y8c3hCNZpVLO/zp500nWuFdFTYn2PDjWzOf
Btdb0j5sKaQSQD//WyI09PLn2Ck25ESEL0tNzCDrwqQLM8/Q6/GORC5Z+8g7
kA1p28lmta2Z5EL7VJNcEL0+WUQqp0EuLZgNzxa3n0kWyiZ/sv2+WZ6n1yub
mGbs8SoIZUPh6MryqC3vyZrg9rNWF+n1e08cbpr5pV9iw8raOW4b1T8Q01GR
N3Ou0Ov5gUTA+fiTYWzI/TQ4NU0ohzxX50ssuUqvbw7hzpCcO+caG+DZ94jy
vznE63KJ0+4Ier0/EiMF3Vex19mQHnZ/UeTrj+TzXH2/skh6/XOJk+6MPu4b
bNDw9ctafymX6GUHei66Sb+PXNLsXr7M+hYbnm9Z4yCz+xN5n6V3dOdt+v18
Ih7hv8/73GGDsvH81lK9z4QlLxZzJpp+X5/JHJf93edj2HB/wejxCNYXMhA9
8fLCXfr9fSESmi7zQmLZMFO0kLWu9Qtxm9HtHnCPfp9fSdHClA8H77Mhkv3w
kVT2V6L3+7nt9jj6/X4jtwLaTKwesIFV4a9fcv0bYVSd/aTykH7feaTy9M8p
0UdsuPDOvjDcPY9M69sr2/aIfv95ZMMOC80Pj9nAd3/hnrWm+cThcJnv9Sf0
fsgncQxebpd4NgQET4yw5L4Tt5QNg+pP6f3xnRiWDnuPo0fdSy4X9XwnD4y+
X895Ru+XAuLo5ed/LoENh9fGz7v6pYC8++4H5s/p/fODfLVfPM6VyIYunYA3
djE/yA7PyryMRHo//STla7599E5iwz6F9TZMn59k4pz15IJken/9JN7z08Iq
0QdPy7BblAqJvfnFsOAUer8VkqLp+yU1U9mw9PCpDMurhWTSXWFxTSq9/wqJ
bmFK+7kXbOh06Tj3eLyQZC8/4LLkJb0fi4jC3M7EH+j4zRvsBPYVEaF04TKv
V/T+LCKtQsJt4q/Z4LL6g9zekiJSbRMy+uw1vV+LSXVqqKxlGhvmgUrTZ1JM
Nlafta9No/dvMbFjOb448oYNtWpRSQueFpOa5R6rxNLp/VxMXtncWXAPHT2f
+1iQTAmRnb7KXuMtvb9LSOCES8VHtON0D7PmUyVEXME9d20Gvd9LiFv3/nm1
6OnCleIWnSXE/qvAlNs7ev+XkqpZ550H0WXjJlUPN5YSvUdF6wIy6fNQSmx0
99fzZ7EhvPt5HN/HUsKICJC6lEWfj1KSy+7uYWWzwbZe1nPP0jIy5WV29no2
fV7KyM7N6cXT37NBtOys7qebZeSPhVHLjff0+SkjnbPOfpX9wIZvX7q4lfjK
SVVf84moD/R5KieeOZfFZXLYEPR2c0HggXISJrnt9NUc+nyVE3X/sd+iH9lg
+jw3qrG6nHwWLlkY/JE+bxXk9nXZfYxcNjBil+00s6wg2h3f4vxy6fNXQb72
Jdd2o7PCb6k8SK0gza/3zHf5RJ/HCnJ8td3harT/Ob4hnlmVpPXN0zLbz/T5
rCTGr87YfETr+h34sOt8JYnanVGr9YU+r5VEYkg84jF6wLX6wsf+ShKnz3SX
/Uqf3ypirqjiEYJOdbLYMG9HFVmk/Oz20Ff6PFeRXx9Tx/Z8Y4OXXcqcs/lV
pCzR4mrJN/p8/yLLlq/cYZTHBhXTmR312r8I97rT7gl59Hn/RWZPD0+fns+G
Nq3gVyb3f5GgIL5VZ/Lp8/+L2JVYze9EP1buDbgvVk22bUm0Wv+drgfVZP9j
z4xM9G55p5XcR6tJ6bb4AKUCuj5Uk3Q1lxsX0YriX6V3NlaTiPTrgn0FdL34
TfrsJEs2/WBDDUPj7wfb3+Rmfexo5g+6fvwm65LZp+f+ZMPtvuh4xYzfZIJ1
zy3oJ11PfpN2Fd23behNzYKHTy/4Q6QeqB5YXUjXlz/Eybj5SiJapuoQqbv6
hyjfeCXPLKLrzR8Sfq9G5iC6OL9G0HjiD7m4NuJUURFdf2rIbJVRJ7ViNoRl
WZfE7qshzM/zk8OK6XpUQ+aukzvajbZJeRnNKK0hSxeUvLUpoevTX2IyT+/I
M7Twg9n7dsBfImmkmixYStervyS358TePegvkaHq75/+JV6R7JgPpXT9+ku2
txpvUijD65l7bFJCpJZs2axw3a+Mrme1RPzowo0laEWS3JBtVEvS7EfuqpbT
9a2WrM1RPBiMDkhr+urliy5T+l5bTte7WjJX+nTqigq8/svlE2cn1JJDFQ+V
wivo+ldLLkZMLGhHGzy1u/azrpZkLWxLM66k62Et4Zn5oeoG+va8IL+A6XVk
pLvsUnclXR/riO2mA2XmVWwYuZPhtMymjqQHFKXcrqLrZR0JNtOYz0ZvmsY2
+Xumjowf+qpq8Yuun3XEhyfz5y102pUFylfe1BFPS22R7l90Pa0jd5Qd6kyq
8fsV2ioGXfj6G1QcIqvp+lpPpvmXOrehD5+52ts1r56c37NJ3OA3XW/ryQuD
7M2X0cVjnytiNteTP0+EzWt/0/W3nnyY1C5S+4P3g8/4uzVX6knIPv2pM3/o
elxPtogJF5agr3Sp3Z/MrScBOmFm82vo+lxPFh597XQY3bV3b3DiaD3p/Llj
Zm4NXa8biNAXz9NSf9mwuu6O+7blDcTlRsalnX/p+t1ATq6eZZKCfuZYbC/u
0kBmVO2/O/WXrucNRBA8HtnU4v1VKqCTdbuBFDzq23i7lq7vDcTmeO7LVvQ+
G8OZnkUNJPB8XKZWHV3vG8hmpv2hM+gvn725Zgk0krCG8+U/6uj630h+nRRo
latng5LRk+YCg0YiP+vUE5d6uh80kuaSR7Kp6MD0P/knvBuJ9t0lKybq6f7Q
SDxPZQhbNbChXl0qRfVJI3l4iXE5vIHuF40E+O9//I02TrCK/POnkfTtMUtY
0Ej3j0Yic+S81QF0rNJJ/0tSTWTLbubN9Ea6nzQR/jyfGO4mNkzGvNhhaN1E
Tn522Lyqie4vTWS7sEneNbSTbJv5v5NNhLe1jF3dRPebJhK5837hvGY2ZFyd
tST6ZRO5YaC7162Z7j9NRIB/wetUtJzIOqZNexMZXjScOdJM96NmUj6mG2DU
wga/wPMD47ObydLcA6NBLXR/aiYyBUrLC9AVE1m/Etbjzz1/z5FqpftVM1kj
O71gE1rrSH/21gvN5OOODVoxrXT/aibWojMcG9ARPYsein5oJjEzfusrt9H9
rJl8y5erdkf37d8e+m6wmSi8XKOb0kb3txZSkdHtMIC2b4jwcldpIUGqh5eu
aKf7XQtRyrL7ehydvDVv3cydLaTt+rDi+3a6/7WQX5v+6PN0sEG8fGrF96gW
Mm+Z1zSLDroftpBZBTNTQ9Aetlqzjxe0EC1/B4n8Dro/tpCjCgFLxTrZkP/V
lVeFp5UI6gszbTvpftlKjPi2vQxDLzaJbavWbSWp2+rlizvp/tlK+uomLKT+
seF8RtmPC56tRKVVRnvdP7qftpLQK5fbItAtmiIv9R+0ksMf8pzL/tH9tZVE
66rclelig0Wi0c2OqlbSFCR1f30X3W9bibR8ret19IOFvidvS7QRX4uekdIu
uv+2EUOTe7bS3Wzgufds1yrzNlKoaevu0E334zbSqb3eLhztLFdnNXasjTzY
JDZe2E335zZi9ajQS6KHDe+vTVv6LLmNzFAdembTQ/frNtIzVZF8AT1LbLXU
luY28k7/28lvPXT/bieNInOmCbDZcCLo9LDwzHYSkbj8iBmb7uft5I/fmvun
0b+nXv95a99Oin7lR2Wx6f7eTjx3jW4cQ+sd7cxxDW4ngbmLG3R66X7fTvzK
E1YcRt/sVXwil9lO2m//3JLcS/f/drLWvM66Ez3ktvFSXm87CdBcxqvcR+uB
DsJg8F/Yhd7QdNH7mHIHnmdTamL6aH3QQZruHZ+qQr/clrNx8bYOkpuX8k+6
n9YLHUTT/1a8LVqqcsjg17UOMnk6QCO0n9YPHeTcwJMLuWhve9W5od86SIr2
ttTJflpPdJD3fU2PdQdwv8vbKaA31UFElgS5ew/Q+qKTpKkGMhLQy8xudLZp
dhLn+/N3Nw3QeqOTPA1+FjVrEPe7zIKim66dJFd76+2Ng7T+6CQte456haE7
tXnSrGM7yfvF5tLfBmk90kkKxhmhXEO43yXr3hkp6yQJaf8KVwzR+qST7I5e
1XYQHb/I83S8yD8SucmxJH6I1iv/SOLkpit1aIG4OJfNxv8Ir2SQwoxhWr/8
I11nZ5+0Q7vMrFoldOQfyX+9MyV4mNYz/4jAqYtpWehP18XV0hP+EeHFVWED
w7S++UeUfQMNVUZwv5Mwm7a//h85GfMtc+cIrXf+kZ8bG1g30WdCjo7JynaR
tSUiej9HaP3TRbzfH9fmG8X9jiup9qtNF7m8xktAf5TWQ13kxdKZzw+gwb/x
k9/ZLmJwPWPho1FaH3WR0/rnjlSjo/tnPFNO7yLuzsl3mGO0XuoiEj8PRZmj
xz1swyq7usjycr59x8Zo/dRNCh3uiCeht7QE+oTM7yaPUtwvNIzReqqbRLU8
q5k+jvvdjreOuo7dRPnEZcHV47S+6iZtoVZCp9Cyv7qh9Uo3+ZkhVvdinNZb
3eTOGlZYC9rXQUnpxqduojo9aJr8BK2/uklRQMzhNeiy747CVmPd5HLoxaen
J2g91kPci0+/eYmWm/d1yF+2hyRcTIppmaD1WQ8RC7VwkpvE/eLvznYHjR4y
oHOkf/Ukrdd6yKN7B3cHoP3uTPxesqaHuB7c8zxlktZvPeQV+/TPBrTy5hs/
efb3EHPxwTyZKVrP9RDj9T13LdEVMho51Wd7yKrhmDVHp2h910OuFyyreIoO
Ki54+SKmh3TZFa74PUXrvR7y88FzXzFGL2hd2ff4QnoPcbrWf4mgOfVfD9l7
pSjAC920iufWrlL8vK8OrI5Fc+rBHnLh+0RfITpCMOaifncPOWb5wJeLq/e/
+rCHBJhfKVVDm37SDZASZpO119rEdqI59SKbMBP+zA1H954uOdgxn00U3l6X
ykFz6kc2EbyhX8tG3yeeuz8Cm+wvGg5R5O79r55kk+y4QTF7tP2Y4Mbbjmxi
PeXkdQrNqS/ZpDJ44/MkNONNnPUhHzZ5eF3kaw2aU2+yyRzt+9liPL2QfJgY
rApjkwwV0wgDNKf+ZJOUPhkLN/R2taql856xSdE747KbaE49yibE+5/xV7R4
1yHFsU9sop4GFwfRnPqUTdJbt72cz9sLmU/FpUtq2cR91sG3a9GcepVN1Jbc
iTmF9tgbz/9sjE2aovmcE9Gc+rWXyOUUc/1Gz5xvNnJmWi/JjlU+LcTX+189
20vKGSp/tdH5tTUdjmq9ZOY+rpm70Zz6tpe8kC/QuYr2jz5ao766l3yb80I9
C82pd3uJoWGFaAd6saN0kfDeXmI2vPXzdP7e/+rfXiJwe+92M3TVtKSP9ad7
iYmaXOUBNKce7iUN56OWR6NDSqxfv73TS27rcO//hubUx70k6Orx0wNo3bDG
J+FpvST1hfIxRYHe/+rlXpIRoOxgg25ZHXDbtbiXbI6OFj2K5tTPvWToWPyj
B+hIIbnLJv96icEaD8VCNKee7iUR0sInxtAWn1+ekhPsI1+vxaYvEOz9r77u
I76O9hX26IEztod65/aRh+8Nyo+jOfV2H7FuPfP6MfoBtO/JM+wj7zJN/YrR
nPq7j9gPx8hPoB3GAzfd39RHPsm9jF0o1PtfPd5H8g7dF1iL5kmfverYoT7i
P+u83XE0pz7vIzXcwf6P0Kk+bw3XXu4jjuVvQwrRnHq9j2jMNPUbRTurr1++
OL6PMBaQlfOFe/+r3/uIonTepA2a1d09lzsXf7+cN/IImlPP95HTS0SZ99Dv
n4XK/KrpI8fiJtzz0Jz6vo8oxAwm9KG99ikJpo70kb2rpQtnivT+V+/3k7zk
Q+Xm6FlK70fPS/eT0Ltq7z3RnPq/n2hlu16KQv+oc/znvKyf8J/XJ+/RnPNA
P7Gxfl/cij4RM/B3xcp+Uj1bZhVLtPe/80E/2cnY8HgFWmVLWDFrTz+pSY1p
cUZzzgv9ZLBEWDQUXT19yae2APz9slfSqWjO+aGfWE6+5fqFvlD6Ke3DrX4S
5aZVwiXW+995op8cZRqdX4TWu7rj6c1X/eTO64F59mjO+aKf3J48EOeHbrMZ
u3OwsJ847PguEIvmnDf6iemSufZf0DeFI69Yd/STxqCLAV1ozvmjnzAOKV2T
Ee8Fqy/LzyjyDxDhr/wXDdCc88gA8dVZ6boLPXQ2//DInAHCXC20NBTNOZ8M
EBtXp4pk9CMjl71F+gPkXuF2lwo057wyQIqjFlVPoDdMMBzjNwwQqxclWvMl
ev87vwyQnWxf35Vovre3V58+OEA+ji2JPoDmnGcGSMxGkaeR6Je+2rD54gAR
c1GNfofmnG8GyKbdT33r0bs1itTUHg8Qc/db2oLM3v/OOwNkx2GZP6poqR63
+UI5A8TaTsPVAc05/wyQ8WSRGj90TgL/9LrfA2SO0mvdGDTnPDRALGesPPYR
fXD/PaH0oQEClTX3W9Gc89EgsbtwIVWM1QuKCwzGwyQHSaje3nh1NOe8NEh4
C0KCN6IL68u79qkOkoVCAjbH0Zzz0yD5FzE8EosOuHuwzshqkCwePHT5E5pz
nhokn8OvCLejl20VLZXdNUgEU5w9xSV7/ztfDZLiI4y36uga2cefe04Mksau
0/82oDnnrUEiOzUm6I++VGac/vXGIIn3DhS9i+acvwaJy8Dy4Ry0QfjvZ7Ev
Bsmk9PTvzWjOeWyQLDdeHSIshfvdmiMxfj8GicT3JpWlaM75bJBA+3C6Pfq2
iORVu7ZBsujFrWU+aM55bZAYK9ZeuoFe+TXhrDLvENGUrCnNQHPOb0NE1TKe
9y96NNDSlzF7iHDv2aDALd3733luiBzrH5mlhI43rt9XuWKIHN35RMgKzTnf
DRHC8P3jit40eXxL8rohEsVz5NYlNOe8N0RmBGcbJaMFMqavCfEaIutDdxUW
oznnvyEi2utrPYBOO5JqtCN0iOwKEUuYLtP733lwiMhP6A2vQLto2mjoPhwi
H5skl25Fc86HQ6Ql84nNSfT/qiHm+yFi0SKxMRbNOS8OEf6nW1bmoHOfn5Ft
/TVE/mreXdiI5pwfh8i66H9dfNNwv3NVEHk/gD//uzl2IZpznhwmirWD+tbo
eQvfTEQxhwlrf8UHVzTnfDlMlquKq19EFzes7fFaMkxSPj+/+BzNOW8Ok8S0
r0U/0Gdi/9VbWgwTW9eDXD1ozvlzmIwufyvPmo77nVNI2WznYXLO4tUcdTTn
PDpMHH8cZjqga2f8rwAcJvGlwh2H0Jzz6TC5suZ8cgT6Snnm25+Rw8Rajtv5
FZpzXh0m66eCxsvQcG3T88cpwyQucdHZQTTn/DpMMnPG+qfJ4n5n23c34Psw
6coWX6uD5pxnh8lh6cO3NqKjRS+Hb2wZJtGyhj+OoDnn22EyIO7/Lwpt8035
3DLuEXJoPgynoTnn3RFy/cCtrgr0+LmPRwQURkjkQHThEJpz/h0h52IdY6bP
wP3OZJvrX50RctS6bqMOmnMeHiFJL0wmNqAdp4a3pq0dIamXrlz2RXPOxyMk
8GClSCRa+N012yseIySzUdXnFZpzXh4hrzfF5pWi0/2WmuwNGSFPFhuJ9qM5
5+cRUhynoCclh/ud1jdNiBshsSNW69TRnPP0CPlmU+xoj5bt3bVwetYI8Uv8
ZnMAzTlfjxDXaaB6Bf0lcXJGd+UIYXmYjDxHc87bI+RtUEPKd7Sv203RL334
+vPVN3agOefvUWI0YNgmJI/7nbLmVIz4KJkTMW2fMppzHh8lZqH5JRbossYf
bN9Fo0R5jbvKHjTnfD5KWk0Fvc+iA+/tb1xjNkq2ZiY+uIfmnNdHCYx65maj
NbbxVizYPkqslDcV/UFzzu+jZPWuo/lj6Aa5u98mj46SLa/qUmfM7P3vPD9K
mqbFBuugwytWvCuPGCU/PT9ar0dzzvej5Ga444g32jiiNDExaZQcsTgcGYbm
nPdHyQHD2YqJ6B47r3tBeaPk5AzXm/lozvl/lDx02zXVio4VE47Y1jRKpr+c
4cCv0PtfP2CUrNp5O2Ie2jbvQZA2Y4zMLhv8aITm9AfGSIejXp0TejIIjorL
j5FHaoc7j6E5/YIxMhWU2hSFfm76y61Za4x4+/EUvERz+gdjxFPK534R2onh
sy3LbozsXy/j0oXm9BPGyMiS3ukis3C/y5Swj3QbIwOHZ7xZiOb0F8bI+ckb
FmbojKNPTT2DxohD8MmPO9CcfsMYOZlVsfQE2k3bXNvi3hgpN00NuYnm9B/w
/T+WL3qFluv7qzzr3RhRcFcULEZz+hFj5CN3kWoX+lvSMfnB8jGi/VPHRHh2
73/9iTHSr7TLfAHaz11G/Ad7jLxavUPHBM3pV4yR08cMZLehlRclMx6JjpNv
FbytR9Gc/sU4OXny86Pr6IqmlX0nFo4T1WOX16WgOf2McSL2dT/7OzroflPT
epNxorhxz4lWNKe/MU7MBS8P88zpBe3tpypVncbJmsSenbPRnH7HOJERv/VO
D90kL5/P5zdObtdE8m1Ac/of40TyW5/hQXRE5avMP+HjZHJf5p6LaE4/ZJwY
rWaceIw2vW6X/Or5ONHu+3o2B83pj4yT/MJ5x/6g++w77l/6Ok7Or1TYMYzm
9EvGyas3H7SkFHG/Ew+6vqdhnDi7KIypojn9E/z8Vw2SrdD2+XNCDCfHyYDr
kvW70Jx+ygR5M22w7QSaKyTjmMyMCVLx7InnDTSnvzJBIjVtG1LRyWYbPP5p
TJCAxAHLAjSn3zJBDgs/udOC3s7F3v5pzQT5rOJdxzW397/+ywSx+rd92ky0
eNaFtdH7J4jT9BP62mhOP2aCyLiW2dmhs44tMPcJnCBaNw5vcEVz+jMTxM7K
ZXUg2kPng47N3QnyW/q1egya06+ZIIYXvYTeoGf2b1ms9HaCVC+PKSxCc/o3
E0T3qE1IB/p78uDMidIJMv4zZDnfvN7/+jkTRDBiy7dZaH+PqxJl3RPkomzR
Wl00p78zQaQf9n+3Ry9erML9XHiS3PEp0nFDc/o9kyT2rfe1QHRV8+f+QKVJ
svRmw99oNKf/M0kGFy9TSEOfj3Nu2Wo0Sbac3LGqEM3pB02Sc5FnXNvQujvG
qzS3TBIft9hj3PN7/+sPTRLh9lx/eXTLzKjvor6TRLF/1EMTzekXTZLrO2zs
bdCRVWrZjWGTZMfYZyUXNKd/NEmiz3l3nERbRH5PefcM/crxfhSa00+aJGPa
oSuT0QNr9z6I+DxJHjwVafyK5vSXJsm/R22edegHEtxR7nX479OWdoygOf2m
ScKzrWmTpBLud9/vnDcbnySTTNk3i9Gc/tMUYRoWCZqiec7rHJ85fYq4mcmv
2oLm9KOmCG8AI+AQOtW82LNfbYrc0bvw4AKa05+aImVvP2XEoZ25PZy/r54i
uive5magOf2qKbK6yTu7BM3KFlj3YO8Uuds48qwDzelfTZHytZtDeRbgfud/
3+L4mSmSYXzbUR7N6WdNEev0bzM10F66hivWRU+R7LSuwpVoTn9rijxRkz6y
Ez17oGKJypsp0skykziG5vS7psjvFSE3r6J/pHjP4i2ZIkan22Xi0Zz+1xTZ
/fpw4Hv0CU8x1u9/U2RhzPKmCjSnHzZFBPoX6najI2VKuRx5GbDEdfcJ/oW9
//XHGOAT3/1SAf3/7REWAy7al9Roojn9MgZ0DsuOrUL//+WbzYB2lTyhXWhO
/4wBBQd7hI+ho5e/+xetwoBik+uTYWhOP40BupI5jY/RA5eFWoT0GOBgfSoz
C83przHgqlVVSBl69b8NtT6WDDi/t9yiE83ptzFAZODUELcy3h+rHlTVrWPA
fJ36WzPQnP4bA9TdeNSWo8fj2cU2OxnQ8ulfugWa049jwPZDT7Wc0A6C8D3d
iwGKUSYPDqE5/TkGaK7O5gtFP3O5+EnpBAPmPVzkGIvm9OsYIJ4Qeu81mudT
VdbVUAak7uyo/o7m9O8Y4J2zTqgB7fj/BS4D9r/7uWgEzenn4c9X7DGUWIT3
3+nDKfsfMkBFbpaZEprT32OAtA4P0UcL1354WpbKgBM7FJbYL6L9PgYkbvMR
2Yt2JhIPjN8zoJot9ff4Itr/Y4BhMdejcHT6na3RzwsYMC3ZcseTRbQfyIB3
Gl1iWWjmWHzkjGoGPJ6YSCxZRPuDDDj0KMC0Db1v89CVc60MGMjyz59cRPuF
+PcLRy2kF+P9nWZ2nj3AgPtb+F4vWkz7hwwo+hUnC+jp08LPOPFwwY/sGs91
i2k/kQv4fLLe7Ed7Hf7r/43JBQ5OqwZPLqb9RS4QKb20MAL9pVjFR2sWF/Cq
Xl4dv5j2G7kg7uW6PVnoWWrHPO8t4YL6pLaDJYtp/5ELHLeu925F+175slds
BRes6rnrMrGY9iO54PmtojWSS/D5+SftfNSCC5ae7V28cAntT3KBSZ7wmD5a
afVOxyYH/Pn5udl2S2i/kguEi42P7EGfeJrkYO/MBT+TDsw7toT2L7nAeUHa
x8voMsGJ1ZmeXBCurrApbgntZ3KBZt7T2jS0yt6VFouOc4Hs771O35fQ/iYX
yNtt/VGLDvwUBdfP4+8LhGkMLKH9Ti44WC18SUilF6rnNelyReH7iS39paBC
+59csEdxYKY6WuOMurrHAy6Yo3TYwUKF9kO5QMZ180lH9IXagCVVKVyw70lC
tKcK7Y9ywaWrPiln0PWkYL55NhfYF2akR6rQfikX/BEMfv0UrRctNyvlOxfk
VdY8zlKh/VMumFGRd6kYHT62d7rCL7z+EWv3NavQfioXbLl1QmcU3bb5FfN8
CxeUuDuMianS/ioXfA2pfqGINn7DLTzQzwWtuxWctVRpv5ULzhycw2ONvjnN
jseZmxsuyXbe3KpK+6/c8DwzWOkAuudw9Ph3CW4gWaMPz6rSfiw3bD64Wj4K
bVXSPqCrwA11CwPPPVWl/VluCFCJb8xE31XT7X6wmBvefMzRLVKl/VpuaF5S
eboR/b+ng6nLDauje7KHVGn/lhtkVkr1CS/F+rqruO64OTc4bbOUn7WU9nO5
QY8RoauGfrR6TnXrWm74aMtYZbaU9ne5QWrvtbUb0ZNPPUrX7eCGDY7rbF2X
0n4vNxTorDQ+gd4glFHw3oMbigWOK4ctpf1ffH/fe3jj0M/3Cn5R8eeG1LNJ
5a+W0n4wN0jMy47+iub7vP79jRBuELuzwLF6Ke0Pc8N4VadIF9ppflw6byQ3
eOXIvmAso/1ibrDQSrGVQr8805N6IA7/vmhmndIy2j/G661gul8XLVpnmPA7
mRuKtFY2r1xG+8nc8G521SYn9G648NAqixtexwy+91pG+8vc0H0gftYZdEZ0
ZczLfG4QsR0+GLGM9pu5YXln29tHaKlxpRtzqrhBaDBw5M0y2n/mhnzpQtV8
tKvjoasXm7nBsKNo459ltB/NDe+nXT3Sjc558z50uI8b7JdJX+JaTvvT3HDt
i/MNKbTcdPHA3Vw8UOR+6qbSctqv5gGhx75hOuiDPltOFIrzwL/hlSesl9P+
Nfovz44t6G8lT3wNZvKAbuljXY/ltJ/NA3lWhgIBaEX1Qa8ni3hg/7O8/LDl
tL/NA4m7NwTdR/uFme7HvQAkKpu1Xy6n/W4eqN115s8ndGFX2M5TZjyw3nnZ
sYrltP/NAxHz+0Xb0Mo2NVs67fHvjZdfH11O++E8kKBRIy2qhvvdsyXrN23n
gTBxZqiCGu2P88COAu+BpegKoaNrct15QOmZ6EYjNdov54GBPw2J9uil+z5b
Lj/GAyORk+M71Wj/nAc8uXcZH0YHfZYyvhPMA0mW04+fU6P9dB7QOq/4PBJd
M99ZT/A6DzxoDC59rEb76zzwxduu9w1a62yixuH7PHDP8jR/nhrtt/PATu85
rGr0pboxldokHjg5oSHZqUb77zzwqOuD0AS6CawXrM7kgR8WhUNi6rQfzwMr
uPf8noU2iImc/SaPB47JBqUtU6f9eR7wOb7ivBE6YrxBdn4lD3jMPGdvr077
9TzAqPdk7kR3OqpJhjXxwPLU8U/e6rR/zwPuHpreZ9Gm6SdFxnt54EK3vEyE
Ou3n80CVRHriA/Tt6d959zF4Qe4eC16p0/4+L1w+uOTzJ3Sfz4zJEjFeGFgp
alauTvv9vBDZm/6mGb2y1GUI5HnBaJHe/CF12v/nBYdn4UECGrjfqb/seabM
Cx+Xf/s7XYPOA/D1PBqWKaNHwrjap2vzwhmJFl9dDTof4IXPOVUvrdD23Wsa
zprywnrVD22bNOi8gBdWse/L7EfH29z53W3HCwcTAnWPatD5AS9YDrutPY9m
JLSVbdnGCzyu23bd1KDzBHz/4c5u8ehNwjo/v7jxwuvJY67pGnS+wAu/tJN3
fEMn7wv8qnGUFyyy+ddUadB5Ay+Iygaqt6EFvhR9uBuEzlQVH9Gg8wde4Fsg
VCeoifud0uwMkQheCP4s/0xWk84jeEFE3M1dGZ121v3lkXu80LR3fL6uJp1P
4OfVLyu1RIvXpz9vSOSF8x2j/hs16byCF25UeMvtRbsYCTy2fccLEY4myb6a
dH7BC4H5noZB6KyYdbEZ33jB9cTEh+uadJ7BCyuz+wwfomUm7t1cWMELqr83
pLzUpPMNXpgvrzIzF+2xpTv8WiMvrM72O1miSecdvFAoYFJZj85NN7g4xcb7
Y9mlRb2adP7BC9Je2725tHC/kw095zbFC7HDmalMLToP4QO18efts9GHfStO
VojywZmHmnLLtOh8hA8Oz9xoTND5pfP9TOX4QPKc3A4bLTov4YNbU2d9t6Ln
aXgfTFrIB8ef3Ah006LzEz7YdsMp9Bja/2q2q7wWHyg2VgSf16LzFD5ouiN6
4ga6uFt0d7AJHwgXMlwfa9H5Ch/oB6eveY1evMbRqc+WD/Z81V/ySYvOW/jg
6/WLUyXoMwmPN2x34oO+f8n59Vp0/sIHn/OfX2Gjq4QHbPNd+SBgQcgqhjad
x/DBC7bZlDhabb+JtY4fH2xQaHuqoE3nM3zw8frRNSrokC9XTOLO8cFL07E2
PW06r+GDtaKHTlija5X+6Etc4wONoibBTdp0fsMHWw5suuiC1g1crOUfywfG
uT8FfLTpPIcPKuPs/M+ir9QfWdrynA8u1P9tvqpN5zt8YGR3ZmUsusXo00KH
DD5wSTd4lKhN5z180NYsNfoODXclFbO/8oFpjKhFvjad//CB770loVXoyInt
ckvK+UAmyedzizadB/GB+Znu0QF015bnUlENfJBZHL2QV4fOh/igZN251ZJo
i7ejojxsPvBOf7p/jg6dF/GBcqJkwFJ0tKwVv9ckHyz48+GigQ6dH/GD0b93
4SvRA77Xp36J8EPfacGrm3ToPIkf3PTjg13QNmX1wxYz+OHE6zjfwzp0vsQP
ry6OO51BP9BY3pu6gB/WrXtjGKZD5038YB9bLRODHr96omOWJj9sY7g1P9Oh
8yd+6GK4JaWjHXryGkON+UFzSe2BLzp0HsUPC/l+Li5DP1sjWzO4hh+CWAZ/
6nXofIoffv9cEtKD5nm+p2LnVn44+e7+kkkdOq/ihwi7h19EdHG/E3lR+GM/
P8hx626doUvnV/xQa7q9bQE6dT8jT+8IP1w5N9tLU5fOs/ghWePEP2O08Feb
j48C+eFx2vHdtrp0vsUPGUfmlm5FOy+4/U4ynB/kK7wNXHXpvIsfqrS8o4+g
0wNbX528i9e3Z/5QoC6df/HD+p1XrMPRrAatpPYEfvhT+yriri6dh/HDxvd3
KhPQ+4zPPtnwlh9C7a1k3urS+Rg/qNe/W/kF/f5u4b2cL/wgkDnpV6pL52X8
8H6RZGwdevqkwu2lZfwg5TGW3aVL52f88O5rVuUY2murW8Sten447r+jXXAF
nafh9frQ2C+D/vL2zSX+Hn7wKLYdnruCztf4YVPTw/5l6Fkz+IO9J/ihQKWj
zWAFnbcJQEXlvEprtO8Rh1M1wgIQPm1d9oYVdP4mABrMU3d3oX+UxR5dKSsA
4v+e+R1YQedxAnC1qHrlCbSSZpf3ayUBWPNXalroCjqfE4BBzU2/ItEnwvXd
52oIwM6uhKi4FXReJ4D11bQ1yeiynpA9l40E4M2/qIl3K+j8TgCUnLQffUOr
2JZvG7URAJezA5blK+g8TwA0Pavq69GBz+dtctkiAAHKzb7dK+h8TwA83s7m
HUf/FjloX7xPALYvCg0V1KPzPgHoObJIWAat4Zq1kvgKwMRDrrOKenT+JwCx
ydMGVNEXvoqYPT0rALrh7jv09Og8UADcTAQ+WaDrF2w2nHZVABa8bp/roEfn
g/jv/8od247WO/dI+0yMADgl3s5z06PzQgFQkzgo7YcOb+hb1vVMAIw7YzYG
6tH5oQCe1xdFhKHbjI0XOaYLgM1rqbw7enSeKACmrjtHnqCNYy/P/fxZAPYq
z5j7So/OFwXgVoG+2Qf0zclqefVSAZDX/LG9QI/OGwXgkkbp4Sp0z9ZFMjF1
AtAba3+2SY/OHwUgfc3KC2y0VYavuHC3ALwUzbk4oUfnkQIw98m7YCF93O9m
5Ar4jgtAQofhcRl9Op8UhIN3rV0V0UNHWFz1QoIwEtJgr6pP55WCYOEmobEC
/f9f73RBKOAvEjPXp/NLQTg2Q6XeDv1YM6Evfb4gvNw2P3mrPp1nCoLzlcwj
+9CT4SOdSuqCUOs8pntYn843BUE6tK4vAL2BbdF8FQRhV/qhJxf06bwT/17M
qw1R6Oe2EX8nVguCf/PTyfv6dP4pCEl6G2MT0XyJdZX7HQWh3CRL/60+nYcK
wlRcQ+EntJPosuKyvYKQz8jfXqRP56OC4DlypPU3+qXr8XxjH0FIWNLl2qpP
56WCUKOu1tKHFv32Db8SQRh+bOY0pU/np4IQqKhSIGyA+93C6VkzwgThiUaH
9jQDOk8VBOUD524pojPO7U47Fy0I+1wmh1QM6HxVENzjNtvqoqUaU5LZTwXh
T8qtWFMDOm8VBD65Tx1r0G4mU/FObwSh2vn3ckcDOn8VhAnRRq896JzY1XHf
PuH1uvP3yQEDOo8VhIErxdX+aLmpm3e0SgRhz673gsEGdD4rCJuvJiwLRx90
arl+rxZf/+otu2gDOq/F6/HrktsT9LcMzStiXYKg//f8qRcGdH4rCK+Z4Vey
0Ipy/+vYC4JATfyNbwZ0nisEP16U3i5F+/n9PN0kKAQHxmVu/jWg810hEJtz
MKwdXVg+099+mhCEBLadHjCg814hOH/pjAfDEPc7LdfDmfOE4OQdcBAxpPNf
IbjBnK8xDR1wLc1jkZoQVFpoiCka0nmwEPDcOlC3BF3B5t17nQhBys6/SdqG
dD4sBOZDZ/yM0cvs1u7gWi0E7Gfb9Fcb0nmxEGQV+wxvQAcl3t3ssVkIzmbk
Jzkb0vmxEPS+2OXsjq4R/be2ykUIrgoYix0xpPNkIfgw5fLiNFrbTW+1+WH8
ew2VDhcN6XxZCKKHb3ZFoi99CzZPOS0EG04/P3vPkM6bheB91jSpBHTTwjKi
cAX/fnflndeGdP4sBC52Q3M+oA2C5uqevyME2fI+d/MN6TxaCHhD18uWoyMa
vdQG4oUgqOj2hVpDOp8Wwnpx1Ug7utMkc7FzmhBIZ7g4DxjSebUQbMlmf5xC
m94Tnl+QK4Tn7+45woTOr4Vg6PtOP2n07amNCiuKhWChim3eLELn2fj5H6VN
W4Tuc3o47eFfIbi+866TBqHzbSFwPSt01xC98l2vBOufEHAvGfllSei8Wwhk
jx5krUXflzMSOjEqBLsv+JhsJXT+LQy3Twh6uqBH/S5xtwkIg/d+1YgDhM7D
hSHGpeXlMbR9xa+xdTLC8Ct0RWEgofNxYahtW9B8GR2vpTzwfq4w+FxPHbxB
6LxcGHZE/+WKQzMifLpUlguDr0SKwHNC5+fCcHVokWAaelNvTssNQ2GI3m7D
84HQebowXLadNZKHTrZj1vGuEob9BXfbSgmdrwuD2Z/S0hq0QJLTrwObhMHy
9Pu3rYTO24UhIX3P7V70drFnJb/3CMPHwC++44TO34Whv6Z1NT/gfuc2/N3q
kDBk5HxXYAKdxwvDC2Xfthlo8Tzzzy9PCcNFgdakeUDn88IwbZ3SQVW0i/K1
7DmXhcGIS01VB+i8XhikGOKNRuisoNo3F28Lw3vIvr4S6PxeGCKeW5qsQ8s0
qaYOPxEGbq2nbU5A5/nC8CC77cJetIep/7Pdr4VhhZbQooNA5/vC8Mhf5MMx
9Kd7Xx8UfhSGMd8+h0Cg8378PoRy6y6hZzKmxRgUCYO/1CnXKKDzf2GIPbS4
KxZ9eNuuqCc1wvCM/7P7U6B5AGG49Hh98wt0/rvkMOlOYfBY9tsxE2g+AF/f
Z2veZ/Q8+cnzp0aEIde2SrMQaF5ABC5eXX+rCu1/dNXZTn4RGBYtHa0Hmh8Q
AcPwjRs60cUVN45vkhaBL931CQNA8wQiYNzrNzmJXqzd7JOrKAJhu2euEjSi
+QIRKJcoDGehz0RoeC1fJgLHMiLL5Ixo3kAEFFQPSc1HV/We2nfHQAQeKe9b
rWpE8wciAAf8Tmmj1ex/OAuuFIF1uY+SwIjmEUTgTsNAlRX6fJL8lsMbRUDi
wr4peyOaTxCBfh+uOVvQtWL719Xuxvfj9FF/txHNK+D7HU1e64HWdX9ts9pb
BCy4C3b7GtH8ggi4L5LzDkCH5fFYvgkQgY9zbx8LMaJ5BhHYdnftyavoFmV7
o/mXRODeGtMTt4xovkEETGq8jsShIThmRdgtEVgz+ss9wYjmHURgnk2w0yt0
ZFOH+vhjEfALOGKdZUTzDyKwVTdx+Rd0l+kKlX2vREBbYalUoRHNQ+D3UTTS
U4m2uB+kVJojAqrDUnl1RjQfIQJ1ywNi2tHRjNJZRoUikCFHPPuMaF5CBPrW
OqwYRw9sU5RN+CMCc3w+TPEa0/yECOjLX/gghrbJ9GTJdohAzJ/Uk9OMaZ5C
BEQc9HVmox/IvxMOHBaBh8yFHQuNab5CBIbi/W4tR48fFeLt4ROFwWR18xXG
NG8hCmOvNnYYo9dVbpjYIiUK+ZbtF1ca0/yFKET1dS5yQD/TfjD4ZY4ojJvt
zNliTPMYosD9efWG3Wie6+xujaWiMHcqscndmOYzRMHiyIUDPmjHPtJ2V18U
Pr5oHDxhTPMaorBHN9MvCJ1qf7FexFoU3IKnD142pvkNUQhWHPSMQgsnV1Uf
2SAKtee2NNw1pnkOUZBSX+nwBO0svrCsYZco6NzPzUo2pvkOUai0K1BKR6e7
H/5he1AUGGkuIR+Mad5DFNRXX2v+hmblf/iScVIUPILWGxUb0/yHKKj+Srr+
C71vkcSHhRfx528fNNcb0zyIKDy6oa3RgX4fvPXttZuiUNK417/PmOZDROGA
mH72GFq2Of7F1CNR8A9IneQxoXkRUTj6qHCFKNrLbCjB7SX+/c6oA9ImND8i
Ci3pwnEz0V/umz2q+CAKoz5Liuab0DyJKJgEjY+qoGdzhd81/SkKjWtOzdEy
ofkSUbiknm5siPbd/vdG0m98vfD4beYmNG+Cr/fD4YgN+kemSrh8uyhkm729
sN6E5k9EwW7t39tOaKWZxy4ED4nClbWfHu8xoXkUUTh91zPJA33i2JfAPl4x
SLv6J9XHhOZTxGD9KenUE+iySumT2yXFYPoHmefnTGheRQysnjTEXUKr6Ow8
kj9bDL6HnIq8bkLzK2Ig/7IrMBodeD3pgI6qGFgeW+710ITmWcRgeJHV+ufo
333j++P0xMCbqavzyoTmW8Qg7Ci3TCZaY+3KXRJWYlCQFN+Va0LzLmJAxpfl
fkdfSI7a6r9eDCIeRV0vNaH5FzFQHKjf+RvdIN60vmWnGFSqSKs0mtA8jBhY
XFVld6D1PNRtHQ6IQexutdQ+E5qPEYP0FkWvMXR4foBV9gkxEHHkUuYxpXkZ
MUgZKfotjG5bVGC85IIYePBEXpI0pfkZMXiUaqsnhzYOkdOPuiEGbsZcDYqm
NE8jBj6tCcGL0Deb92ryPBKDuX/XKauZ0nyNGBzfMpari+4xe6Xq9UIM9MLv
OxmZ0ryNGGS8Xt1ribaK415Y/V4MxMbGztia0vyNGPy7kiqxER3LZTfH8ocY
5D7wvrHNlOZxxODZXqLggh7aHj3jRbUYePLJxniY0nyOGATHc8n7oG2z2iVn
t4nBgpMT146b0ryOGCxKEBMKRD+eqSt6YRC9RfPYBVOa3xEDr5RDLeHoyWP/
OxCKw2hJgd0tU5rnEYdzzWav76E3VBVP7mSJg79I9fR4U5rvEQf+3eE+yehE
nTnDP2aJgwDT42eaKc37iIP8Ug+lbDRfpAdbT0UcblRHHPlsSvM/4nBVs/lT
Adqp/237oxXiUO6wi1lmSvNA4jC0Vnzjb/TLtYKNkpbiYLSy7WaDKc0HiUOW
3WBlO1o0Zf2fk+vEAY7rSPea0ryQONjXJa4aQe+WiCtvdxYHi2vbAhhmND8k
DuoPrJIE0BkePT83eIlD13yvanEzmicSh2lKpTzT0FLfDb/lHBcHiRdHlRXM
aL5IHLh+O1vPR7stvpCzNFQcfj+77LLEjOaNxGGzKvcpdXROSGXGrShxmNif
dX2FGc0fiYOk66fHRmi5FqVX/A/FIVlzxmtLM5pHEoe0nxnv16C9zQ8leqeK
QyUkfVlvRvNJ4nApZCBvK/pb3PvHNdniMC8hLG+XGc0riUPKszOfXdGK3OL3
VhaIw+zggqyDZjS/JA7Khode+KGP7thy6/UvcdiQ7/MgwIzmmcSBZ2nF1SB0
YdaTa3NbxcF5x03/S2Y03yQOh7ZmOUeglRUGL14eEAemvJXZbTOadxKHpmu6
8+6jA/xNg0a5JcAn8+rkEzOaf5IAuUvry5PQFVVhAS5MCeAbOvf0tRnNQ0mA
Sdd8/0z0Mt0av2IFCUjdrWmVa0bzURIgveo1Kx8dFLnEmyyRgKmwhIoiM5qX
koDW+TNuVaJr+v3cnupKwKz+iU1/zWh+SgKK2rdKN6O1HT7vnmYhAcL9Ot87
zWieSgJejISd6kNfSpHadsZBAiIb96uNmtF8lQQ43cmtYZjjfifhvLFrhwSe
H+NCBMxp3koCYkUElomjDT0T7Rw9JaDyYm+RtDnNX0mAm+feg/LoiO9j1p/9
JeBA+F6xueY0jyUBNVX9D5XRnYutTdXPS8Ct+Sz9ZeY0nyUBLvZZ37XQpucj
DWIiJaDPcNLRwJzmtSSg9HNxkwn6dkuDlvADCQj+YuhhbU7zWxLgLWfMtkX3
mast802RgKYbNQc3mNM8lwTIy8t2b0WvfHBSuT5LAgz9uvftMqf5LgnYEuTy
dz/6Pvd3xTXfJeCwXMDaA+Y07yUBvoL6Ob7o0R0z5N9WSYD+vDtLT5jT/JcE
XDJ4EHUWbZ/tIr2gRQKUlNZPnDeneTAJSEpI3h6Gjld4KRbeLwG5995kRZrT
fJgEsIs85aLRjKxTPFMMJrwSKvOOM6d5MSackf73JR6t4rGQ8UqACe/fvZmR
bE7zY0z4kr9i32v0ppk/xl3FmdAm5P3inTnNkzHBjeway0EH/m+cJMOE0GUS
Rt/Mab6MCX73j5z+iU7+X7kpz4Q9W2Kyy8xp3owJBxXOjVajqxfl9F6cy4Ss
p6rq9eY0f8aEHbk3XVrRAlX7uk0WMcFjcX5UlznNo+FJ8PbHT/1ojRCJzuFl
TBguD+wZNaf5NCYE3WDKclngfqvzujVRmwlxd/YZCFjQvBoTbGMuO4mhLzRv
bdptyIQLGwP9pSxofo0Jm0+vipyBTrvOUy9nxoQ3JU3PZ1vQPBsTEvjW5yih
682e1hSuZIJWwa2SJRY038aETX/f1KmhxfvtqoPsmTC7J7lTx4Lm3ZgQnhrY
b4jWixuqMNjEhJxKrRFTC5p/Y8IHqc+j1miXtTGlvduY8EhKZ8TWgubhmHAt
OLR/PTqcy7zoyR4mPFXI6dxiQfNxTJhx9m+dMzozuaNgmzsTZHY3luy1oHk5
JlS6Fed4oNu2h+dJH2JCvNmzxEMWND/HhKqoA1FH0TISK77kHWVCttj8EwEW
NE+H78/my/ZzaOOsvx9PncLrObkFLljQfB0TWnIb5K+iPTyC3msHM0HCYsdA
pAXN2+H3q1SSfwd9c6ZqZuclJgTwkbv3LWj+Dq9XyH2vJ+jc/JL0+xFM4F3D
bZhoQfN4TGAMbRN4ie45duz1pttMGFJ8+yPdgubzmPDLXeZaNnrmYsUX4veZ
8PKw97pPFjSvx4TbZcWS+Wirqi9JuU+Y8Hax7o9CC5rfY4Kd+IOgcvThEM+E
Y0lMSJ0ha/Dbgub5mGDZdL2rDn1XRyZ++WsmXBScHdNiQfN9TJCWe7XyHzq/
OeNh8zsmnlM39/da0LwfXm8n8dvD6KHrO+/f+cgE+zelZNKC5v+Y4Lk28S+P
JdYz5kJ31+YxQTTrzgkhS5oHZMKqi/dkJdC2/Um3BYvwebTJSpa2pPlAJnwM
6zeXQ/vHbbiRVcGE3EbzytmWNC/IhKnyF3uV0I/WTkQcrmGCfD/0L7ak+UEm
NH7pOLEcXcz14OriJiYY/nnDq21J84RMUM56EqKPnkxeebm2gwnf+t4JGVvS
fCF+v/xDwRboxTvYoZG9TFhzYhPPakuaN2SC1N96f3v0BokbwatH8POnRLE3
WNL8IRMK/Px2b0WfziKB3AwWuKYHlTpb0jwiC9QHPxrvRT/3aDr1hp8Fq1PU
EtwtaT6RBULuRVLe6KqZF/+3ZMLvRw/8jljSvCILHOsSfh1H831XPzZfmgVG
tzpWnLGk+UUWeNvujAxGq/lX+f6SY8HwCcmei5Y0z8gCxv0Ji3C00+JTh8IU
WVCvrXQ7ypLmG1kwKy208w46pGrBAQtlFmy+s0z/viXNO7LAZbtM8GP0y5AC
9/GlLDDwMyxMsKT5RxbwbIufloqu1Tm8P1WLBfzBjo5pljQPyYIP+9befocW
bZFz2WfAgl9Hwqs+WNJ8JAvmKM+U+YLWjfywc5YpCyI7e2y+W9K8JAt260gG
FqF3me/bXmrNgsajp9PKLWl+kgX35hu1VqOv9ItvDbVjge1j22l1ljRPyYLS
AynGzeiMuFebjDaywKrbxbXDkuYrWdB95WBYD7pl7db1g04sMM4ufjFgSfOW
LGhrvVA6ipbi5lmbsJsFmUdieqcsaf6SBT/KRMT5rLCeTIlfs9MNr5972QJh
K5rHZEFJ3LiBBNp1h90qWW+8/g1n7KStaD6TBTuv7XeegY6UGLL84YefVzbV
a5YVzWuyQLXSyX8eOicr2iwwgAUrdDwDla1ofpMF+jcbQ1XRXR5mxnpBLJjp
nHNZ3YrmOVkw3iMYpoOWU+gw7LnIAs2n6ZcNrGi+kwUO/8pCjdEW36/qPbrG
AiW57YEWVjTvyYLnVzb4r0If9NfV2XqLBQsTMr3srGj+E+/fguvO69HRi/9q
SN5jgaBtrZ2jFc2DskDicozhdvS3qnPLvz5mgXVT0cLdVjQfygL5JH+J/eiB
EBXVk4n4+ubR/R5WNC+Kv8/QrfBGK+qWLNJ8xYI4XZu0I1Y0P8qCy+Y1EcfR
q1uOLmjPYMGDE51ep61onpQFWdpHrYLQfpFz5sXmsGDg07lZF6xovhTvnwCp
3ivoB+ZfZm/4ht9f2ryPEVY0b8qCsey0qzfRhf0e/xv5wd2OQqcYK5o/xde7
cGBhHHo8TnpGTjkLnvVEdT22onlUFkS4Wr1IQCs7ZMj4/WFBkNVZnxQrmk9l
QXultdZrtAP3TsmljSzw2h/d+9aK5lVZIGAZ8DwbHZAiKNHYzoLWzJ49uVY0
v8qCqzP65L+hn+1IErnFZsHHB8E/C6xonpUFIfFJp4rRFRIbBO2GcT066L6s
wormW1mwySy7uhrNkz3Oyz+Fz6dr/LlaK5p3lYSaJSqqTeilnnFc7/gkobzA
qrjNiuZfJcE/kuHThXZUWDl5UFQSivLWyfRZ0TysJCglWbwYQgd97xldKCUJ
EsEVa8ataD5WEryuC7YyrHG/848a+jNDEg7PrD7JZ03zspJwy8lOShhds5j0
X5sjCQ9v7n8obk3zs5LwhKmsJYUW/tXYY71QEri4L+VMt6Z5WknYlnDTZiZa
6/yFf1OqkpBuY1s+x5rma/Hn85K2KqGdddXbX2lKQt3+t7WLrGneVhJUnbx3
LkVfaqlsdtOXBB/dyjp1a5q/lQRT7X/bdNDpkQENiiaS4BmWWqVvTfO4kiB/
atFaI3ST+YLaCitJ+GLo8NXMmuZzJUGfS83AGs0c+P77kq0kXOfKfW5jTfO6
kmDhI6awFm3w4FCV6QZJYIaLh26wpvldSRC+9LXfEb3PQa58ZKsk3L5l4LTd
muZ5JSGwy+3jLnQE94fipF2SUJGxceE+a5rvlYQJTa7z7uj3KXt/7nGVhNQL
+1sPWNO8ryQIsa+a+6A7d4h/lz8oCe7X/WOPWtP8L77ek4UjJ9DTma++Fh2R
hOebo2zPWNM8MH7fFflxQWjT7C2fgk9Kwvk1nwdCrWk+WBL0/gWbX0F7eXLn
GJ6ThBt/WdeuWdO8MN4P9ntqotC3FeKz+i5IwrDH2YV3rGl+WBIebffwjEV/
+W6bER8uCdvt5r94YE3zxJLguD9+4Am6z38wbftNSVhcMqH13JrmiyUh89Xc
wyno/6WhZGLxftCdkfzKmuaNJSHtdH1bOnrlL9OU/EeS8DUtQDHLmuaPJaF3
ir0hB+17vv356eeSMHhSL/SzNc0jS0LHJseM/6PhvONq/OI4HpXKSLp7LzMl
CaXhK1KqO1FCIVJoD2SkREaTjISMpGSPEjKSEaI0UIqyUhEZIZLfOb/ndf58
v6p7n/uc8zyfe2/fz/sB4izr7cet8o3R5/bpbeUuZD7ZGDqPD2ZVIy5/b5Xb
fsUY2EsqHZ65kHllY1D2nbOsHnHX7pdHjtw0huTzN7Y1upD5ZfR61msXvEE8
xCn+0Ox7xtCwa+iz9y5kntkYigaa/PyAWNM5MnNghTHAgIGMDhcy32wMDief
jv6OODq7KuPOE7QfDOJcf7mQeWdjMJ5ivLAbcd6MVbvXNBhDbMSWlVquZP7Z
GE5cfJegg/hJb/EOizfofA8buV/flcxDG8Olxtkn+iPWOn839X2rMbh3hV8y
ciXz0cYwOHnlLTpiU5+gpMwOY1h7YclDtiuZlzYGwUbnaj5iTyP61hk/jWEE
k1ErdiXz04hjq54PRrzxxpV4gx5jGFAbWz/clcxT02CEpeS5KeKzwT5xN3Ro
MDEn/+loVzJfTYOQqXaVYxHXC/RjlvejgdPgy/etXcm8NQ2K3E2L7RDrPTq9
ZqQxDYZ/3J0/yZXMX9PAo6srxxGx5Vr3qFdsGoSmeKRPcyXz2DQYdPVUvBzx
/JHdkekiGtilaYWrXcl8Ng3miNVeMxEnPs8KUwylwdTlmY6ermRemwZwsNXE
C3HhVpdgbTMafDsxbuACVzK/TYO1x+K+LEL82rpj2WVLGsw7XFnp70rmuWmQ
mCU7G4DYsGW3f4gNDRYUrkoKcSXz3TQ41lbjF4HYJt3ed4gDDfY7jYeVrmTe
mwZNNQcYaxD7Ob1dUO+MHu/AwLZ1rmT+mwa8k1uvxiFO60zw3q6kQbyuYfIm
VzIPToOh5zPnJiC+lm0xx9mdBhWXJgxPcSXz4TS4IXrzdTvi1hn//4MFsj/u
LdrlSubFaXBo8MK4DMQM7ZgZFxbSYPLDCc6ZrmR+HB3Pe2nfw4gdzg9RL11K
g/ZVwrJsVzJPTgPlJrOEY4jxt0GiUBroDNQ4n3Ql8+U0qGUk9D6LOMMowuXJ
Chpo768ruuBK5s1pYJU1KaIQ8e0bHKfEaBrsHl48vMiVzJ/T4Pyo2Q3XEXcE
F0922EiDPRf6p5S4knl0GtwpqLe/i5gv9IefCTQwtSz9cN+VzKfTYOyIx+mP
EE97NMDu1HYaXNn506HSlcyro/0TPrGtBnHk2nzrRXtooHXt6LZaVzK/ToN7
oaPGNSA+NHLuOM5BGgi21D1rdCXz7DQY+Tc36g3isue9xlQcRcd/fy/rvSuZ
b6fBqubz+W2If249Nir+JA385V9Un1zJvDsNAr55tH5BLJugGml7gYbe972N
7XQl8+80sHm9j9mFWNXSOezLZRqsZEUf73Yl8/A0OL1kq52WG8q79P2Dc4vR
9VV286G2G5mPp4Fs7LC5eohznKZIvEtpkJV+5X1fNzIvj85n69pwQ8RVna0C
WjkNZgtC/gxyI/PzNLgwJC2Ogbgnexv3fg0NPn1v1uO4kXl6GlSuDU7kIzaZ
acWKqUf7+/SIAWI3Ml9PA8M1nGQZYg/tl7Rxr2kwv2piv2FuZN6eBs7Zezeb
II47v9HoQwsNehrNeo9yI/P3aP0iu1ZbID7lM3LA4c804Kh6vox1I/P4NPCe
Z+9vjbjOqMpg1g8amKcWPrd1I/P5NLAuD5IDYt3iqD4D/tLgqJ7P1cluZF6f
DtJhaSZOiC1CRNq3tOlQy+qd7uJG5vfpEH77XC8FYm/h3X9RfenAZ2UtU7uR
eX46rO+qrpyBmPr4RodHM6dZzXIj8/10ODNIa98cxPlraV1vWXRwZ3d3e7uR
eX86hKntvX0QN4280rlXSIfxh28X+bqR+X86zPmSxl6CuH/9gq/qIXRgDMuL
CHAjfQA6+nyn/ygYsXWC3uc+pnS4Wnd2cLgb6QfQ4bg4e/VyxL4TTn+4OoYO
5q9el0e5kb4AHZj/giRrEae2zGwJn0CHE95O4TFupD9Ah5LGwJtxiIvS/7wd
PokOF/xfG25yI30CdHzPcudsRfzeKevVSyc6cI2uZye5kX4BHZ5/HdKeipj2
Y9rLnQo6GCxostzhRvoGdNhr9SlqN2I4+vm560w69JutvprhRvoH6PGP6PXs
R7xs5u5nWnPpQOukTzzkRvoIdHAyXbX2COLd2vY1F33okDB03OUcN9JPoMO/
YpfveYhLzr95HLiEDsraQrNTbqSvQIecabGLzyL+5JPwSBpCh9vtR/ZdcCP9
BTq0ZskeX0TMHWTxoHY5HZoma2lfcSN9BvT4uTZjryF2Kn52N2UtHYacrF5U
7Eb6DWg9hj/cfgtxWMi6W44b6HD5x+Drd91I34EOGZ9ettxHnEltGPBr+T3o
kRvpP9ChoGjVhMeI7z/6f8IDjoLX/Go30oegwxvXIxueIu5cG37ZLx39/IIq
p86N9CPocE61sLQBscSUc5F/gA6zvtc3N7qRvgQdIldc03mDWF5/43xVNtrv
x/UkzW6kP0EHF98i21bEUQl+Z7acoMO6lXUzP7qRPgUdBhcuDPyMOHvCgJMT
z9OhvnNW3Fc30q+gQ43uld2diB+3XDj2/RK6Pi5tzfvlRvoWdBjUVHrlD+Lu
9DlHj9+gQ7R8+YMeN9K/oMPa8rTaXnKUd869shbcpYP+eMk7HTnpY6D9Ol3S
oYd4xo/cA8xHdIj7tqOrr5z0M+gw7v2qXoaIY44q9z2spkOv7mq9QXLS16DD
+X9Z/emIT8zsTI97TofcG+8HsuSkv4GOV//IIC7iZ9r7d1q/Quc398kggZz0
OegweUmskRix9oXJ2z+9p4MzM3uATE76HXT4uNbBYChi84Wtydmf6PDbb7b2
CDnpe6DHP/Dxz0jEcwZtS5jTSYeZn/58HSUn/Q86GIu2tFgg/v/b0250//m9
vWGsnPRB6CCYxq2wQnw+5MWGu70ZML1SUmwjJ/0QBqR6552xR/xSuDF2rQED
rPPPZU6Sk74IA1z32yZMQdy33CR6jBEDPBqclzvJSX+EAettns1zQTwuunJV
C5MBm9e2OcnlpE/CgEv+cWYqxD6mUSsOCBjQXXzQeLqc9EsYUCGf8mMm4uR6
YcTMwQxwqgiqnSUnfRMG9O0vvjwH8eWEOyF9RzJg3t05e7zlpH/CAM5N4YoF
iN9NCAwstmDAieuB0xfJSR+FAbz1U838EA9qNV66wpoB+g/y+iyVk34KA/Lm
7H0ZgNhuz+XFpoCO5xurIFhO+ioMeO0uSwhDvMR5wcLXUxFPuuYdKSf9FQYs
iWw2X4l4548+8/fI0eOdOai1Wk76LAwIO9dasRZx8dH/Gysw1PpOZoyc9FsY
UNrLclkc4o8zZ3rqzGHAlzLLcfFy0ndhwLMZ93o2I2bp/Jl5ZQEDpnl8uZsg
J/0XBpxJPZOcjHjKhcOaUH8Ger+rPWObnPRhGDAw/RNzB+KQhdOUQ4MZ8KY+
tG6XnPRj0PFPTdy7B/G+QZ9dGyLR76dMnLNPTvoyDGgJSWQfQFxavMs5bQ0D
DmWHPzkkJ/0ZBsS++77tCOJvIXaO0+IYEPjB2C1HTvo0DGgNfqSdh1goejOp
ZwsD6MOHFJ2Qk34NA06Xc8NOI3Yt32qfn4qen3tmyDk56dswwOLm69oLiFdE
j7ZZtpsBJ1dfTLgoJ/0bBhR0m9heRpxl+my8OJMBkr+T2orkpI/DAB+LrvTr
iMvroy2fHmGgz78zHW/KST8H7W+DGZ9vIe5KGDw66TgDvjJ+7LkrJ30dBiwf
PtHhPuIhNmWmk88xYP73kS1lctLfYcA70+LkcsSa1rARvwoZUL3xj0WlnPR5
GOj9zsuaasTRe9hDT19H15/XshVP5aTfw4BjcJBZhzjP+YbU9w4DOgzWFdTL
Sd+HAeJAvRkvET/5sVjEfYj2J9Puc5Oc9H8YMO4KP+ENYq2c/vzHVQww63Nc
1iwnfSAGWB5/W9SC2NT9AntTHQP83R9N/yAn/SB0Pi76trQjxpvProkBf9ec
WNshJ30hBjyckTXwG+KNF7SMvzaj9f/gcrhTTvpDDLjTkWXxC/HZhbmGx9oZ
MNrodPFvOekTMSDyR4DyL+KGQcp+874zoEz14vk/OekXMYB2r7dfbwXKu5vf
9eh/GPCo74vPOgrSN0LreSswSg+xZeg+nQe9mFC77/w/AwXpHzHBH87E90c8
XzS5V6w+ExpnLeo7UEH6SEz4l1KRPAhxYnnL33EDmTAk5ftAuoL0k5gwu6dq
GxNxYXTq7w8MJrhsCTDiKEhfiQmONddTeIhfm47/eZjPBOeER/2ECtJfYkKH
Zs9mMWLDhoZvs2RM2Fwl6i1TkD4TE36d910zBLFN4oaOASZMeJ7h/22YgvSb
mLDEbMQyE8R+Nibtt0ajv6cdbzRVkL4TE0q+tM0wR5zW+rh1lRUT5EEf71oo
SP+JCdojz1iPRXx9z8pm84lMWFphmTdeQfpQTDjVs5o9AXGrs/DNO0cmZHvF
b7JVkH4UE8qSZnyzR8z4ebtxnxsTXMc0z5ukIH0pJnR+tr8/GbFDTkCDZjoT
5dncMVMVpD/FBE972OuMOMjduE5vNhP6DGrTclWQPhUTbm708pMjztC5/OTa
fHQ8E9IfKBWkX8WE9Md7zTSIb1+YXxXhh85Xq3/qDAXpW6HzO+TfZ3fEHQv7
VIwIYoJisI/KU0H6V+h8bUw5NQcx3/hUWWMEE+6829zXW0H6WEyoblb4zUc8
7eaMe7tWM8Fs6KtiHwXpZzHhr8Nkri/iyNDft93WM8G4NizcT0H6Wuj540Pv
L0F8SHT4Zq8t6PW0TBQFKEh/iwlemS8ighCXlTtfL0xhgtskRWmIgvS5mHA1
KIUTjvhn9KcrQbuYsPPm4WWRCtLvYsLcZ5uvrEAsM9tVKNvPBLWrg8EqBel7
oZ8XlHusQaxqsM2vy2KC0YXRR6IVpP/FhMIX/p9iEK9JfH02NY8JDhWR1nEK
0gdDjyfxXL8RcY7N1lNTzzLBMsj4/iYF6Ycx4YNb9sCtiKtazY//uYiuDw9D
90QF6YsxYeJgTUYy4p49T3POXUPrrwxqSFWQ/hgTPgUsEqYhNpkWfcT/NhNO
08fO36kgfTImZDY2HtiN2OOn7JCgjAmbFvm/2KMg/TImNI8v4+5DHJfzYH91
JRNaP/eblakgfTMmBAw2STuI+JR7WMbWWiZ0LR368LCC9M+YUOPeSzcbcZ0O
ezc0MqFtbZFdjoL00ZhQH+EecQyxbv71tM53TOgurzh2XEH6aUxQSke+OInY
YtHi1BMfmbCl1xKjMwrSV2PCIK3Nk88h9jbun+TzjQk657ZEXFCQ/hoTTHOD
jhQg3nrz/BbWbyboLR9fVaggfTYm3Dv55t9lxPmhs+MfabFA07Tc9KqC9NtY
YHO4fdZ1xE0irbgNeix4GOsWV6wgfTcW6BhtO1GCuH9FzroJhizY2VhUfVtB
+m8saIyp+H0XsfU6xZrPdBZ0x5aJ7ytIH44Fl8PPTi1D7Gv2feVRHgvS365b
+khB+nEsKF1slVSBOLVhb+RcKQss45+fqlSQvhwL1lQuKa9GXJToEDZoBAs+
175uf6Ig/TkW7Brh0r8W8XublqBScxaM1Owf8VxB+nQskL1omNqAmNaWsix6
PAuOzOnn81JB+nUs2OwxfE0TYsgY529pzwIf77E7XytI344Fq/6Yn3yLOGBa
w6LWKSyouMq71awg/TsWMMx+1bYg3v0zbsFBVxYUPrvT3qYgfTwWPHWO79WO
uCRnhLe7hgWu+lb0zwrSz2PB4SP1Q74g/uT+eHY/T3S82RHjvylIXw+tx45/
UzsRc3VXetycxwJVd8zMnwrS32MBx7/TpwuxU75gxsrFLJB7Lwj+oyB9Phbc
8b+56i/isEW3VWaBLGAO5Gz8pyD9PhYk1Psn91KivDMOkL8JZ8FQ99O7tJWk
78eCHO32/bqI798c5JKxigVrgwcf0VOS/h8LnvHdjxkg7gy9NFUVy4LMXTEn
+ylJH5AFQfOzzwxALBHPn6y7mQUHtW6fG6gk/UAWTP338vwgxIoKXShKZoHJ
q87zNCXpC7KgeqTBeQbiqHUnbcN2siDal3OWpST9QXS+jIad4iDONpthPWwf
C5ZfGJPHU5I+IQuaquyyBYgfN3SNfXGYBSlfpx4QKUm/kAXeu5XpEsTdiYcs
dhxjwUeHWakyJekbsmB71IJNQxAPt3Ue5XKGBfOvLVs7TEn6h+j5d6wIG4F4
Rlu7yb8CFvit3bh4pJL0EVmw7M9OTzPEMRk7hxVcZcHotGOu5krST0THW3LD
1gLxiWm2gwNuseDUgPqRlkrSV2SBYedv7jjEz36+EkseoP3aJTKwUpL+Igtu
7nP9YY1YO3eL4NljtH5ea17bKEmfkQXPr5x/ZIfY3MOcm/wM/b7Vl8KJStJv
ZMGK6VaHJyGeo/uUOeUlC2YlxG+drCR9R3T9zWsIdUS8ifqCCC4p7GY5KUn/
kQVZT4/aTUN8fpHM6MwHFmxZyZG4KkkfEv396XQdOeKXxg/6L/7KAucu8XuF
kvQj0et/UnBPhbhvSagBrwvt72KPPI2S9CVZ0DBeZ+sMxOPCWH0q/6H1LLju
764k/Uk2vLq8aeosxD7i670392GD5IaXdLaS9CnZkOXg0DMHcXKF7z+7AWyQ
XRtb56Uk/Uo2DD1ldWEeYurrOja0JLkmLVCSviUblj4L8l2I+P96DZcNfnpZ
tr5K0r9kg1f6+0F+iAe98MQVBUjsBe/9laSPyYbPN44VLUX8/6fp4Wxwkg9J
DVCSfiYbDMUFPkGIl9jmfHowig0b8j0tQ5Skr8mG3DgjnTDEO9vkH2LHscFa
+0V1uJL0N9lQePp6ViTi4oxv78fbsWHR34LQFUrS52QD+N+yj0L8cdretx8n
s8HI973BaiXpd7JhdoD0yRrE7F+TXmW5sGHB98iD0UrS92TDqBWNS2IQT8l9
/8JTjV6f/0KL9UrS/2SDNvT8ikMc4pHy3HAWG96EX7ixUUn6oGywXRUXvwnx
Pt1xz257s+FFaYDrFiXph7JhTk2IYQLi0vz66tW+bBhAT61MVJK+KBv6d9/f
kYz426K4x6MD2GDZS+KeqiT9UbSee3YytiMW0kY8ag5jg924IU/SlKRPyoYj
8uodOxG7llTc3x/FhknTD2p2K0m/lA03L2813IN4RdiKu9Nj2LDjR9qDDCXp
m7KhbU1R/D7EWWLBLf1NbLh2VXtSppL0T9lwZ2Rg1wHE5RW3blxPYkOcbee5
Q0rSR0XrNe/g0izEv9ctuxq5gw3tugHibCXpp7IhKNvz6VHEQ0YNumyylw3O
J5Yk5ipJX5UNVYn7IA+x5kVhQdMhtF8Lv3w9riT9VfT6DwQcPYk4Omne+d25
6PHOGcw6rSR9VjYE+jzUO4s4z1b3jPw0G1TC/MJzStJvZYOB502/C4iftJ04
0buADTPXfacXKEnflQ1ntJQlFxFr7Z1+7FIRG+Ypy4MvKUn/FT3f0+XcK4hN
Xbqyg0vYcEpv6p0iJenDsqFAbRdyDbHnr4OHB99H16vIi31DSfqxbHB/k11c
jHhjrtOB5xVs+KvPWlKiJH1ZNmzuOW94G/FZj/a9256yIdhiVf4dJenPouvL
cNnsUsQNujvTnV6g/a2z6e89JenTsuFA9KNDDxDrFdjgfwmAWcukKQ+VpF/L
Bs7ZprePcN75vtp2vg1dfw6n4iuUpG+L9qd+7pBKnHe0LclLvrBBHlp+u0pJ
+rdsePpWtqgG513JqAThL7TfK3O1nipJHxfth0NzMp/hvAt7sqmmhw3rr9lN
qFOSfi4HKtOUNc9x3onXbkjQ5cCzhG3BDUrS1+XA9YHa+i9x3j2Wxk7qz0Hv
s3MONSpJf5cDD/3XWL/CeRdzf+0PYw5YG8ZVvFaSPi8HDFuuLH6L825U6KqT
HA74zRv6552S9Hs5IHt+O/U9zrsXzBULxRz4fGu3rFVJ+r4cmLxx/8U2nHdJ
18LZwzgwa8PTaR+VpP/LgQkjpj5vx3ln6xtSbsaBSy9aln1Wkj4wB8L0S353
4Lz70Ddw41gOPDCq3PpVSfrBHOj0ZrK/47zbe26JjS0HPnqkHe1Ukr4wB8IX
Th3zE+edi+fiDgcOsN+bX/+lJP1hDti4TXf5jfPuV49PzjQO/Pl+svqPkvSJ
OeDmOsn7L+I7uUfneak48P5s/+YeJekXc2B6inGwlgrlnYd8rrEHBxqdp3f2
UpG+MQcd58M12oj5fb7NuufFgcw3sb10VaR/zIGlqaGb+iCeVpAxc90iDiQf
39dXX0X6yBxwz+idYoA40neSZuwyDtTeOGrUT0X6yRz4tT4+rT/iQ7T3irZQ
tD5TsmiGKtJX5sBe/+4dAxGXlSS7HlrJgQbNTtogFekvo/VZvCzNGPHPsLHO
HuvQ8erEGNFVpM/MgdtpVckMxDJJ/ZT+8RzQDV/cl6Ui/WYOFOpYb2IjVj1e
P6kkkQPtJ117cVWk78yBLQ8z1/AQr4kZbh+VxgHLOxadfBXpP3Mg4FefYCHi
3FEVE0ZlcGB1qaBZpCJ9aLR+O1Z4SxBXvVg+/u1BtF7XBtVIVaQfzYH1Rz+7
DEbck8S33JvDgbsnjW4MUZG+NAdmWy63HIbYxO6WufoUB9QZgtzhKtKf5kDG
xL5cE8QeH5aa9slH6xtnmzRSRfrUHCi5c+6vKeK4vUYjrl7hwDq/oOBRKtKv
5oD97eCX5ohPuRQOCb/JgQ77iwoLFelbc8BzjOPVMYjrfnlLh9/jQC8tjslY
Felfc0CuOy59HGLdYzqil+UcWHRoj7aVivSxOTDV3DHEGrHFrBO8nU84cHWg
9fMJKtLP5sDCg5GOtoi9+0xnuzZw4LDt71N2KtLX5sB5h/vMiYi3Fvyia73h
wCHD1+tARfrbHHD859g8CXG+78FBF1vR84V+lU9WkT43B4TX285PQdxEczIM
7OAAc+oo9lQV6XdzwNnn2lonxP1vfewr/cmBfcF7mpxVpO+Nrtd7N6a4ILYO
36FX+5cDPmWWOa4q0v/mwpXK73pyxL4SG50UHS70jNdeqlCRPjgXTD3m31ci
Tn3cpOXYjwtGCQYj1CrSD+eCi1nvLRrERVShEqbsdWmeriJ9cS5MHtk0ZSbi
96NG/T7D5oK7zd1D7irSH+eCj6S72wMx7WUN/oYSuDZxnp4q0ifngs5Lzwuz
EUPymm+8oVxY6Rc7YK6K9Mu5cMC0y88LcYCdtKPSlAsRW2/d8FaRvjkXbj9p
ZM1HvPvDvY+bLbkwapkyZIGK9M+5MOTgwLs+iEv2hrTa23Ch7aGMv0hF+uhc
2OmWGOaL+JMLs/nbJC70j3C6u1hF+ulc6LfPneuPmNt19XWeMxfEvMtBS1Sk
r86FPNew4qWInY4tapyv5EJ97DrjABXpr3PhMv3VokDE4bP6NjDcuSDwzsgP
UpE+OxcKzubqhCDO7HOutmwuF7oX958ZqiL9di44V5dmhSG+XzDryfqFXChS
Pu8IV5G+OxfUoxwnRiLu9O2ptFrKhepS3cTlKtJ/58LbUNGzFYgl9KPl7SFc
6Fq3XRqlIn14Lng4ewWtQqy45VZ2ZAUXOKLYwtUq0o/nwpi5f7XWIo4K/1o6
O5oLvuoal2gV6ctzwWmGbto6xNmSjNsDN3LB8dK2uhgV6c9zIat6hXg94seP
4eadBC6EdRX6xalIn54LmdEzT25A3B3TfG3NdnS8F+RfNqpIv54LTz8fGrcJ
8XDz5CsWe7jQuFGzarOK9O25YHN33tUtiGe+tCx8f4ALv/rc79mqIv17LvTa
u21SIuKY5OcXMo9ywbCqYH2SivTxuZDfa0JJMuITduvPzjjJhVlruL1TVaSf
zwXL7XMctiF+9mHYKYMLXPDa1RWzXUX6+ly4VPfzWhpi7X3leTcuc0H7rPuf
HSrS3+fC46U0612IzV2X5ywv5sIWT4vI3SrS5+fCskdnzqQjntPFOzKyFP2c
k9q2R0X6/VyoSK4YvBfn3bGSg68ecUFrTdi8fSrS9+fCOYvl6ftx3s1auj+9
hgua3vUVmSrS/+fCYPsjegdx3vUxylDUo/UZUz7xkIr4AND6WHgtP4zz7uJF
3FABg0TFiSwV8QNwgZ6S1XQE591i77TLLVywT5jLOKoivgAulJdHueTgvKPr
pIZ85kL78d9rc1XEH8CFtKBXZ47hvLt1PHHID3S9LTZ7naciPgEu7Hn1knYC
5124Zkt9Nzre0T8cT6qIX4AHKQcjlp/CeSf5tXG7Ng/6rJt19LSK+AZ4sJuT
VXMG513lgfXOfXnAL56hfU5F/AM8UN8ItDiP8y526rq/Rjwo8W2fd0FFfAQ8
eP73SWI+zjvzj6svsHhQ+2zopQIV8RPwoAqa3lzEefcybeVSIQ8ux/UeeElF
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
WZj3fmUUsm3aFTjApPLLLamMwicdzoJ5/1dGgxZX3IX77Bn+uZ9SRpdLJE9g
3gOW0aYLziXw+cqgWh8DGRV+OPwe5n1gGWn4FX6BLais5skgGXluVPsJ816w
jOaWDGj9HftdxOBqQ2MZ/ZcwvRPM+8EyelOythu8pnZH1e5hMuq5NbwvzHvC
MmoRcUYKdzR/UVlpKqOSnlmGMO8Ls3/vWjgcjoke8G7saBmd2vraDOa9YRn1
cauYDJs0+r6NNpNR7P3K6TDvD8toS0rFPLhgMn6hLKMGrZLFMO8Ry4jqC1fA
TrHSMlsLdr9mZa+HeZ+YjS/zFD+46adPyRkrGZ1J3x8I816xjArSvcPgENv7
r9rbyKh54qxomPeL2fVyNoqDRYn9XzrZychFu30yzHvGbLxMf54Gp7da8/z6
TDZ/lCdvwLxvzD4+yiMXtpmd+7TnHDZe4owewbx3zOaLVf1zuPJsr+LV82QU
E3rmDcz7xzL6tc65Bt7YfkXRgwUytk7qNsK8hywjC8Pbv2DtBVmFCmcZHVBf
0faHzb8+soz27dDpDMdf6vbI35U9/3MXu8O8lyyjUUG2/WDSWvqgbJmMxnav
kcK8nyyjaNsthnDR4msFph4yWjNOazjMe8oy+lIdORZedl3r3n5P9nomCyxh
3leWkdviOFu4RXen/LrVMjpLorkw7y3LSFF8xAmOWJ6Wa7VeRj8MurnDvL8s
I9PJO1fDytsad05tYOvRgK8bYd5jltGRYkd/OLP3vNtqW2T0zeJWMMz7zDL2
/ZR4P2y/+mz2vK0y8t+/9QjMe80y+uT18iRce7d11mV/tl4IDVNg3m+Wke8p
30sw/jq76y4ZPW9VcAPmPWcZJQ/plgv33JB43SNIRjpmsx/CvO8so36qQ8/g
lMLf1/L2yKi0sagM5r1ntn4e6fQBNldMuyoKk1GuYkwdzPvPbHxFr2iCX/qd
uLJlv4ymNUa2arL514Nm64Vxlga88vn3Sy8Oyej9wnf/wbwPLaPpG9roweqD
JqcZH2b/vq2fAOa9aBklbBqqgKMDjlzYe4ytX8ssjGDej2brrdWsEbBRWd25
mlgZ2UiczGDek2brRdNSSzjXxDx1wikZ9b/jbgvzvjS7fvvc5sCOew6mxCTK
yGje4kUw703LaJh83jK4sbLmzK8zMtr7Y+oqmPen2f0rIB84kEYn2afKaGiC
fCvMe9Qy2hzSJRDW378v8dwF9ny2NITCvE8tow8bCw/BabXv4jUvs/Uo8EwM
zHvVMrKO354AW5kPP7XkKlsPntunwrxfLSMvfekV+E10UFz2dTa+N9ffhHnP
WkaaX6/kwusaS2P7ZrHPt2PTQ5j3rWV003jUM1jTavBx79sy2ta6qRTmvWsZ
ierPvodjY3ccK8qVUWhrl88w71/L6Nrwbt/h4c3Pjwy8J6Ow/Zl/YN7DllHr
3svUf2K/sx1wOPABG/93O3eGeR9bRg7xKd1gl0TfqHeFMup13qoPzHvZMtL/
9E4EN7cqOjSmWEa2czeoYN7PltGhX52GwKGzpQejnrP99XGkKcx72jL680Y0
Dpb+PRCKjS/laUuY97VltOHsAFs4o/398GllMopclTQb5r1tGclWSxfCdgv6
hyW9lVHbS0eWwLy/ze7nKO2VcNWl1aHt3stoQPut62De45aRsd6nzfBmrdw9
i6pl1G7NzB0w73Oz/UPvajCs44rfIMnIu1PvCJj3umX0wMo7Gsbs7VHH9sPX
hbEw73fL6OsN2Wl4TPesQK9GNh6++ZyDec+brfdb867Axcu77br/ne3Hi3Uy
Yd73ltG52Lm5sPvtJTvlzTISjDz6AOa9bxkdHVRaDKv1uea//Q+7nv69SmDe
/5ZTZ9Pp7+CDq7W2l7aS01HbXR9h3gOX09b76Q2wwb1FW0e0lZP/2aqfMO+D
y2n1T221Zux3wjTfiPZy6ps8XAPmvXA5WRc4dIFnb9DY8qWjnApmb9SFeT9c
TktmHOwL/z0eXUtO7zLPimHeE5eTVsxtFfz37dPacjrTWDwY5n1xOW2/XjEC
/vvr1e5ymt3y81iY98bl1HD16yQ49fnM9Q495dSt4cdUmPfH5eR36sdMeOKg
xLWXesvpx4vGeTDvkcuJ9tQ6w68Dfq/W1pfTfzlv3GDeJ5fTIL+iVbBXmY3X
cqGcHLKyvGHeK5fTtN1nfGGNYSc8cyVyuvc6fCfM++VyCri6PgQ+uuf7CqFC
TmaS2REw75nLKbXf0GjY+L2lx+YBcgpN0IqFed9cToduv0uA8+mI+3ND9nrW
XD4L8965nFpc3XkJXrC/btmQIXK6e8DuOsz75+zjNXvfhr/Vjl+6x0ROvfqW
34V5D11O6nePF8JB5gddq0fISbP7wucw76PLqaxl7zJYcLjGxZzY9Qh+XAnz
Xrqckq/trIUvN5LzsbFy0ggd1gjzfrqcPnWs/AlbW+1b1DxeTh0H7m31y+Zf
T11OnX4NbQ9XxL5bMHOSnKJXv+gM8746Gz+RPt1gn+Zh81Mny6nnCt3eMO+t
y8m+8awA7mKHdxCy66+cKId5f11O/XRfDIRPJpbOdbWV09dLS4fCvMcup29a
30bCpmqD52TNkFOO/pZxMO+zs9fzsY0l/Gj2jll9ZstpkddOG5j32uW09rK6
Pez6dwDK6e21rfNg3m+X05StzU7w7/YDZjyeLyfbDp7LYN5zl1PYzLcr4bAF
vnYGTnJKWmK7DuZ9dzY+za5vguWXH0/btVhOFRWS7TDvvctphG1QIHxDS2pT
sVROL3Z/2gvz/rucFoRNOQDPcPWxHr1cTq7LEg7DvAfP5ru22gm45nqBVeRK
OdkF2yfCvA8vp2WvEs7Cft37T/7qJad5rZrSYN6Ll1P27/EZsK7HagubdXIa
/Dg4G+b9ePb8tz3Og5Nu35l42kdO3lrdH8K8J8+un/eMYtisT68J6pvllJsV
+grmfXk5/fqY/wZ+ttpj/EI/OZ1savkB5r15OU2vHvwZ9riXaXZtu5wibjp9
hXl/nt3vTXub4TaibmN1A+TUWpTe6rfNvx69nCwulLWDIzcsGb1qt5xmGrbp
DPM+PZufh0Q6sOHjq6MKQuRUWTdWD+a9ejltGuGgD+cotEbK9rH5uMZLAvN+
PVufju9UwQ5bF43YFiGn8tsHjWDes2fjo/TkMLj++cVhJQfldONLKsG8by+n
9OYr4+GAQRomw6PllNnqhiXMe/dsPWyTaQP32eVgHH5UTq3a3pwJVw3ZcWFs
jJxGt73mAJ8vSxn8+bic9qhfXARvDnp+LvqEnNZ0OL0EthjW2sjypJyWax/x
gHX+/oKBrZf9QlbDpXtmGsYlyGnfkA0+cKKpb4rtafb8prn4wmveJxi0PCOn
6vVWO+AxYY/PnElm+81pwyC442icIMvGf81/++DiaklS+3Ny2jz8ywE4Zr+N
Mu28nA4fuHsYdjfzSXS6KCdpuxOxME5j/O8Smy+7vBNgtciC+OuX2evXt0qB
C8y/S93T5fTlXq+L8ME6/VM9r7H9aG9VOux02FJyJ0NOLsvP3YQNLFbHrb4h
J4Wzdw7c1HhYJMhkj7921D341rE7sQ+y2P508s8jOMSqTrDplpy6Nl57Cs/+
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
HmYNvA87HVjubmrEHn/+50ewwbgDNVWDlZTS68wTuOnTzWX7jZW048eS5/Ct
yOoP40yU9Oab4DW8Z4LO0rphSjqv+7IMnl0/qurICCVVzQ2tgEVHXF2tRipp
5S3zKvizRWhl0yglDbf9UQOnf013OTVaSYPUEz7D/jEVFdPHKsm83L4BtpnS
2VltnJIWVrT5DvdqMnmbMl5Jq7qc/QlXnli4aN4EJS1aPPsPnGqzu7zDJCX1
e99STQ373a8LCy5bsPsbdrItPDG+pNRlspLi3S01YJzO1XWKkiy8PnaCX7cw
KrlprSTH+KAucPzpufM8bJT0qJNSB/ay93/Vy1ZJu2Lu6MLUGn8xryRP10W9
YI2/f1CopBXzm/vCRXPU5ojslbQscJ8APqquev5olpIsP0gl8LJzM2ZtmaOk
xo1X5bCx45anKgclTZ0wZQDcskPCzBfzlDR6wmtDOP9i4ZOd85WUsMltCByx
8Nd044VKWl373QReoCkperNISdv2bzWFlVem2u11VtJl746j4W/O3oWjFivp
x4F9ZnBml9hpNa5KEtfrToCDrt17eHCpkgS7oixg+yXfpk5wY+NlXp8psEBH
/0GDu5K0PA/bwLU3LKxjPJR0K7vXdPiym1eB9Uol3Zt50B7epnvY6penkjSU
XefC1tk5dxO8lDRnbJAj3HPFF0v7NUo6Etl6EVyhp5ffZh1bP0y8XeCUnHEW
59YraUPP2iWwz6rlufN9lPRgzHx32LzvgYmaG5UUmvxgBdwl/2ZO+iYlRTqR
F/xyTbX5ki1Kyl9wei18sr/O7W5+Smo+2d0H9iwYNT57q5I6mPhugk298Y5x
JRX+V+ULq4tDzfruUNKAYdbb4UcP0zPv7mTzL/HcTjh6Y8UY711Kau/WbTfs
Kut8U7JbSaO814bARkUmo4uC2PwvfhIK/96y8LpfCBsf2wZHwLnK3aMG7lVS
H789B+GwpxeuvQpV0rSHH6Jgx20lpoFhSirzNDsKywe2v2oSoaTjiw8dhxtf
DBrxbj+bvymf4uAbO+Ze2XdQST2mmCXAgUb+w8ZEKsl7THgSPKMk+VJtlJKc
AytSYP3AZ0OjDrP5rhx8Hq4xVkubdJStX2LfNDjt7xvGlZS27u4V2C94xoXY
40rSE3XLgK2Gbxk87QS7Psp5N2Hdd/Hn/sQp6XZwbDb8Zm/hoKRTSjprVZUD
nxn56+zsBDZelijz4XVVYsN2p9n9fONeAJuFT025kKSkk1eTHsKaY7wNFiUr
qXtj9WP4Wc3xM1pnldQQJH0Kxx64p8pIVVLHnYtewB7jvp1edp49n7dRr2H8
9UaPi0pSHn9cBreJski8ncbm8y2NCvjBBC+512W2n0ym93BkfXS8frqS7IZ5
VsMuR3Kk968q6W7g8VrY0PLLyQ0ZSuo/vvAL3Py1p0R+Q0kSl5aNcE7MuLji
m0qK+6T6DodOWS7anqWkpeX2P2GHpv2xg26x8UF+v2Fp3E1B6W32+dsmtGyN
/c6mOibojpImDX/QGs741bX/iDwldX3eoA4HxI869j5fST0ru3eA7aa79ou4
pyTRwmGacN+WoUfM7ivpj+WsLnDV6fQ+Xx6w9ffE2q7wefuK6MOPlDTWI6w7
vLl1596THytpREJyT9gixSTqRxHbz2bm9oZ15i7UO1nM9r81Zf3gUvXdh+ye
Kam8/XcBnHjuQo9WL5Q0rksnCbzGseRA8ks2noL6yeExHdrrOrxWUs3mQSq4
Y9qg/RqlSsp4P3YgXLxwbrdLZWx/umNjBMdo+oc7v1HSEH1HY9j9SnJX7Qq2
vtctHQabuODEcCWZjFxtCqv9p6a9/L2S1rXaRDC+m9H7oKS3Y7ePhQ8umdEl
t5qtn392jYed/h4IqiRrk5CJsMHN+M7CT2w81O61hJvcCoMfflZSoGDfFPiW
7q9Om+vYflUcagPvyRYHKRuUdExjrx08e8XUjs8blbQ5I2gmLOrlHbjjG9tv
6nfOhj/nHNcY8kNJsQl+DnD6qnsB5U1Kcn3rPR/27/ut3Z5m9njHVi6CbfL7
7Rz5W0md37i4wL3WWqhX/2H7e/zsJXBlfy//Ay1VtKVxshucWhDdxlxNRb9y
RnrAG71zttW3VlGcvsoTnij+onasrYoGq+mthrUf9dw6pZ2KFrurr4NfbxzX
qrm9ir7Pr/OG42XLfeM7qCj29YuNsFfR/hYzO6lIXJm1BSbfm2zIqMjEJ2Er
rKGq/n1WS0URkSH+cNHTrpsc/1PRj4mrAuCj20b96thVRXrbpu+Glw103XBF
R0XnrYxDYOOXe38u7s5eT5xOKNxyZ7q3Tg8VGYfUh8F3jSp+ZPZUUXC7B/vh
iBLN9St6qYi0Ew/BCwJNvvfuoyK1lG3RsHLowrX5fVUUUjL3KPytPPDrOn0V
RcYYHYczgy+sFgtU7PugdnFw0PCShkKhijTevTwF279r5+UrVtGzxcmJsCB0
UP0AqYpabtlyBq4dOdfzpUxFQwymnoUvV23/EqBQkWxNn/PwtvDkFUNVKto3
vfoibD3m2ae3A9j1K7h4Ge75sZVH6EAV7S/dchWuOKCspUEqOhg06TqcMm6G
+0cj9vyKtDJhn8+baw4NUVH3K0+yYfOo+GUTh7L7NTwyB+7yN/jE7u+seXnw
y/rmJceHq2iDTr978Mkj4qqppuz6rii9D3taTnX9PVJFdUuPPIJHfltfmUgq
8m3jUASrHz/uMmuMil6P7vEUfjTlXkVbMxVd7v34ORzd9NXp/DgVZUUFvYJd
4/q9XWCuolMZ40tho2koRquox7bmcvj3r1XlVyepKPvj2Qo4Nz56wVJLFc1o
dn4Ph03PKe1upaLNKbrVsGPLL463pqjog0beR1ie1LPEc6qKxnX0/gw32o+b
12+aikZekNbDN1ovf3XPVkWb2j5phANT9s/1mc7GVwu/7/CMuTdfSGeqaHes
8ies36569hN7FaXUFf2Ca851fb51toruVm9s0Qb7neOoWYZzVRSwR6gG+3Vw
ffraQUVhZbltYKu0vTN3O6oovMS9Hay7KP3JsAVsPARqdYDfaFZMr1yoon4V
ZzvBZ65oFoU5sfn50UYLXudiYjfWRUVr4z7/B5v9t7Dw02J2/zoH68CaGYHT
opew+y+V68LPllx4aLFMRboN2T3h2L/fgKho78p5vWGPm+0enFjOrtexr33h
4e6DrG1XsNezPag/3KbH3IIWnioq6S0QwQ+yt1udWaWi20vTJHDkiuS7c1ar
SOpuIYddej2zbL9WRadFL5Ww4Z1W+RfXqagxzM0Abl6ltHDyVlF8+k9DGDW+
LhtU5HYoYDAcmr954vWNKnpj2G0o7LA2Psdts4rO+h0bBksFheY9fVW0Pkhh
CtcXNN/K8WPjbdr5UXCGt3j86m0q2l44YgwcIJ6a3d9fRZ21Ms1gu0frzR7s
UFHf9hPM4b6bjmduDGDj6XreRLhKdm+MIpDZyMoSPl/09cbT3Sq64VxgBW/2
7TfaP5jdr5lTpsIWKovrRntUZN/u3jRY59mqUWV72fVZbzEdLt0WfS14n4r0
T9+eCScOzDE1DVdRu6NjZsNrXn5Or4pg69uM9LnwmJ09R+w/wOZngZEj3HHw
uCvjDqloVIfEBXBxifuwukg2HjvoO8ExgfsvHYlm8+9BuAvsPvTmUKv/O7rz
eCrWMIDjKFGREGXLlghnZqRQlidRkUoSZct6qaSEShQ3yU1UooiIkLVEtlCS
kmQrUqi0IJGtUirivs/8+f30cZp5Z973dzhnZpI5UG47ew9ap3ug5E8KB9py
Aj3RM84v0MpK5cD+B4Ne6KbVBsVW6RxQSLb3Rsd/8lgxI4Osf8b1Pmi36AuF
+ZkcsLitcwhNG1Qs35VN1sv+9CPoP/09BXNzObC2XygAXXNpnkbZDTKfC48e
Q0cZ6uS753GgxeRjENpuyJlekM8Bm2zTE2il+Ii8BwVkvWy7dRI9alzMOVDI
gS9NC8LQFaNdN6SLyfl1yf80OiyRX/1pCQfUl70+g7Zgv2BCtjdC7yxaesxO
Vamc/PzdxPPovuRT2S0VHHh1b+IC+rbZLZV/73Fg6JzNRfTx8fZMzn2yHjEl
sWiTNB7l11Uc+J4mHI8WNVfPOF3NAdF+zyvorj9WSlqPOFDBVZOEzs4ITu+u
4UDIF+kUtN+2bMULtRyYzvZNRcNUS6pBHQee6NWlo+fkTMoPPuXAwXSZTHSb
1dJr8Q1kvf/gnY1O4d4qt6GJA9Vj1bloz5tHk8eaORDdJZqH1rJJW5z6nKz3
ya75aG7exiTzVg546ty+jW7I/yn99wUHrmZPF6Fj7eUSc15yoOa7WSnamX+j
1M52DvgsjCtDqxf5JvB2ckBX7EMFetwxSaLwNZlvQ8sq0dVzay87veXA7msH
q9BnS0cXzntHxoe5U43e6SoZV/GeAz2Jfx+hFYWMxfd8JOtHr2EtGu/WIt5D
1luBU3XoMve4BY96OVA3v7YeHSryIOZgH+njGF8T2rxyQES2nwOHSjY8Q0vu
XRDdMMCBkp1hLeheMQPhgEEOWL1++AKd/8AjSnmYAx8MuF6hA70uCLWNkPXs
pG4Her1ExbmQr+T1cw+9RgvX9Agy3zlwuyjvLfqN97yzb8fI+4Nrn96hM6V1
BCJ+cmCJj8xHtM8TfIfAAS5lyx60vl/EnE+/OVBY9d8nNJ9ccXjMBDm+UPEZ
3VLfxW/4lwNN6UMD6KQj/KeHpziwbXTxEHq34nK+RC4K3iuYj6A1m+3CTHko
4NMP+oqeCsALCCnYCje+o+uW3gpN56Vgo2rHD/TFFvJrCx8FwVMzf6Edg3hO
TvNTcOwu/QetqqrOc3MOBfVuNpPoH21WJ2wFKPg1fmIKXXUimIt/HgVnD2dz
zcLecbKDi4UoEPvQzINmH3csTIGEzo+ZaPbxR6IUKB6T4EOzt0NeQMH9m3qz
0eztkcQpONS4ay6avVxyEQVNr4MF0ezXJyUosOxIFkKzH6dIURDxuFIY3Y1v
r2Qo4Ep/I4rO05b71bSYAl2f32Jo/27TI8fkKKjSEFuENjrv+3OZAgVS3bQk
ep5u0qFXihQ8DzOVRnd8ejwWqkTBHhmXxej06FHf5coU7M08Koc+YIB/IafA
RilKAb16wMjnrCrZn7jrS9C8sV5fV6tTIDddthT9zDDO+zOHAh77RhX0laGq
kUs0BYN571TR7vED+400KHD6NaqO1li3YHh0OQU9Otw0enJU3+vqCgqmvedr
oGsTPQbNtChYfm2xJjra5ILnb20KZjxVW4l2GCsfyFhFwc8v2tpolZSePdt1
KTjHZ7QK/d1sXj+3PgVbZDbroivHtXffMqCgjGOtjw5Pc+6zX0PGe9UuQG83
j3Cfs5aCq2v+MUTLThT1lhpRIG3saYQeyOhy+2cdBebG3uvQRdv4e0Q2UFBu
6LcBHTyl4VplQsFbvSOm6I05dh+9NlKwSuuoGRo/zZPaRIEFFbAZ/Z771vsn
mylIUwowR+eyN4ijoFD6qAX6sA3PO0ULCqZEj1iiDXnVdz3fRsEsAT8rtECB
1dug7RSY8XrvQL+yD7ZXtybm8rRBp/Jnv+7YQcF/f93s0F5F+A0xcv7/dXBA
6zhNdqywoyCHy9oRPUNgqc1Hewou8G12RjeVmref30XBDREjV3S869Ed+k4U
BCro/IN2E0p7OeBMXk9b3QNNVzRYXXalQH2b7B70H/efL9b9Q+arr7AnukZE
bvt3dzKfEni80FGVpq0pu8n41H3bj7bb67tty14KTk9/8EYriSc9n/Akx1f/
mQ969MHjrdle5Pw/dc8PXeE12mx9gJx/bdmH0WESkuYzD1LQSl3yR1vUGDUV
+FAQEx0cgJY+6LXZ0Y8cH649x9B90nENAocpUAuwCELfflJlVn6EzP8pnX/R
x/0GnnocpaDyvGwI2kRuwUaxQLI96ryhaNEG/brqYxTIvOo/he464mHiHURB
9rnG/9BYN5l/KRDfnh+O9msuX19/goI3ytERaAjsqfE/ScHhOb5n0XOU561b
eorMt8lt59FtLdqPWsMo4J7SuIBOCXI2OnGazBeh+TFoT1W8QoqM//Khi2it
l0WGbyIoMHCvi0Vzh3RVhZ+l4Hpu+mV0A4d/jfZ5CpRmBCegYzs07vdEUaDj
tTMR7XzKziA6msyHAeYqWl3j1D24SOZvAH8KevxNnt7QJXL8Zd9dQ1efbq9I
iCPb316Uhj67gkfXJJ78fEb4dfRO9gEg5PwLd8hEK0ZarUpLJA5hstHD2sF3
tl6loO4CTy66rDtLeyqZgurS1hvo0PMtJbnXKPg0lpaHNtedXGmTRs5HU998
tGSfUvGs6xSElRjeRvdGm68oyqCgX1eoCJ1vcLTQOYsCk87XxejAgdTlQjkU
LIzOLEWvj20ouJtLwVNXnzK08NqfzN6b5Pwx16tAvxmSzV94i4JMa9576Mx4
U7omn4I7/o2VaJ91vnk+t8n+l1ysQut/TeTIFVGwY75dNZov6fGNxmLy+mFy
j9AtJqNqgaUUGEn21qCTxiRyVcoo0KzPqkXvTsE7hFAwN8GzDq25ySv75F0K
9P7j1KOnxmNVNCop0I4ZbkDXpVVldt2nYH9lXhP6ovnA0sgHpIez9z9DO06I
Zqx6SMFmP/UWtGqmvlLfIwrap/tb0T+2eaRffEzBrhsZbeiqqSjFtU/I+hbg
8ortXU556kgdRd5XyHSwvbPukU+qp0Dj2KtOtnc8865tbCTzsSDqDdu7mxgk
Mn/4TbvY3tk4J19/RsGpUK73bO94IxZbtlCwaEnpB7Z3BUVJXC/I/Pm8r5vt
nUOXdF4bWd+fy/eyvePnT7R7Rfb3XdsntndFGlKzOyhQFg3/jD7qZJdQ0kkB
eOkOsL0TOCXh9oaCkaHBL2zv7uRdFu6iIOVS0hDbO9f2hfffUfDQbfMI2zsh
nrh9H0gv7SZH2d5VqIlLdpP1NTDnG9s7D6tLtT1k/x7uGGN7xz7gmYzHipk/
2d5VZsUofCY9bLo1zvZub4vIs34K7GJsf7O9E8c7ZFJgGzJzgu1dtZKw2hCZ
f4k3J9neeZlHtQ9ToPLBaortncRRobBRChot/k6zvatJPaf5jbx/GU7j5sPe
HWwQ/PCdgqxS0xloFZmfked+UJB/c3gm+vsTWQG9cdLf59Gz0JV+phH9vyiY
raDFjw6X850T94cCzrX22ejtDYnhxpMUtG0JmIuW9X/M/+0vOZ/UpATRA4qj
/yVPU+CgXTEPXdQswbeZmwZBX9v56OBAo7A/PDT0dP0SRm9U9uLNmknDpsBY
UbRYa2yo1Swack00xdDvg6pmzOCnwXNDszg6V3UgJH82DV+P7F2EPvxSlGfX
XBoyOmdKog1D9E/MFaRh5MBVKbQA5cFVNo+GlTraMuhXHVHB7vNpeKfZvBiN
T2cSFaHBwtVdDu2l0XP8gSgN3x5PyqN13gr+3S9GwzLHaEX0jHDtY9ILabBX
V1ZCN61wnqhbRMMwVbEUHc9+4EiDiccWFbRbJD4hgobGtvfL0LROl3+LDA3d
AT5q6D/dfL+CZcnPW8/goGvOaxzhyNNguTeGQkfp2v3sVKDhSLECg7brCz10
egkNd3UKNNBKMXljK5fScGbMQBM9atDu261Mg2F//Qp0xQD396hlZHsW7tRC
h8Wq+Rio0TAd1K2Ntlhr9fWLOg31cvtXoaWHg7zjKRrm/x1fje6LzxpZz9DA
LDihh769rmX/mAYN59xnG6CPf50YuqZJQ8RYFKBNkpS8zFeS7alcaIgWNTUf
nNQix+NR0lp015i/Z44ODRL8isbo7JTUgR2radh3OnMd2m9Twx5ePbK969U2
oOHXj8+39cn2rM0zQc9Jl93tBDQsOcZsRLeZm/YJGtLQO1Zghk6Z8HGvWEtD
4Y3lm9GemYm9u41pGE27vQWNdysVX0/D306NrWju6ZHuhxto0NmWb4FuyJFw
PWhKA88cyhIda230cbEZDRU8udvRzjz4hEQaHukpW6PV82LfH91Cw9E7qTvQ
4zZVjspbadA/LGODruYd6HphQfbvcJwt+myB6K4QSxrcy+bbo3c66L+lrcj4
QbgDWnG2h/1baxq0Z3M7ooeLol6f2UlDg7i/E7rMqdxWx5aG67uHndGhAj0d
vXY0yE+7uqLN7wjaxDjQcLWz3Q0t6abdvsaRhoCJTe7oXiHnHcNONAi7VHmg
8yvOvLziQkPVPM096ECPIitTNxr6uK/vRa9nLygh80VXfB9a+D7f9nQPGvjv
hXmh3+zVaLXYQ8O9Uz/3ozPF7bZN76XBNvYfb7RPdejzG/to0BtpPYjW35+3
1XY/DfejDH3R/JLtzXzeZLwC8/zQLTXc5sUHaRC7JXkYnXRQrcnFl+yPetgR
9G4Zq83zD5HxGRv1R2vWBTXcO0zD6ll2AegpvywzT39y/FwfBaLx6v1FATR8
nsM5jr7YMGH6OJAG06mLQWhHf6U63+M0HNefDEarLjE3kQ+m4cMTlxPoH83+
tU3/kvmb8iQEXRWYuv5YCA0JNZxQdIRyQ82yUHI8tKNPoa1bfxi/OkWD8fiP
MLR8sOyj0P9oaJ1pcxo9qGpqtDychiyninB06Uuf6ndnaJCdKxOBDglJNDwb
SUPUzKBI9GbqcdXqczRs29x1Fr2ocwQ+nyfHq1f/PLr7lMT9SxfI/GxKjELn
aRgZGMXQMDFr4gL66Nt990YvkvMzamcM2ig8Vu9qLBkfz+KL6HkrqyrMLtMw
FCsci+5437/6dzwNFxZ4xaHTI0XLM66Q+dhTexl9QEd/1fYkGv6ZpZCAXt3j
foc7mYa1gYFX0LxRUdq3Ush6a/QiEf1Mt7zEPpWGmF3qV9FX+rpXzkmnobjx
ZDLaPUawuPQ6Wf+iOlPQGqC94p9MGuKymFT05IBToUg2DTPFwtLQtbFnllfl
0HD2ZWc6OnptUYHXDRpCh6gMtnfDbxmpPLI9tiGZbO8S+PKf3CLrjUxbFtu7
dXjDIBqctJRz2N59tc1TLCR9yfDPZXuXFMp5XkTG36vuBts707wbQSU0KERK
5LG9+/FKTf0ODYd59txie5fCndtRRsP7Z6X5bO82qan+V0FDyTjvbbZ3v7Zn
r7hHw8YjloVs79KDVD5WkvXQPKWI7d3WrMzzVTT8PjFYzPZu4vlS/WoaKgV1
StneZU5cH3hI9vd7yB22d5ZKSpdryHzTbCxjeze9JX1dLQ3JTeIVbO9y/RW/
PyHj8cjxLts769TUlKc0VItl3WN7x9Mgv6WBhpzqkUq2d3k/UiYayevXa1Wx
vbOVlctuJvOTOf6A7d0s02Tr52Q8vlVXs70r8Fk8s5WG7cL8j9jeOSQmFbwg
PTy7qYbt3ezH0o4vyf64Rz1me1c8ckWgnYZjV1tr2d45SUiVd9CgtUK8ju2d
gFGCx2tyfqrsfMr27s4+CbG3NFwKjK9ne+cWe7m6i4ZOTmcDeun8qoXe72m4
ApJNbO8q+mNlPtKwtMCmme2dh6h4fTfpWcjlZ2zvRPUv+ffS8Lbo5XO2d/fd
FyztoyF7w4JWtneeUTGtn2kI1rV4wfZOvFzkxAAN+VFn29jeVXdfoAZpCN9Q
95Lt3X5B4TdDNDg4zWxneyepHRU+QoP/a4MOtnePnYS0v9KgVubfyfbu4Jlz
Pd9oePi74DXbO5kiwegxGs4nDbxhe1f3NhJ+ku1LV+hie3eIT2BonPRJyPYd
2zt5jYiE32R9fBf1nu1dg+0ckwkaBkRqP7C9Y28IT9aH3MmPbO+W5PGnTZHj
naXRg5b6/MVIhYuBM3Pde9Fc7Be0GPjZGv8J/SlG7GEbNwOWPI196Po9OSE3
eBgYjp3+jC4AWHtyBgMLojUG2B6KveC2ncmA6JjLF/SxL7sfMLwMrLwXM8j2
8cHff/lmMfB06OEQekNc9JouYqmw78NsL72UuYr5GDgSpjCKFjG6ez+CnwGV
ka1f2X4usgh2mc1AYFXQN/Tb4V6DVXMYuPcn9zvb00cBU0JzGdC62j6GzkoQ
qvyEzp35k+2rd/rxewIM8Cow42x/1q/SvyjIwAiP3S+2t9JNk3vnMbBmy6nf
bI++udw1FGLAcOatP2x/n4wHLprPACi1T7B9uhqpO0J8soDrL9tjX/mJGmEG
dmarTKFbTUvKE0UY4BPcOs32GR+PLMrAmzeHufiJ2cclLmBAXiKJGx2Kj08S
Y0C2upoHzT5OAd3eNwNtjrdXFmfAy06AF83ebnEhA+abmFloSXYDGRDJteRD
s7djkGDg75HD/OhevDxTkgGbwsuz0ezlGlIMHHAon4POx69vEp8+/Houmv06
hzQDg1MTAuhA/HhHhoGen1Lz0OyfexYzULZLVwjNvv2TZaBQy3Y+Wi1rRhG/
HAOLgv2F0fODLvu+I9bQiRVB/7TkaJbIM2DiUiiKfr2s+lukAgPX/jYvQD+Y
tr7tqshA2JxBMXRG25eDq5cwoB/OtxAdmfuvhrASA4IBCovQB0/gHRjJv7/V
k0Dv2JGTX7mUAfFCa0m0Hge8Lykz8HbigBRaYcYLep8KA+2lp6XRfB27R9Yu
I+PZlyKDHsr7myehSv7/M3cWo1tCo/ePEtdea5ZF37FVpmrVGNjO+SSHTmLu
DiWpM3CYMymPPjnL4qYfh4GDqcKK6N1veveZUQxERC5dgt5yO0BdgWZg7uBq
JbTmaaHBX8SaD7YsRUvsSs9tZhjYJOCijJ7SXOWZocFAQqOfCrp7Nj4QjAEn
3v+WoeveuQxYajLQW3hZFZ1XPJ6tuoKcLx3ZauiLEZF7uFcyoHe4XB191Fl+
WTtx3JmnHLSjdsnnPC0GHol3UmhjQbOsU9oMzJDqp9Gq3e887HUYSIwbZ9BC
ZX7KmqsYeBbJuxz949zsvtmrGfj0R0QT3el2NeM98eKPsivQVas13Ut1Gbi/
Vn0l+vr8J0rn9BiYI6OjhY74ZN/rps/A2oNG2mjvu1/TdQ0YuAFbdNDW0WFu
IkDWq9M7V6F1d0st6SdevMllNVreIL/7/hoGbp7x1EXPWrAuLdaQrCfGfnro
wf4OF6+1DFQdPaaPfn5/v4KxEQN1qqEG6NJLMz5KGjPwckcEoBM9L1/7SryM
O3oN+oQhx/nJOjIeypcN0R4Lq+WS1zOQUZe0Fr1pyPr9oQ1kvexPNUIvf/gl
eZMJA2ZhmcbohfH/OiqaMtCakrsOTX55lP1DrLLq1nr0R+OcrmcbGThvfnsD
+okkXM00Y2BdT5EJ+iZ7QTkD58ZLTNExj/EdLwM54Xc2ov0T/75R28JAR0KZ
GXqXT3QijzkDDmrlm9BGJsr2HcSHdMs3o5ctviuVv5UB5/qyLeh5Y1tfh1kw
4Pr6jjl6rK43wWEbmd+epVvRHckBtissGUg/VmyBvn9ISHLudgbc5hVuQ6eb
pXd8INaWz7dEn5FfFX/HigHH4hvb0QfGG3eet2ZAsj7LCr290WWR+w4yfi7p
1ujVaeOv9HYyYHwseQda9mhknKgNAysWJexE85rL7xiwwfXlog16YEmJ+ANb
Brjaz9qin/3Z+DLOjqxvk2F26OJn7y7tt2dgOi3YHn0lw89qnQMDdPMRBzR+
u1h6FwPKQQd2od23XX3xjVipwN0RbaaiebHOkQGP3Q5OaI2pWssUJwbU0y2d
0eIv7EWPODNQ4Gbqgp7M/tqy2YXM3xwDV/T/t/iVkA==
         "]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1: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
zHj03rlVawRPdRH9+X7H25tpPdNFyvMYD5a0sCA3TEwtPaGLmCxbFuHaQuub
LpIcM29HHFpe3HzW/oYu0li3uL+5hdY7XWSSO9hhUSuud5dPj0tJdZP94Tcv
u7TS+qebPL3meSUKXcf5oi7fupsssD7n+LeV1kPdpDXu34jMP1zvvJpyPS92
k1MNA/sc/9H6qJscTG18Eo6OHJgTvzi9m+haDaSV/qP1Ujf5YrknjNGG690h
25DK7m6yJNfdwrqN1k89RGnLzrwr6K2tl05eXtRDWiX3SOW10Xqqhxz3+2DA
1Y7r3c53W3S39BCz1PgVpJ3WVz3k+7I9w6fRUtU98C+4h3BNK4aktdN6q4ek
vVk63ov2WK+gcDu3hyw5mKir0kHrrx7i/rp51T70r6ItQqvGe0jjG1GV6A5a
j/WSA9I7Gn6jpeXzh72keskIU/zg7E5an/WSiu2bC+zRBbUu7es1egmH1bGx
oE5ar/WSPckh07loz/uTv5fa9BKTsc7K6U5av/WSnQsy/fW6cD1xvP2de38v
2ZqiIXiii9ZzvaQ8//LOBHSFpEZOzcVe8l6692pzF63vesnhnsjr87pxvfn5
LfXVg14ypJC3Z1M3rfd6iarWfYkQtFawa1xQei/pUlkflt9N679esuCNbDdH
D65Ha7jv7irrJeNSy2X1emg92EtGNV4vPIa+JfDgqkFPLxENaJ162kPrw14S
o9qfUoc2y9U9N0OIRd62CxpK9dJ6kUUaJLdF2qL7LpQe61jEItuS55T799L6
kUU4tx1veY+OJod3fwIW2bgjrHigl9aTLHL+Ucr1pSxc38YFNt3bwiKr0gYV
XVi0vmQR7pLgiNtojrcxq0+cZJGr3xPrilm03mQRfX0fLt4+XP/cieGaEBbJ
hqWT+n20/mQRuXdNJUfRTmpVy+XjWeTK8nKfJ320HmURi+KlPL/RYt0nFozn
ssi1U8zdzH5an7LIsdcvIy3R75+LzSytY5G4XP0Ur35ar7LI4eCyB8noQ/ue
8cWPs8jmpOd7m/tp/dpHlA63CkgP4Hq6yHzUd1YfuVaU6mczQOvZPiJwxvCP
L7qw7m/HFrU+ElMdJ/5mgNa3fSSTb75sB9or8vRf9bV95HvhN165QVrv9pEV
iVUF69DKW2b+ENrXR342ue33H6T1bx+Z3pXQlI6umvXiU8OFPjK7LMega5DW
w33EJKL88PwhFlwuXf363X38vgViZ9cP0fq4j8RD6H5/tG5I09PQN33kZlCA
WvoQrZf7iP7ozPIOdOvac/cO/Owjxjd2bpo3TOvnPqI2JyTNDh0uKH3dtKuP
LJtZ0Os7TOtpfL9PKwTT0JZ5qeelBfrJY6XOqZZhWl/3k0Uc839KjeB672t7
om9hPxkp6vW1GqH1dj/JL/ZleqNjoX3PV6N+8pB/zCdxhNbf/eSswZn8v+j1
E5c2R2/G1/cqssRHaT3eTwqPyY8Yo7nT5dacOdFPjheG/jk2SuvzfpL5PeJR
NPrlyXdG6673k82SG81LR2m93k/2jnTmco9h/aC+cYXys34ieu+CouYYrd/7
yWiz5t7daGZPz0Kuz/2k//Jiv1tjtJ7vJ7vHfS5+RmfHB0pW/+0nld4OzgNj
tL7vJ8GSpfMWjWO94aog8HK0nwyGz8xcP07r/QGict9A7yJ6nkL22JWZA+R6
oGv4y3Fa/w8QxdCM0np0cf2WLmfVAbIiaQOLMUH3AwPkweP1PYD2eTBYq2c1
QAKEK78dnqD7gwESC5zXItEqW0N+MvcMkB+Hu1WKJuh+YYCcvpmVOIaumb00
t+3cABH1CBFfMkn3DwPkQqLvuk3ooLLcNx/vDpBXD195+E3S/cQAab5g4v0K
rX9j5/M7aQNEydFqV/0k3V8MkKKxjqXiU1jvWI/fP1YyQMpEzMsNp+h+Y4Bs
5jvqcgB9Ryg8eHXHABlRvVYSMUX3HwPEJPbt/Fz0qi8rfBfwDRJpO/H1fVN0
PzJIFPoT98lNY310sdB9dP4gUZufsmPtNN2fDJIbRlq6p9FPjPfu+2EwSK77
OQw8nqb7lUGSwad28yfaYZJjyzOHQbI/tm7m9DTdvwyS4VkXTi/l6APed/fW
Xjg2SHQ7l33chGbvZwZJdQBX50V0qoc2OF4dJGny0mMv0Oz9zSBZURLcUYPe
rfFDTS1ukDx0P5vNz9n3335nkIR/5zitgZ7R67ZIMGeQrDylJumEZu9/Bsnv
KuWwQHROAt/s+t+D5JsR/2gamr0fGiSaOXXG9ehj+x8Jpg8PkiVOPw6KcPX9
tz8aIuItfd466AWKhhMhEkOkh9PpmAuavV8aIvk6qlbX0CUN5d2uy4ZIXYs3
/1s0e/80ROasdn7WgD738Fi98aohYnBiUFWUu++//dQQWbNx3T0dtOo2kTKp
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
6tYAEXk3j3CHeS9FRA2R9dHw87Ch7wSDRbRjkc1dmPdTRFS8bsMfeHl1SMX6
YSKKLTuoOqpu6qmIaFd0wixYa9Sbt8UjRKS+FB0M876KiEJtV2fBMVED3vQb
xe63mj7CvLcionYvPnU/hv2uZvurkDEiWvtj23iY91dE9Cheey2cZ/ui9L0t
u3+NK5Jg3mMRkUeLu89g57g+L0dPFFFWto72cXVTn0VE7YcPGATX1m0uOaQW
UemOsW4w77WI2LphvQ8O+ncgnohupatuwLzfIqKLiY3fYZMEefE0BzY/wjMF
J9RNPRcRHfOfbQdnNFv/5MwMdj/8Pm6Eed9FRDPYPgVPcHhQpOMsovrMvBcw
772IKKBzV5147HfJwkcL54nI9ujEwTDvv4hom/cyN3iV1qrCnAUi2rBzbQTM
ezDs+dd55cK6zvkFPRax/5875RvM+zDs/v407pWA/S7d+P4qdxHVxTyaAPNe
jIhOXPHxgwfret19uJSNv8V/42HejxHRgaM+j+GCBdfz//MWUZc1jzQS1U09
GRGlfDc2g12zDG5vX8Hmj7H9bJj3ZUTk19wnCG7o7H7r7Wp2PU+sPw/z3oyI
hhj5lMOh7pdv0Dp2fRbYd0xSN/VnRFS9pyfB0tyO1w9sFJFWQtESmPdoRDTo
3IpIONsI32Gy8X+lxXWY92nY9X20+is8xTvz6uRtIlrw+3mPk+qmXo2IKobL
bOGq2zrsW34RvY6fuwLm/Rp2Pay2xsEbes/JbrVLREFdw+7BvGcjogLTXfWw
/pqzl+buYeMv3Ft8St3UtxFRxymj7OCkB60uXgpj82t5s/Uw792w9aL+RAL8
7zTzSBFd+jW4COb9GxE99slsdhr73cZTGV5RbP1ZJVDCvIcjIkfd1dNhj6fN
0u/GiqgVXfCHeR9HRCs7V56CNfrYp0njRDQq8u9TmPdyRPTnoYZmMva7bSdS
Nx9j6/2Dmv9g3s8Rkdv++46waWl9yst4dj0G7NsC856OiGpTbJPh3AETkwed
FNHoTu+LYd7XEdEeV1/NFOx3uw6fCksW0aS06v9g3tsR0fuWkx3hL+Xfkz6n
iuiey8HNMO/viGjOs2en4IBhNom26Wz/WNbiKcx7PCLSNe3S4gz2u/Co+GOZ
Iirr1UUJ8z6PiPImtpgGp1Z/Ot4sS0SGOc82wLzXIyLjLQcTYJtRI4/NuCKi
7rGTH8K83yOiqYafGuCXUeFH0q+JqM3fleJUdVPPR0TLHT5Ngn1q3h3Wuymi
K/+pV8O87yMiRdChOFh73NBD7rdF9GxFST7Mez9sPtZr1sKH4kJib94VUWKv
bsZn1U39H/b8vhqNgfvXv47u/UBE5Ku9DOY9IPb40ssj4Xz1gKh1j0Q0L+vU
VZj3gdh+s3fee3huwvb9T5+IaJ+lZqc0dVMviI3fgtAh8M9mL/aZPxdRT1td
F5j3g0S0OX3FTjjYoU/Erpci+mF8Jw3mPSERLdmp+wIWpGwOq3rF1mut4S3P
qZv6Quz6HnBSwZla+AtjEZmOd5kK896QiD6KZ6yDJznL9xx8J6KB5nQM5v0h
Nj5Wd7gLl6cj4COi5xr3v8O8R8Tud/Ga7unY73QfBE/9zF7faHYeBfM+EVt/
gw8sgfVchTtTvolo/lrdvTDvFYno8LOlF+DjWSt3tP3BHn9K9iuY94tElK71
u3UG9jv9/EDXOhE1eyfsA/OekYjmOg2dDhe6G2+72iCiwIWW62HeNxJRL4N+
x+B/pzk1E9N9n853YN47ElO/gNff4Eaj65tXaojpq32s4Xl1U/9ITDFVY0bA
Yd4G/oWtxHR3fKkrzHtIYtLf5hIMy/OXbFRpi6nF4SdnYd5HElOPIxbP4Cu9
L68PbCemD+HbmmWqm3pJYvq0KVcM/3t7RQcxHV36eTzM+0liCljY2huuxo9f
OoupjVf7/TDvKYkpdp/mZdhflrl6f1cxnSurfAvzvhLz1EztC9jvNums+t5N
TJp/V/WBeW9JTC3LxdPgU0+dV0wyFlPnDtf8YN5fEtPOwAmHYas+Z30STcR0
bdqNGzDvMYmp9WZVNVy8rZV3S5GYTupv1ruobuozielXl5sD4KWljsvnSMXU
N6RuBsx7TWKKDui2CW458NTSiwoxebeUH4d5v0lM3ztJ8+GoXc08u5iKyf5C
5y8w7zmJ6XqzL50vYb+rmOK+vK+YVnzOHATzvpOYwnZ5zYZvDjux+E5/MY2q
MNwM896TmBIbk0/As8Lr3SSDxFRe2u8OzPtPYtILjf8C11RPWOg/VExWPdrq
Z6mbelBi2rt95iA4cNThBS9ITO1Lo2fBvA8lphzRnU2wcfT3+RZWYspY8P4Y
zHtRYvp2/GcenFYzZt5ea/b8v9Z8hHk/SkwWE0r1srHfjYua82msmAblZPaH
eU9KTB4Omx3hsrhPs8dOENONrkPXwbwvJSaz1m8PwSvqLWcdnSym/WZ+uTDv
TbHnG9X8HaxjFz7j7xQx/Zi4su1ldVN/Skyn7Er+g+MS3jk6TWf//3QfO5j3
qNj1XuLjC1s0H+pwzklM5rtPRMK8T8XGt/D2RfieQ8i0DrPZ8zMreQnzXpWY
grJeNL+C/S7ltf2SuWKqK7gnhHm/SkybvZPHwPVaOHFATG9PblgM856VmB5v
oWA4xHm72sRNTJ00PifDvG8lJlvTXYWwKKNk0tolYlLp9aiFee9KTK4pUV2v
Yr/T7TPxiaeYDnXWHgzz/pWY1o92mwmrXTeP7+slpoO26eth3sNi81Xx/RBc
mfXYNthXTMIvJtdg3sdi9/sglcPr9OVj361i18NyglaOuqmXJSanl7YyuJPH
ujFWa8W0da3FOJj3s9j9EHTxgBNyC0bHbmDrVcmbXTDvaYkp6+ThFJj/waiY
OsZMKoR5X0tMCWkfa+Ai75Uj7QPY9a3307+mbuptiWnlyvoB8JL82yOSt4tp
j9kiB5j3t8R0ps+t1XAzgTFpB4vJcm3XKJj3uMR0zGj6JThizfJhC3aLaUSX
bS9g3ucSk7v3iUZYWZg75MpeMQUOPt8zV93U6xJThVfmCDhHZjDYaJ+YSgRJ
c2He7xLTBftgf9hh0xKLFQfEdEdnzhGY97zENGOKIBf+9DR7wIMYtv6YPnkL
876XmJon+LW8jv2uT8f+ysNiOnCjgxjmvS8xnQ2JsIa7BS4w33ZUTBvbtlsI
8/4Xm2+WPtvglNLzZq9PiEnX4s4JmPfAxKT82fkWbD1Qp8+wJDFd3jrxHcz7
YGKqfr+q9Q3sd7uc/4s8LaanqjApzHthYjoy9ZANvLwiVVlzRkyLFsW4wbwf
xtabZUGBsNbwVoqJ58Rks3xxPMx7Ymz+eA++BceEO8oSzoup+/rflTDvi4mp
VeQprZvY7z6elGheEtOUW5MlMO+NsX/vUm4N541qJna+zMZv4GJXmPfH2PgR
vdoKO0dPEV7IYetprc0xmPfIxPSs8XAujO/O9W+Iycum+g3M+2RiGl8s0biF
/W5cfa9leWJyPG/fG+a9MjFtqvayhE2OTOiZf0dMKWv958C8X8bWs6WbN8AZ
9Yd6iAvEFH/HNxbmPTO23hxwzIIn2H032vSQjb/S/0pg3jdjjz+uth7G4eMl
j9n1/HDKME/d1Dtj4+3ydAt4VfMog4HPxDRaUjMN5v0zdr2lG31hXcdPXUJf
sPUwr3EvzHtoYhrQcWkqfDTFUv9jmZhOtH5QAPM+GpufZ4WfYcTObd6yx9tt
cbvb6qZempiujDysgAuc3+kdqRSTYb/bY2HeT2OvR76/XQi7Zgzp0PheTDVB
X7fCvKfGXo/8/XwEbtANYQ9RTKLpZVdh3ldj61lkTikc6vpaJ+2rmMpuR/yB
eW+NrTffZxrlY7/L7t+2fa2YJN31B8G8vyamOTaXp8HZ+tvbLP4lppsbZvjA
vMfGXs/cqtoDT/Eo0br+W0yz5IuTYd5nY9c/seQOXJVr2qrXXzFNnWz5Hua9
NglVmURq3cF+132zpl8LZtErIcz7bRJ6MK/7SFjf53GLxy0lZFI61hnmPTcJ
TTq8aC2clC9rbtZGQkXJfvth3neTkEBvYzpsKVj3N0hHQifzVzyEee9NQs/L
nb/AT9YU/KloL6HurkPa3VU39d8k9NiujRz2KBQ0WHaSkHtqnjXMe3ASoqC1
82EN+cr66C4SSn5jshHmfTgJdc3JjIb3b7r966ehhO4oR2XCvBcnIan8ahFs
Wtzjp10PCa250ucbzPtxEtL7Eap7D/tdn+W1p3pJaOiDSjnMe3ISsnQwHQM7
BebWtBZKyG3Povkw78tJqNY/YgP8pbTrt/kSCUnM06Ng3ptjny/+VgYcMHDJ
l2y5hDzf3X0I8/6chH7WXf8Mdw/J/mT4n4S03qS0va9u6tFJ6FHCLgmcWqH3
0cdMQjvtna1g3qeTkGNVb2fYZviCD/f7SWiBZ/EamPfqJPSkyj8Cfhl+vkpu
IaGCuT1TYd6vk5B3yem7sM/Htu+2DmH3y9msCuY9OwmJvh3XLMB+N9q5omy4
hFz3t+8F876dhNJmLBkCH4pOfTtkJBs/dGEazHt3Ero0tmE53P97yzcRoyW0
Z5NZMMz7dxJKqHaMh/PHOb76aiMhnT2+12Dew5NQls+Wl/DcIydLx4+X0MWY
gDqY9/HY9eq4tvMD7Hf1f1+cmCShyCcupjDv5UloyfcRtnCw3ZSSFlMk5OXZ
YQHM+3kSOjzu4QZYkHj82axpEnq3Z/sBmPf0JNR/jPk5OLN5/dPzjhJatrzg
Psz7ehLa0mXue3iS44QnnWZJyG5ouWahuqm3J6HL72b2hMtTDhV5zpFQvMmt
QTDv70noQ7XYHvZr/f1h3nwJzZm82hPmPT4JlakvB8J6c8YUChdKaNjPX3Ew
7/NJaKy1OAs+nnGgYMNiNl5GjXkC814fu76/ZnyFh7b/dO+Zh4RCF7q0fahu
6vdJaOq+OSK40NXybv/l7H4GTyaY9/zY9ZrczxF2yw7L3+0joYnlbb1h3veT
UHO7JzvhRv13eR9WSsg6OuI4zHt/EirMG3sFDvMYcsvaj43Xsi/FMO//SWhX
eVANLL++68bh9Wx9KO3W7pG6qQfI5nthjBi+0v11bsMmCX293nkEzPuAEtqe
vcERnubT/9r0rVgPXnrBvBfI1o/HZjvh6vxAtqJKKKbZ6mMw7wdK6J51Wjbs
Lyi53G4nW39Ov3kC856ghLSHaX2FDfxMs91CJDT8l7F2kbqpL8jGW7lcAJ8q
9L90LVRCJ7QVQ2HeG2Tz273nVNhK/viCcYSE2nds7Qnz/qCEVv99GwAXb8I3
mBLKGJx+EOY9QnZ/8/zOw0uL12Y8imbXI6X/A5j3CSW08MebKrilWcE500MS
qjwY0OKxuqlXyO5/ag8jOCpQkLbjiIR69kswh3m/kM1PmWw8bFa2IrX8uIQ+
R8a4wLxnKCHxtlbr4JsDb6eMSJTQ7br54TDvG0rI6se5U/CskB7JUack9H1T
w3WY9w4lNDJu4Eu4pmLZqR8pbP2aufAHzPuHEjJND9J9gv1ueG6SOk1CgWlH
xTDvIUro48zU4bBxRNfEkxkSSk9LmwbzPqKEzK8mecJpHxfHa11k12/bvgCY
9xLZeG+3Kha2HZ19fF62hNo5TEiHeT+RrX/uXe/BZdF6x7Kusvs9+XE5zHuK
bDy13vEHXvHd5YjBdQk9299X/6m6qa8ooQjtAiWsM/78Ye9bbD1wnjcK5r1F
Cb2KqZoBxx1pe+hevoTKby/whnl/UUK5Hx7vgC1+z46V3ZdQasthcTDvMbL5
3yMyE75nlxq9pVBCawe9K4B5n1FCZ2ap3sEuiS2jSovY+hKy8C/Me40S2vEo
oksx9rvmjvsHF7P9z+yiCub9RgkdSHo0Cg5xPLkvvERCbWzezIB5z1FCFW0r
vWDRmb/hX0olNK6hdDvM+44Smmx87xB8sfWUsHFv2PVbeSYD5r1HCe1uu+Me
rJ5zPPR4BRtfZdPLYd5/lNCghm4NcGUG/qKGzYd5Dzs+Uzf1ICV03mCTDF7X
fkLIzI8SaiYUjoB5H5KtX9svTYM7LTwUnPFFQhcm2HrAvBcpoT4r7m6G8W6c
jt/Z+qZlfQDm/UgJjdJKS4Gpy5gdHj/Zfrm6602Y9yTZ/HJZ9gIu8jgQeKue
za/87BqY9yUlZHuuhfZz7HfXPwYIGiW0QTS0F8x7kxJaYbJkANysh+XW9c2l
ZHg6ZDzM+5NSUhckzIMjfMI2F2tKqWVw5iqY9yilZFSVvQtW3qnc1K+1lHyr
Mo/CvE8ppW+hiRfgHMGQjSFtpbTs/e4CmPcqpXT7u3sF7OC3a/17XSk9Sx/e
APN+Jft8/Vt1LMF+h7fTdZSSl+81Ccx7llKK81sxDOY5eik9Gt9zCsz7llJ6
+jHLDea5OimtnG+3Hub5GimtTS3ZC/Pj7KV0unRmAsz7l1Iq+FyYDVv/O+5O
Sicqhz+CeQ9TSl/zD1XBJYH+PjoCKbkf/tUI8z4mezzu1p1fYL8rK/JaKJZS
ed8dMpj3MqU05de14bCWhWx5joz9/6s1U2Dez5RS9zDDRXBMyNqlPVRSeu7d
fz3Me5pSurxgzF7Y/N8bRKXk7TkpHuZ9TSkdCZ2QBecNF7g/NJfSz8eWhTDv
bUqp8whlJewcsWLxfwOlFF2o0wDz/qaU+u590+El9ruPeW7bB7P7EZAignmP
U0rNz3gPhoNG91j4dpiUlndVTYJ5n1NKs7JL5sMmMcsWkKWUZif6r4J5r5ON
pzLjYDjj+7X5B0ax6zP/zGGY9zulFDJ4cDo8YXzXebVjpLTbLfM2zHue7Pl+
+68Ufn0EJypIKbfkQA3M+55S0lL+0SrFfvc7a3bSRCldezu1O8x7n1Ja0/ZY
H1h3it6sVnZSSj76fhTM+59SKk0TO8JHE11mzJ0qpW0jHD1g3gOVUu/x/pvg
wS3OO15ykJKs5HA4zPugUtKrzUiA/9WPZ0ppUlRuFsx7oVKa9vDmA9j1zOxp
Xs5SCj98tRzm/VAprdZOrYMbWqfa353Hrm/H/e3K1E09USm9zVphAofOaTlF
6iqloXrj+sO8Lyqlkg5dxsLS8w7qzYukJL/6ZCbMe6NSChDvXgZntz856aW7
lCaPpi0w749KqcKkfB88ZeHfCYOWsfF0ZVMSzHuk7PqI9C/DVdl248O8pVQz
9WAhzPukUjKf2qsC3tDluO3nFVL6Lomsg3mvlH39wlbtXmG/86yzsV0jpYGO
7r1g3i9l1+fKLXM46fr4McfWSUml030MzHumUtK0dHWCLXscGt1sk5SE8094
wLxvKqXCFaUb4Sc+NVYztrDnt1E3DOa9U/b4N/c7AXvcsR6Zvk1KWVvVF2De
P2X3c8eCu7CG8MAIvSApzQxfVgbzHqqU9iR51cD7/T4Od98lpb8FS1q9Vjf1
Udn602amIWz6cMSwm3vYfHeyUsK8lyql2BsmBOfKw4b0DpdSld1PNcz7qVKa
q5HrAjv5Vw5aF8muZ8m2lTDvqUpp66uRO+AvxYMtnkZJaVPX2miY91WlNM4/
NhkOMNs1wPyglFqJKQfmvVW23rR68gjuvv1Vv11xzFLXSpj3V6Uk2F1dB6eW
9TOvOsau14jFOm/UTT1WKRlTqTFsYxFoNipBSnW7xpnBvM8qpcB+yVbwy5Dn
pgdPSumFufY0mPdapdRmz0w32OdfAI+td5OPr4F5v1VKEt/KnbA2+SunnmXP
X7PXQZj3XNnzaz75DHwookieki6lVctWXoN531VKV6ZGFMEDPkllbS9ISXru
ZCXMe69SSg29UAfnj14rcc2SkvO3y23fqpv6r1IyfXqpBzw35r7o6hX2fG3O
mMK8B8sen3WMJfyv/pIrJavHG6fAvA8rpcUNMxbAweNX9F55U0qhl/5bCfNe
rJROdasLhAVH83oV3mb7T7eLB2Dej5XSlis+J+HM3917qu5JqWcHcTbMe7Ls
87e7fx9GTCDwgZQmXlr6CuZ9WSml92pdA5cnXjN684jNt+GRmuXqpt6slI4b
9uoC+7Xo2m34Uyn9OndQAvP+LBvvXbsOgvWcFhvsf86ul2WALcx7tFJ6bPFx
BnziTFaX7y+lFN9svAfM+7RSaoyOWw8PbaOnP+m1lFL0vobAvFcrpch5Aw/D
hXNcOiWWs8e31zcV5v1aNl/jk67Bbucz9FpWSenG0eJHMO/Zsue382853Ni+
bYc51VL6NL/HT5j3baU06D/z1hXY7xbO1r34mc2nzyMMYd67Zfc3yVoOyy+f
0elSIyW3BaOGwLx/K6UHJoPHw1e6tGy7/IeUFG8ls2Dew2WfP6WdJzzN06HN
nTopnd/+YT3M+7hScvW5GgJXX0/Skvxh+6VPyCGY93KlRDunnoH9e/xt6d9M
RsVXOuXAvJ8ro236twthA187zRcaMvoTvOoNzHu6MqpW9fwOn7pzrIWFloxa
1WVpVqqb+royavhmrw9bCeua7dWW0aqeb0Uw7+3KSO6/ZABc7Df+78d2Mso0
/mAN8/6ujO7/mjcdXvrw4B8bPRnpdX64EOY9XhmJfIasglsqan4f6Syj5O7R
gTDv88pool5tJBzlb13f2FVGx6ZaJ8C81yujyR9DMmGzZ/t/ORrJ6MPzB3kw
7/fKqJNI5xl80+zjjzRjGc25M/w9zHu+MlpYtKgenrV9RG373jK6ahWs/U7d
1PeV0d9uCd3gmrK9NYtFMkqfnSWHee9XRj4dbw+Gt1tUfr0ulVHeoPu2MO//
ymjk0ztOsPHuwV96KWW05GvOYpj3gNn1CTyzBk6rDP7kZyqjb4cjd8C8Dywj
5xGrDsC29Kr6cV8Z7V84ORHmvWAZCY1MLsBlEf0+mA2Q0YbZ7/Ng3g+Wkar/
yWJ4xadtVTsHySgxzrUK5j1h9vgTDetgHevnlZVD2f2ffL11lbqpLyyjpxGL
DOC4mP8qRo6QkYt/KynMe8My6tEleiBsUbvpbYyVjPymysfAvD8so89WZ6bB
98bjF8oyeve2jyvMe8RsvA5J8IVdjkpfTbGVken4blth3ieW0VTDLWFw/W+/
0tMT2PU/XnEE5r1iGWX9tDwLh0y5/6KNml3P9hE5MO8Xs4//9voBLErqXeJi
z8ZXnPQVzHvGMholXPgFvthixbPL02XktSb2L8z7xjKKir+n+x77nVPe024z
ZNQt9WcPmPeO2fg8YKiCK890f+I7W0Z7XPoNhXn/WEZDOtuMg9e1WVZUMFdG
R0/aO8G8h8zun5nTIrjT3GsPFQtkpHvMYRXM+8gySms7eRuccL5LYYCbjBa7
jYiAeS9ZRmuzZcdg6rC44NUS9vX0dNJg3k+WsddplTlw0cKse0OXsvuRefEB
zHvKbD532V4GL7nc4e4+Lxk9WTvpM8z7yjKy+6LbCDfr6pL/zVdG//nc1Pmg
buoty+hU29VGcIRnRt6E1TLqeEEgh3l/WUYH/W9awMob2rfi18rY62+XMTDv
MbPnv7R+KpzTY/YNjY0yCt+/3QXmfWYZ9fqg5w07+J7Jnb1ZRr9d926Cea9Z
RrM76O6GP93RvJYZwMb/+02xMO83s/vx69NJGH+d3XmHjG4Pm3oR5j1nGU3P
SsuDu61Nurw0WEaL1rR7CvO+MxuPq5wr4JSHjVm3d8uoKDPxO8x7zzIKGPm5
RTX2O4XdJVGYjDz0VXow7z/LKKW/S0+4xP/YhY37ZLTieJgK5j1oGZUvzh4C
L3/26/zzA+z5BrwaC/M+tIzG/f4zHdbqOz5jQCz7enc7ucK8Fy2jT397+8Ax
2w+e23NYRkfCFf4w70ez9WyPajds/urb2eqjMpr3UxoL8560jOLyepyE8yys
U8fEyyiirc4FmPelZez1c81N2Hn3/pS4JBn9eP+oCOa9aRkF7Up+A9dWVp/+
c1pG4tObv8K8P83Wj/Hqv3AQjTjlkMrmn4dBu4/qph61jC51Ku4Gm+zbm3T2
nIzajNwrhXmfmj2+39YD4IxPFQm6mTLaZfXdCua9arZ+dI9SwxOsB8cvusT2
ux1DnGHer5ax73uL3OE3McHHcy/LyMR00RqY96zZ/uD+Yxu8qrbsaM9rMvId
uy4c5n1rGdnc/hMH607od2TNDRlt/7oyBea9axmZ53zIgo8e3Xa4KE9GVuSY
D/P+tYxSl1x5Cg9ueHawz122PtqaVMC8hy2jvS/9auCCKf/FBhXI6Ku8oNkn
dVMfm93vvsa6sGvSpuiKhzKy/bXACOa9bLb/bjghhRtaFB2wfCIjg9uv+8O8
ny0jzZKuVnCok3R/9DMZPcuwngzznja7XnOWzoKl/w6EktH3p3sWw7yvLSMd
4emVcHab++F2r9j6Oyp3C8x72+z6D3u0B7af2zvs1FsZOXV8GQvz/raMjK6/
SoKrzvuGtn4noxaOpedh3uNm47fg8XV4Q4e83fM/yOiy6a1CmPe52fqz6mwp
rO+G3yCxx3sqshrmvW4ZDSpcWQdj9hp+kxFVTW71Wd3U72bzrVbQCbbsei3I
p1ZG5+q+9IR5zxuvTzKU8BPPLjvu/5JRbO2qQTDve7P78c3cGva4sShQ3sD+
veadHcx732z/rN/nDGsYZwVs/cvuv7alO8z733IqFr1dBe/37bC1rIWcNCdv
2grzHricQoIMQmHTu/M3D2klJ+vnCbEw74PL6bNl/yT4ujBjU0QbOU3JuZAB
8164nAY7D86FndZqb/yqIyc3o7QCmPfD5XS4TvIC/nc8egc5nWgIr4J5T1xO
wySNtfC/t093klPPtXNafFE39cXlpNd4SRf+9+vVrnK6k9zJCOa9cTm1D3OR
wKnPpq+e1U1Oe08lm8O8P84+/u93gm36Jq0830NOVkH9xsO8Ry6nMntPB/jl
9kbfTiZyip4d5wLzPrmclEkFy2CfV2ofT6GcRg2rWwvzXrmcIrp23w5rDzrm
lSeR04Ohg8Jh3i+X07HkyYfhQ7t/LRMq5HTZa94pmPfM5ez1l2cmPODduKUb
/pPTuu8+12HeN5eT73nfB3A+HfR4ZianuU+WvYB571xOFVNcq+C5+74t6d9f
Tqf6TKuFef9cTo7LRjT/iv3u0+jFuy3ktFtf1A7mPXQ51fbWNISDrfe7fRgi
J1nUCyHM++hyur3xTB9YEFvtak1yWvN4w1CY99Ll9DjWxgbOrKUFh0fKya+k
rT3M++ly0gjNc4YnTdg7v2G0nFrnbFoC8566nERL+62Ey49WzJ0+Vk5fol75
w7yvLqdm47bvgv0aBs1JHS+n9+sVB2DeW2f3Y/CtY7CePd5BKKeYDc5nYN5f
l1OQ+usl+ERS2Uy3KXKKSl13C+Y9djnNPKb5CB6q0W/GtWlymqMMKIV5n11O
prYtPsCFTtscjZ3Y9Wy++gfMe+1ycrF/3/wb9rt/A1BOJaOntYN5v11ONk8v
GcCNbf6b9miOnProGgth3nOXk+H71aZw2NxN9qYuctrmWTAY5n13Of2JMbGG
5ZmP7HYsZF7joYZ5711O2q3TZsJXOkjV5YvldGhM7UKY99/lNHKomTc8zc1v
0ghPOS1+t3A9zHvwcgqfuH87XH353oSo5XKi5dfDYN6Hl9Mru+qDsH/X3uN/
+Mjpe227JJj34uX0aaY8HTZY6murXiWnMTssr8K8Hy+nFRun3IFP3bhlc9KP
3T/LOU9g3pOXk9GDha9hK+PuY7Q2yGlVn8UfYd6Xl5P3vIW/4GLfpaPn+ctp
9SJnjRp1U29eTr/H2OnCS+/mWGVtZfej2QhDmPfn5WQSLhXCLUVdRhpsl9PB
1jqmMO/Rs/Ez6/0gOGrtohHeO9n4Db82CuZ9ejklnt03CTZ7dGn4vRA5Dbrg
6gTzXr2cgpP6LIBvKjoMk+2Vk9aO2qUw79fLSdfh3Bp41ub5Q7ZEyKmFwbKt
MO/Zs69/R7QbrnmWPqh0v5zMVz4+APO+vZxURv7H4O19tS0Gx8hpzwVpCsx7
93K6OP32Bdh4x6wB4Yfk1KrW9Tpc1X/buZFxcsoPa7wPp71K6ffliJzmD9rz
DN4Q/OxszDE5ScqNy2HbQZrm407IyePAic+w/r9fMLD5M0NRD5ftnm52PFFO
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
uTKgnL/FGD2dM9K4YSd7vp+016H/D8mhZ6s=
         "]]}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]]}, {}, {}, {}}, {{
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]]}, {
        Directive[
         PointSize[0.003666666666666667], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]]}, {}, {}, {}}}, {{}, {}}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 1.0628663044296442`}, 
     DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.00025}, {1.0628663044296442`, 1.1450275303601642`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"N=5\"", "\"N=15\""}, "PointLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"PointSize", "[", "0.003666666666666667`", "]"}], 
                   ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8331706813829327`*^9, {3.833170734461063*^9, 3.833170806228248*^9}, 
   3.8331738134055853`*^9, 3.8331738655518293`*^9, 3.833173899869274*^9, 
   3.8331743036962104`*^9, 3.833174366687027*^9, 3.83317440516115*^9, 
   3.833174483053956*^9, 3.833174771919526*^9, 3.833869508015072*^9, 
   3.8338697347665963`*^9, 3.8346672416654973`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"d4f31176-0700-40f6-bb7a-cbda7497fc67"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Magnitude of the end points", "Subsubsection",
 CellChangeTimes->{{3.8331739928560934`*^9, 
  3.8331740022956085`*^9}},ExpressionUUID->"0ea7f6fb-29a9-4767-abcd-\
8367596287cc"],

Cell["N=5 in Red, and N=15 in Blue", "Text",
 CellChangeTimes->{{3.8346673330612373`*^9, 
  3.834667344852147*^9}},ExpressionUUID->"74fd3a41-61b9-4697-8954-\
c9fc97df8366"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MagnN15", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"dt\[Sigma]rN15", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
        SuperscriptBox["10", "6"]}], ",", 
       RowBox[{"dt\[Sigma]rN15", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2", ",", 
          RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.833174004773099*^9, 3.8331740897689276`*^9}, {
  3.833174131352758*^9, 3.8331741315504227`*^9}, {3.833174278378359*^9, 
  3.833174279867349*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"fc7584bd-2ff3-441b-bc20-62ab0ff53557"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MagnN5", " ", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"dt\[Sigma]rN5", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}], "*", 
        SuperscriptBox["10", "6"]}], ",", 
       RowBox[{"dt\[Sigma]rN5", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2", ",", 
          RowBox[{"-", "1"}], ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "500"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8331740718062677`*^9, 3.8331740878131704`*^9}, {
  3.833174134490034*^9, 3.833174137452718*^9}, {3.8331742815574813`*^9, 
  3.8331742831115017`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"c2bf3177-6089-4ab1-9af0-a54665820c20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pltcompareN", "=", 
  RowBox[{"Show", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ListLinePlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MagnN5", ",", "MagnN15"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Red", ",", "Blue"}], "}"}], "Frame"}], "\[Rule]", 
         "True"}]}], ",", 
       RowBox[{"FrameTicksStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "13"}], "]"}]}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(t\), \(~\)]\)(\[Times] \
\!\(\*SuperscriptBox[\(10\), \(-6\)]\))\>\"", ",", "16"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Sigma]\), \(~\)], \(r\)]\
\)'(\!\(\*SubscriptBox[OverscriptBox[\(r\), \(~\)], \(N\)]\))\>\"", ",", 
            "16"}], "]"}]}], "}"}]}]}], "]"}], ",", 
     RowBox[{"ListPlot", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"MagnN5", ",", "MagnN15"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
       RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Red", ",", "Blue"}], "}"}]}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*OverscriptBox[\(t\), \(~\)]\)(\[Times] \
\!\(\*SuperscriptBox[\(10\), \(-6\)]\))\>\"", ",", "16"}], "]"}], ",", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[OverscriptBox[\(\[Sigma]\), \(~\)], \(r\)]\
\)'(\!\(\*SubscriptBox[OverscriptBox[\(r\), \(~\)], \(N\)]\))\>\"", ",", 
            "16"}], "]"}]}], "}"}]}]}], "]"}]}], "}"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8331740927664256`*^9, 3.8331742740343485`*^9}, {
   3.8331743426226177`*^9, 3.8331743839211445`*^9}, {3.8331744160824137`*^9, 
   3.833174425573185*^9}, {3.833174475939271*^9, 3.8331744938164062`*^9}, 
   3.8331747492867575`*^9, {3.8338694511521263`*^9, 3.8338694903259826`*^9}, {
   3.8338697078570614`*^9, 3.8338697135447664`*^9}, {3.834667323877716*^9, 
   3.8346673258613944`*^9}},ExpressionUUID->"79f98fce-6d2f-4739-ac12-\
98eb1816ba1d"],

Cell[BoxData[
 GraphicsBox[{{{}, {{{}, {}, 
      {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6], LineBox[CompressedData["
1:eJw9mXlcTP3/vytpU1q0l7Tvyyw1M7bOkywhW3e3FnxIKjcRcpMsLdzcEm5b
JBEhW4mUnVTSvi9K1khJZK8kXz/er9/802MenbnmOtfrfebMOWOyINQzUEZK
SuqTtJTU//tLD8XGGiOvMbe4hF+PM9zI9fvv8F1z2PNrnGLasPA5d+5ywl+P
PM73Qu1haas89v8i7mPm2cota/K537RKrsAno7z70j22fQ33I/xg5NCHBVzQ
r0c9Z6MguzL6/X32+kZuY9EH7ZivhVzpr0czN3fAvPN/vi1ivKdc9VSDv9Ub
irlDv7Z/xlVVJ59Pv1TC+C1cQGLgP4NjStnrX3CbrP9b/H18GXu/Vi6hvzzd
5UcZ47VxFjM23vdPL2fv386drTtnZ+RVwQl+8Tq4rM3S7b1dFYz3hrMVTdh4
e2wl473ljGUtbqluq2S8Lq5UUWXC2ZJKtn0Xt/druFWeUhXzfc+td39dtH1C
FXv9By7SP2acILKK+X/kcobFpj67XMV4n7gz8YGuua+qGO8TVy12Ku7RqWa8
z5znCKnsc+OrGe8L59udM75neTXjfeVCuyQ50oeqGa+byw7r2fc8p5or+8Xr
5orWndp45WU12/8eTveiyvFDCjWM18v1RS45e8KmhvX4xs1I4rW8ca9hvD4u
V23X9G1BNcyvjzP1VM7ZGVPDeN+5b9+ntqolEa+fE1ZMDzbNrmF+P7jIa3Zv
asuIJwUT+YP84S9oeymcHTJSe14P8aXQt6cr9U+VWvZ6aYSY6vHsjGtZD2ks
N1XiOvm1jCcDueUXs0+PrWU8GThHbqz9y7OW7b8Mpm5OHjHKn3gDIL6Z2m0b
Wsv8B2BiVPxerCeeLKR3LlXZ+i/xZKHTMPqN/L5a5ieLcn4RSo8QbyAGLLx+
vvk0+Q1EL9YvGnOJeHLIepLtLnODeHJQ9VybZ5lHPDlMuKH1OauYePJ4aJx1
IruK/OTR1ZLq7vSAeAp4EbxGyfIx8RRwVOVWcXIL7a8CRvjlmp9sI54ilCo7
V0g6iaeI2Ns/Sue9J54S7qqYahl/Jp4SBleVdW3oJj8l7JFsq9zwrZatj0H4
6B713qyf9ncQ3ON7562SqmM8ZahqZfSslKljPGUEfugPNZOtYzxlXOdkJ28b
WMf8VNBnnNCaKlfH/FQQrSbaGCNfx/349VDBm/Rb5oYKxBuMno28kjUKxBuM
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
m7XLyc8W71oOBHstJT9b6AotefzFtP5sUT7hhptaMPnZwqbBL/l9APnZQWaH
wri6+eRnhySDQvsbc9k8hHZQ80nySfGj9WeHzTPi7u3wJj87HPdPWBHhRceH
HW5MKfL7ayYdH3Y4M8Ek0m8a+dkhUTO1eeoU8rNDrKb/Cjd38rND8h+zRo4c
T372iE7aKXEZS3728IrTCOZz1M8enQc68p1GkZ893piZz+ANJz977NxxX04o
Ij971Eqet4qF1M8eNw9Hv3XlkZ894qdfNnB3ID97hKrHhvxhS34//98w5Ml8
K/JzgEd9wIrl5uTngPOxO0xiTMjPAY/yTnbuN6L5OmD1udyacwbk54BR5d+q
8nRpvg6IMlvc+kiL/BxQpWmt2qtBfg5o2zxzsq4arT8HWNcPiJeokJ8Dhr+f
2+WnRMeHA/ZPjvKOlKfjwxEj2uKKTsqSnyOuBqWOK5cmP0cs7P9U0N1P92Mc
kbv18DSLPnb/JcoRryILGv/oqWJ+jshWTgra/IXdr8l0hK2Ux8fsj3R/xhGL
m6U2dnQxXqsjTta/ljV9S/dznODfNGKLXwfj6TnBIs5Man8b3f9xwhiPxuVV
L6vYfJ3wTLKnXrWF/JyQyNviNOMp+TlBs/bt2j2Pqtj3Oyco/St/ub6J/Jzw
cLVKs+EDxit1wpw9XNfCuiou8JefE3bue/w2vZr8eNCRdqjvrWDbK/MwxTL0
hHsZ+fIwyKjD+2Ax87HkQau87W37ffLnIaT9YvDoe4wHHtre7c7Zk0v7w4Ov
U/3X9juM58uDaV7ZILdbtH88FO0r6k26znhhPOyabZjXe6WKreef/z+sH+Cb
xXhxPMSd02+8donur/3knV5lZpjBeKd40IyKQVQa9eBha+dRx9azzC+Hh/zV
tm+mnqb58eC9NHrNlZPMr5GHms6BFaYpVex8y8Ptx/rvdyUz3kceXr4zb+5P
on58RCXE7gxNZDxlPlQMLss9P0j9+EiOGOQ2K5768XFiU9+Y0r3Uj4+Me5+k
x+2mfnxs3hsQfWsn9eOjTvr6bUkc9ePjycvFV7O2UT8+wmpfhzhvpX58/BiW
0XR5M62Xn88bBFLiGOrHR0PBm4fXI6kfHwNW+IZgA/XjQ2vIlwv3I6gfH1uS
x5ycEc7mcYePxrs3Jz/8m9YXH2dq2o8EhzFeIx+SFx7Jn5fT8cBH5KUlU/9Z
Rv34sDtfdkI7hPoJwHvz7cSZv6ifAF2SaA/XYOonwEyZ1wm1C9k8LAUonJ+/
PWQB9RNgjUaysdx86ifAuojB3sfmMp6HALuPHHdwnU39BHC3eH+82Yf6CXDI
67+s9bOonwBHVHUXGnlRPwEs60zS7s6kfgKcvOW+K2g6fT4I4LvWRlFlKvUT
4N9pC/SyJlM/AfJ19t7+nzutPwGSx8z9qjiB+gmwviggN9uN+gnwccQUo8Ax
1E+AienXFLU46ifA1YJZmwpGsXn8EMAuo2Tb2hHUT4hNQ/MMHCWMpyeExcR2
8QsXWn9CWLZ1NCcKqZ8QvNERin/yqZ8Q42XG31R1on5CvFve/7HEnvoJscDV
78I2WzaPICGCElQ63a2pnxAXrSvOKVpSPyFeKXi/LjFjvDghmor/l7rLhPoJ
MWXFsWdew6ifEDqhDw8YDKV+QiicKi5s0ad+QvQGOIal6VI/IXb5398frk3H
rxBqOd5O4zWpnxDN8imuQzSonxCOlstyn6vS+nNGzJLIa5kq9PnnjJBtR0y3
DKJ+zpDs3tfnq0j9nPHwvd0EJ3nq54yav3n9AweyeXDOODIm1OyxDPVzhnx1
9uUrUozn64yPPfUZe/rp9wRnPHuarB3aV8n6OeOd1KsXHr3s94UoZyhZbNC3
72a/L8Q5IyBYkq38pZL1c/75+fou++3Hyt/zOOWMdqe1BtXvGS/TGSmBF55n
v2O8HGdYaoUMSuqk3yucMb0odt/mDsZrdMbamW3rl7Yzv1ZnpN9ZkOf9ivE+
OuNHUGOQ20v6/cMFFY32QbyWStbPBS9fueYYPWM8PRd0HP4QNvgJ41m6oMHV
PupHM+MJXXBzSlXL+6ZK1s8FbeGFSS8fMJ6HCywzes431Veyfi6wVZ2mVlVL
/Vxg/fJCQWE19XPBqotKFXcrGS/SBWkmU6xvllM/FySqzau6Usp4CS64t8ml
6HIx451ywaGztwdnFlI/F0xs7ki+VED9XOAef2FjZj71c8Hgdd9PZeVSPxd0
Ti/WvZbD5tHqAvm+QTW3blM/F/hvuVabd5P6ibBWs8Sw5Dr1EyG9bfjZmqvU
T4Sq+VLrH2VTPxGCP+ntbrtcyb6/ijBRuKnt0yXGgwgq+cOjZS5SPxFOLBjl
p36B8Xx/8h7HrjRJo34izNe3LBKco34i9MirzR1/hvqJUHxmioNvKuPFiVCm
+kiy7CT1E0FnVtHGzSnUT4SXKdr9iceonwgDbEuzLh9lvDsi6Jp8OFGeRP1E
yCjcXdyeyHiNIgQEZlnIHaL197MHtyjL7CD1+7n/x7PDx8ZTPzGONaYtW7CP
8ZTFuMGbE79pD/UTI+d95duT/1E/MTwCDNcU7aT1J8ap+9Md38ZRPzH+nr1h
iOZ26ieGlNdVi5HbqJ8Ypo81FwZspX5ivDM8XRb3D5tHmBgx1v/6X9lEx68Y
k5RLjVqiqZ8YRgXbZdWi6PgVo3bcU3XXjdRPjIaglvFL11M/Mfg9F44mRVA/
MT5l+RtVhDNeqRjtY7XuSq+hfmKU8dq2uPxN/cSI7eletjiM+okx9UdQePIK
6ieBxXbP4w2h1E+CjJLmDtVljKcngWutldekEOonwcTEWU2bFlM/Ccb1xG24
s4j6SXA19d2oviDG85CghTuhMyKQ+kkgGF6lvDaA+kmQ1JZkcM2f1p8EEZEC
t9551E+CcsWrMaP+R/0kqFnq0xg5h/pJMHyx64R8P+onwaT9+wsVfdk8MiX4
Njt23gxvOn4lCJKarHTwT+ongUKCTOHTP+j4lSBEteWArSf1k0BumMHav2dQ
PwnWez1cfHdaJfd/PTAOlQ==
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6], LineBox[CompressedData["
1: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
g+o9z/8t5/4PjYP/Aw==
        "]]}}, {
      {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6]}, 
      {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6]}}, {
      {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6]}, 
      {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6]}, {}, {}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6]}, 
      {RGBColor[0, 0, 1], PointSize[0.006944444444444445], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}, {{}, {{
      {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6], PointBox[CompressedData["
1:eJw9mXlcTP3/vytpU1q0l7Tvyyw1M7bOkywhW3e3FnxIKjcRcpMsLdzcEm5b
JBEhW4mUnVTSvi9K1khJZK8kXz/er9/802MenbnmOtfrfebMOWOyINQzUEZK
SuqTtJTU//tLD8XGGiOvMbe4hF+PM9zI9fvv8F1z2PNrnGLasPA5d+5ywl+P
PM73Qu1haas89v8i7mPm2cota/K537RKrsAno7z70j22fQ33I/xg5NCHBVzQ
r0c9Z6MguzL6/X32+kZuY9EH7ZivhVzpr0czN3fAvPN/vi1ivKdc9VSDv9Ub
irlDv7Z/xlVVJ59Pv1TC+C1cQGLgP4NjStnrX3CbrP9b/H18GXu/Vi6hvzzd
5UcZ47VxFjM23vdPL2fv386drTtnZ+RVwQl+8Tq4rM3S7b1dFYz3hrMVTdh4
e2wl473ljGUtbqluq2S8Lq5UUWXC2ZJKtn0Xt/druFWeUhXzfc+td39dtH1C
FXv9By7SP2acILKK+X/kcobFpj67XMV4n7gz8YGuua+qGO8TVy12Ku7RqWa8
z5znCKnsc+OrGe8L59udM75neTXjfeVCuyQ50oeqGa+byw7r2fc8p5or+8Xr
5orWndp45WU12/8eTveiyvFDCjWM18v1RS45e8KmhvX4xs1I4rW8ca9hvD4u
V23X9G1BNcyvjzP1VM7ZGVPDeN+5b9+ntqolEa+fE1ZMDzbNrmF+P7jIa3Zv
asuIJwUT+YP84S9oeymcHTJSe14P8aXQt6cr9U+VWvZ6aYSY6vHsjGtZD2ks
N1XiOvm1jCcDueUXs0+PrWU8GThHbqz9y7OW7b8Mpm5OHjHKn3gDIL6Z2m0b
Wsv8B2BiVPxerCeeLKR3LlXZ+i/xZKHTMPqN/L5a5ieLcn4RSo8QbyAGLLx+
vvk0+Q1EL9YvGnOJeHLIepLtLnODeHJQ9VybZ5lHPDlMuKH1OauYePJ4aJx1
IruK/OTR1ZLq7vSAeAp4EbxGyfIx8RRwVOVWcXIL7a8CRvjlmp9sI54ilCo7
V0g6iaeI2Ns/Sue9J54S7qqYahl/Jp4SBleVdW3oJj8l7JFsq9zwrZatj0H4
6B713qyf9ncQ3ON7562SqmM8ZahqZfSslKljPGUEfugPNZOtYzxlXOdkJ28b
WMf8VNBnnNCaKlfH/FQQrSbaGCNfx/349VDBm/Rb5oYKxBuMno28kjUKxBuM
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
m7XLyc8W71oOBHstJT9b6AotefzFtP5sUT7hhptaMPnZwqbBL/l9APnZQWaH
wri6+eRnhySDQvsbc9k8hHZQ80nySfGj9WeHzTPi7u3wJj87HPdPWBHhRceH
HW5MKfL7ayYdH3Y4M8Ek0m8a+dkhUTO1eeoU8rNDrKb/Cjd38rND8h+zRo4c
T372iE7aKXEZS3728IrTCOZz1M8enQc68p1GkZ893piZz+ANJz977NxxX04o
Ij971Eqet4qF1M8eNw9Hv3XlkZ894qdfNnB3ID97hKrHhvxhS34//98w5Ml8
K/JzgEd9wIrl5uTngPOxO0xiTMjPAY/yTnbuN6L5OmD1udyacwbk54BR5d+q
8nRpvg6IMlvc+kiL/BxQpWmt2qtBfg5o2zxzsq4arT8HWNcPiJeokJ8Dhr+f
2+WnRMeHA/ZPjvKOlKfjwxEj2uKKTsqSnyOuBqWOK5cmP0cs7P9U0N1P92Mc
kbv18DSLPnb/JcoRryILGv/oqWJ+jshWTgra/IXdr8l0hK2Ux8fsj3R/xhGL
m6U2dnQxXqsjTta/ljV9S/dznODfNGKLXwfj6TnBIs5Man8b3f9xwhiPxuVV
L6vYfJ3wTLKnXrWF/JyQyNviNOMp+TlBs/bt2j2Pqtj3Oyco/St/ub6J/Jzw
cLVKs+EDxit1wpw9XNfCuiou8JefE3bue/w2vZr8eNCRdqjvrWDbK/MwxTL0
hHsZ+fIwyKjD+2Ax87HkQau87W37ffLnIaT9YvDoe4wHHtre7c7Zk0v7w4Ov
U/3X9juM58uDaV7ZILdbtH88FO0r6k26znhhPOyabZjXe6WKreef/z+sH+Cb
xXhxPMSd02+8donur/3knV5lZpjBeKd40IyKQVQa9eBha+dRx9azzC+Hh/zV
tm+mnqb58eC9NHrNlZPMr5GHms6BFaYpVex8y8Ptx/rvdyUz3kceXr4zb+5P
on58RCXE7gxNZDxlPlQMLss9P0j9+EiOGOQ2K5768XFiU9+Y0r3Uj4+Me5+k
x+2mfnxs3hsQfWsn9eOjTvr6bUkc9ePjycvFV7O2UT8+wmpfhzhvpX58/BiW
0XR5M62Xn88bBFLiGOrHR0PBm4fXI6kfHwNW+IZgA/XjQ2vIlwv3I6gfH1uS
x5ycEc7mcYePxrs3Jz/8m9YXH2dq2o8EhzFeIx+SFx7Jn5fT8cBH5KUlU/9Z
Rv34sDtfdkI7hPoJwHvz7cSZv6ifAF2SaA/XYOonwEyZ1wm1C9k8LAUonJ+/
PWQB9RNgjUaysdx86ifAuojB3sfmMp6HALuPHHdwnU39BHC3eH+82Yf6CXDI
67+s9bOonwBHVHUXGnlRPwEs60zS7s6kfgKcvOW+K2g6fT4I4LvWRlFlKvUT
4N9pC/SyJlM/AfJ19t7+nzutPwGSx8z9qjiB+gmwviggN9uN+gnwccQUo8Ax
1E+AienXFLU46ifA1YJZmwpGsXn8EMAuo2Tb2hHUT4hNQ/MMHCWMpyeExcR2
8QsXWn9CWLZ1NCcKqZ8QvNERin/yqZ8Q42XG31R1on5CvFve/7HEnvoJscDV
78I2WzaPICGCElQ63a2pnxAXrSvOKVpSPyFeKXi/LjFjvDghmor/l7rLhPoJ
MWXFsWdew6ifEDqhDw8YDKV+QiicKi5s0ad+QvQGOIal6VI/IXb5398frk3H
rxBqOd5O4zWpnxDN8imuQzSonxCOlstyn6vS+nNGzJLIa5kq9PnnjJBtR0y3
DKJ+zpDs3tfnq0j9nPHwvd0EJ3nq54yav3n9AweyeXDOODIm1OyxDPVzhnx1
9uUrUozn64yPPfUZe/rp9wRnPHuarB3aV8n6OeOd1KsXHr3s94UoZyhZbNC3
72a/L8Q5IyBYkq38pZL1c/75+fou++3Hyt/zOOWMdqe1BtXvGS/TGSmBF55n
v2O8HGdYaoUMSuqk3yucMb0odt/mDsZrdMbamW3rl7Yzv1ZnpN9ZkOf9ivE+
OuNHUGOQ20v6/cMFFY32QbyWStbPBS9fueYYPWM8PRd0HP4QNvgJ41m6oMHV
PupHM+MJXXBzSlXL+6ZK1s8FbeGFSS8fMJ6HCywzes431Veyfi6wVZ2mVlVL
/Vxg/fJCQWE19XPBqotKFXcrGS/SBWkmU6xvllM/FySqzau6Usp4CS64t8ml
6HIx451ywaGztwdnFlI/F0xs7ki+VED9XOAef2FjZj71c8Hgdd9PZeVSPxd0
Ti/WvZbD5tHqAvm+QTW3blM/F/hvuVabd5P6ibBWs8Sw5Dr1EyG9bfjZmqvU
T4Sq+VLrH2VTPxGCP+ntbrtcyb6/ijBRuKnt0yXGgwgq+cOjZS5SPxFOLBjl
p36B8Xx/8h7HrjRJo34izNe3LBKco34i9MirzR1/hvqJUHxmioNvKuPFiVCm
+kiy7CT1E0FnVtHGzSnUT4SXKdr9iceonwgDbEuzLh9lvDsi6Jp8OFGeRP1E
yCjcXdyeyHiNIgQEZlnIHaL197MHtyjL7CD1+7n/x7PDx8ZTPzGONaYtW7CP
8ZTFuMGbE79pD/UTI+d95duT/1E/MTwCDNcU7aT1J8ap+9Md38ZRPzH+nr1h
iOZ26ieGlNdVi5HbqJ8Ypo81FwZspX5ivDM8XRb3D5tHmBgx1v/6X9lEx68Y
k5RLjVqiqZ8YRgXbZdWi6PgVo3bcU3XXjdRPjIaglvFL11M/Mfg9F44mRVA/
MT5l+RtVhDNeqRjtY7XuSq+hfmKU8dq2uPxN/cSI7eletjiM+okx9UdQePIK
6ieBxXbP4w2h1E+CjJLmDtVljKcngWutldekEOonwcTEWU2bFlM/Ccb1xG24
s4j6SXA19d2oviDG85CghTuhMyKQ+kkgGF6lvDaA+kmQ1JZkcM2f1p8EEZEC
t9551E+CcsWrMaP+R/0kqFnq0xg5h/pJMHyx64R8P+onwaT9+wsVfdk8MiX4
Njt23gxvOn4lCJKarHTwT+ongUKCTOHTP+j4lSBEteWArSf1k0BumMHav2dQ
PwnWez1cfHdaJfd/PTAOlQ==
        "]]}, 
      {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6], PointBox[CompressedData["
1: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
g+o9z/8t5/4PjYP/Aw==
        "]]}}, {
      {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6]}, 
      {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6]}, {}, {}, {}}, {
      {RGBColor[1, 0, 0], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6]}, 
      {RGBColor[0, 0, 1], PointSize[0.004583333333333334], AbsoluteThickness[
       1.6]}, {}, {}, {}}}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      StyleBox[
      "\"\\!\\(\\*SubscriptBox[OverscriptBox[\\(\[Sigma]\\), \\(~\\)], \
\\(r\\)]\\)'(\\!\\(\\*SubscriptBox[OverscriptBox[\\(r\\), \\(~\\)], \
\\(N\\)]\\))\"", 16, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox[
      "\"\\!\\(\\*OverscriptBox[\\(t\\), \\(~\\)]\\)(\[Times] \
\\!\\(\\*SuperscriptBox[\\(10\\), \\(-6\\)]\\))\"", 16, StripOnInput -> 
       False], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[
    GrayLevel[0], 13],
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 24.95}, {0, 0.3990709326321412}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8331741016246634`*^9, 3.833174107135359*^9}, {
   3.833174139656989*^9, 3.833174142938691*^9}, {3.833174228090106*^9, 
   3.8331742491434245`*^9}, 3.8331743040588617`*^9, {3.833174347941591*^9, 
   3.833174366993267*^9}, {3.8331744056439323`*^9, 3.833174417130783*^9}, {
   3.833174483444994*^9, 3.8331744943824077`*^9}, 3.8331747724379053`*^9, 
   3.833869508403149*^9, 3.8338697352052627`*^9, 3.834667242150298*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"85b2901c-dd12-4d2b-ad05-d80668e9cbe6"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Export", "Subsection",
 CellChangeTimes->{{3.8346668797229557`*^9, 
  3.834666880339324*^9}},ExpressionUUID->"c3783104-9643-4dec-81d8-\
6851a895549d"],

Cell["Uncomment if you want to export the plot", "Text",
 CellChangeTimes->{{3.834658407972385*^9, 
  3.8346584139285994`*^9}},ExpressionUUID->"d299d4e1-c40d-4fbc-8409-\
5e7a14650edf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Comparison-N-sigmar-edge.eps\>\"", ",", "pltcompareN"}], 
   "]"}], "*)"}]], "Input",
 CellChangeTimes->{{3.833174443939663*^9, 3.8331744618005238`*^9}, 
   3.834667238429087*^9},ExpressionUUID->"ceb421c4-c572-4fe7-90be-\
b92ba05b1eee"]
}, Closed]]
},
WindowSize->{574.8, 579.6},
WindowMargins->{{-4, Automatic}, {Automatic, 0}},
Magnification->0.75,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a4c18756-f8a6-44a5-ba01-79f3fcb692d5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 273, 4, 21, "Input",ExpressionUUID->"d527c344-456e-44c7-bc8a-06436c33c624"],
Cell[834, 26, 271, 5, 21, "Input",ExpressionUUID->"6d2dcb3f-0e52-4a5c-930a-887e2ad29a23"],
Cell[CellGroupData[{
Cell[1130, 35, 159, 3, 41, "Subsection",ExpressionUUID->"e8db0495-65c5-4f89-b28b-053b122f932a"],
Cell[CellGroupData[{
Cell[1314, 42, 163, 3, 35, "Subsubsection",ExpressionUUID->"5a0e717d-effb-4e3d-8079-c551469d7665"],
Cell[1480, 47, 221, 5, 26, "Text",ExpressionUUID->"19937bda-e531-47c1-8f27-3be234623592"],
Cell[1704, 54, 647, 16, 36, "Input",ExpressionUUID->"affc4620-f9e8-4013-b4ca-906665b30baa"],
Cell[2354, 72, 425, 10, 21, "Input",ExpressionUUID->"f3993544-def1-458f-a298-628affaad509"],
Cell[2782, 84, 1036, 20, 21, "Input",ExpressionUUID->"c0386ad5-6e16-4adc-906f-2e1823014001"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3855, 109, 164, 3, 35, "Subsubsection",ExpressionUUID->"bf032dbf-988e-44f9-a578-4dc645802aaf"],
Cell[4022, 114, 233, 6, 26, "Text",ExpressionUUID->"386d9832-8241-4a08-88a1-84cd65db4f2b"],
Cell[4258, 122, 763, 20, 64, "Input",ExpressionUUID->"98c3e79f-ac80-44dc-8da4-cdbecb591216"],
Cell[5024, 144, 463, 10, 21, "Input",ExpressionUUID->"35938154-9912-4be1-9488-4efdfac2a738"],
Cell[5490, 156, 1058, 20, 21, "Input",ExpressionUUID->"b4b002f1-075f-4cd0-ba19-e06d0a83a0ea"],
Cell[6551, 178, 195, 3, 26, "Text",ExpressionUUID->"5919e177-0f0b-48bf-8425-c839368d7530"],
Cell[6749, 183, 597, 14, 36, "Input",ExpressionUUID->"e6776918-6339-4adf-bbce-25cb3712d15d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[7395, 203, 165, 3, 30, "Subsection",ExpressionUUID->"1c37448f-4f59-4beb-bb91-1341ed7c802b"],
Cell[7563, 208, 237, 6, 26, "Text",ExpressionUUID->"35737232-5c0e-44aa-bd8a-cef9ec27a0a9"],
Cell[7803, 216, 1315, 36, 66, "Input",ExpressionUUID->"b8210868-875a-46d6-90e9-a9868a2302b8"],
Cell[9121, 254, 1315, 36, 66, "Input",ExpressionUUID->"dcc23952-ac37-4dbf-8aca-ed9d0ac2fbf3"],
Cell[CellGroupData[{
Cell[10461, 294, 198, 3, 35, "Subsubsection",ExpressionUUID->"a8505cf6-21bd-4b03-a57b-f05801d9f845"],
Cell[CellGroupData[{
Cell[10684, 301, 771, 14, 36, "Input",ExpressionUUID->"39c0ae0e-2d99-4e60-8bba-686ae59f2cf1"],
Cell[11458, 317, 49091, 1023, 186, "Output",ExpressionUUID->"cd805f7a-ab81-4345-bc6f-4c39136a68e5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60586, 1345, 718, 13, 36, "Input",ExpressionUUID->"992ff666-3af1-4d68-97a6-cc06c8b9820c"],
Cell[61307, 1360, 43979, 952, 182, "Output",ExpressionUUID->"28f364b6-94fa-4071-af71-5e3745524df0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105323, 2317, 375, 8, 21, "Input",ExpressionUUID->"9a0605bd-cfa4-4893-8854-069820e03da3"],
Cell[105701, 2327, 91934, 1924, 186, "Output",ExpressionUUID->"ac365d46-6a46-4e7f-902a-fa3fb91c992d"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[197684, 4257, 222, 4, 30, "Subsubsection",ExpressionUUID->"38ff5cd4-6c40-4441-b6f8-5b76fa3a392c"],
Cell[CellGroupData[{
Cell[197931, 4265, 713, 16, 36, "Input",ExpressionUUID->"c3ce7216-c351-4cb5-9385-3a0bb60052b9"],
Cell[198647, 4283, 172852, 2902, 177, "Output",ExpressionUUID->"d4f31176-0700-40f6-bb7a-cbda7497fc67"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[371548, 7191, 182, 3, 30, "Subsubsection",ExpressionUUID->"0ea7f6fb-29a9-4767-abcd-8367596287cc"],
Cell[371733, 7196, 172, 3, 26, "Text",ExpressionUUID->"74fd3a41-61b9-4697-8954-c9fc97df8366"],
Cell[371908, 7201, 819, 21, 23, "Input",ExpressionUUID->"fc7584bd-2ff3-441b-bc20-62ab0ff53557"],
Cell[372730, 7224, 820, 21, 23, "Input",ExpressionUUID->"c2bf3177-6089-4ab1-9af0-a54665820c20"],
Cell[CellGroupData[{
Cell[373575, 7249, 2619, 60, 131, "Input",ExpressionUUID->"79f98fce-6d2f-4739-ac12-98eb1816ba1d"],
Cell[376197, 7311, 30493, 526, 192, "Output",ExpressionUUID->"85b2901c-dd12-4d2b-ad05-d80668e9cbe6"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[406751, 7844, 156, 3, 30, "Subsection",ExpressionUUID->"c3783104-9643-4dec-81d8-6851a895549d"],
Cell[406910, 7849, 184, 3, 26, "Text",ExpressionUUID->"d299d4e1-c40d-4fbc-8409-5e7a14650edf"],
Cell[407097, 7854, 308, 7, 21, "Input",ExpressionUUID->"ceb421c4-c572-4fe7-90be-b92ba05b1eee"]
}, Closed]]
}
]
*)

